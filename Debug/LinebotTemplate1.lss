
LinebotTemplate1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00001d3e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000034  00802000  00001d3e  00001dd2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000015  00802034  00802034  00001e06  2**0
                  ALLOC
  3 .comment      0000008c  00000000  00000000  00001e06  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001e94  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000200  00000000  00000000  00001ed4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00004bcb  00000000  00000000  000020d4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00003129  00000000  00000000  00006c9f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000015f3  00000000  00000000  00009dc8  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000005c8  00000000  00000000  0000b3bc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000029e7  00000000  00000000  0000b984  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000ac1  00000000  00000000  0000e36b  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000160  00000000  00000000  0000ee2c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 83 01 	jmp	0x306	; 0x306 <__ctors_end>
       4:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
       8:	0c 94 11 03 	jmp	0x622	; 0x622 <__vector_2>
       c:	0c 94 79 03 	jmp	0x6f2	; 0x6f2 <__vector_3>
      10:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      14:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      18:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      1c:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      20:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      24:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      28:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      2c:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      30:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      34:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      38:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      3c:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      40:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      44:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      48:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      4c:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      50:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      54:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      58:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      5c:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      60:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      64:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      68:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      6c:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      70:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      74:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      78:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      7c:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      80:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      84:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      88:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      8c:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      90:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      94:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      98:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      9c:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      a0:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      a4:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      a8:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      ac:	0c 94 e1 03 	jmp	0x7c2	; 0x7c2 <__vector_43>
      b0:	0c 94 49 04 	jmp	0x892	; 0x892 <__vector_44>
      b4:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      b8:	0c 94 44 06 	jmp	0xc88	; 0xc88 <__vector_46>
      bc:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      c0:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      c4:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      c8:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      cc:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      d0:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      d4:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      d8:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      dc:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      e0:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      e4:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      e8:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      ec:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      f0:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      f4:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      f8:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      fc:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     100:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     104:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     108:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     10c:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     110:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     114:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     118:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     11c:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     120:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     124:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     128:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     12c:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     130:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     134:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     138:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     13c:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     140:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     144:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     148:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     14c:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     150:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     154:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     158:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     15c:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     160:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     164:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     168:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     16c:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     170:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     174:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     178:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     17c:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     180:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     184:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     188:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     18c:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     190:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     194:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     198:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     19c:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     1a0:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     1a4:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     1a8:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     1ac:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     1b0:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     1b4:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     1b8:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     1bc:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     1c0:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     1c4:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     1c8:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     1cc:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     1d0:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     1d4:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     1d8:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     1dc:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     1e0:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     1e4:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     1e8:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     1ec:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     1f0:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     1f4:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     1f8:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>

000001fc <__trampolines_start>:
     1fc:	0c 94 fd 06 	jmp	0xdfa	; 0xdfa <stdio_getchar>
     200:	0c 94 d8 06 	jmp	0xdb0	; 0xdb0 <stdio_putchar>

00000204 <__trampolines_end>:
     204:	6e 61       	ori	r22, 0x1E	; 30
     206:	6e 00       	.word	0x006e	; ????

00000208 <__c.2332>:
     208:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
     218:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
     228:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
     238:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
     248:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
     258:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
     268:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
     278:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
     288:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
     298:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     2a8:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     2b8:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     2c8:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     2d8:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     2e8:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     2f8:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

00000306 <__ctors_end>:
     306:	11 24       	eor	r1, r1
     308:	1f be       	out	0x3f, r1	; 63
     30a:	cf ef       	ldi	r28, 0xFF	; 255
     30c:	cd bf       	out	0x3d, r28	; 61
     30e:	df e9       	ldi	r29, 0x9F	; 159
     310:	de bf       	out	0x3e, r29	; 62
     312:	00 e0       	ldi	r16, 0x00	; 0
     314:	0c bf       	out	0x3c, r16	; 60

00000316 <__do_copy_data>:
     316:	10 e2       	ldi	r17, 0x20	; 32
     318:	a0 e0       	ldi	r26, 0x00	; 0
     31a:	b0 e2       	ldi	r27, 0x20	; 32
     31c:	ee e3       	ldi	r30, 0x3E	; 62
     31e:	fd e1       	ldi	r31, 0x1D	; 29
     320:	00 e0       	ldi	r16, 0x00	; 0
     322:	0b bf       	out	0x3b, r16	; 59
     324:	02 c0       	rjmp	.+4      	; 0x32a <__do_copy_data+0x14>
     326:	07 90       	elpm	r0, Z+
     328:	0d 92       	st	X+, r0
     32a:	a4 33       	cpi	r26, 0x34	; 52
     32c:	b1 07       	cpc	r27, r17
     32e:	d9 f7       	brne	.-10     	; 0x326 <__do_copy_data+0x10>

00000330 <__do_clear_bss>:
     330:	20 e2       	ldi	r18, 0x20	; 32
     332:	a4 e3       	ldi	r26, 0x34	; 52
     334:	b0 e2       	ldi	r27, 0x20	; 32
     336:	01 c0       	rjmp	.+2      	; 0x33a <.do_clear_bss_start>

00000338 <.do_clear_bss_loop>:
     338:	1d 92       	st	X+, r1

0000033a <.do_clear_bss_start>:
     33a:	a9 34       	cpi	r26, 0x49	; 73
     33c:	b2 07       	cpc	r27, r18
     33e:	e1 f7       	brne	.-8      	; 0x338 <.do_clear_bss_loop>
     340:	0e 94 17 07 	call	0xe2e	; 0xe2e <main>
     344:	0c 94 9d 0e 	jmp	0x1d3a	; 0x1d3a <_exit>

00000348 <__bad_interrupt>:
     348:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000034c <DriverAdcInit>:
     34c:	cf 93       	push	r28
     34e:	df 93       	push	r29
     350:	cd b7       	in	r28, 0x3d	; 61
     352:	de b7       	in	r29, 0x3e	; 62
     354:	00 00       	nop
     356:	df 91       	pop	r29
     358:	cf 91       	pop	r28
     35a:	08 95       	ret

0000035c <DriverAdps9960Init>:
     35c:	0f 93       	push	r16
     35e:	cf 93       	push	r28
     360:	df 93       	push	r29
     362:	00 d0       	rcall	.+0      	; 0x364 <DriverAdps9960Init+0x8>
     364:	cd b7       	in	r28, 0x3d	; 61
     366:	de b7       	in	r29, 0x3e	; 62
     368:	80 e8       	ldi	r24, 0x80	; 128
     36a:	8a 83       	std	Y+2, r24	; 0x02
     36c:	81 e0       	ldi	r24, 0x01	; 1
     36e:	8b 83       	std	Y+3, r24	; 0x03
     370:	ce 01       	movw	r24, r28
     372:	02 96       	adiw	r24, 0x02	; 2
     374:	42 e0       	ldi	r20, 0x02	; 2
     376:	bc 01       	movw	r22, r24
     378:	89 e3       	ldi	r24, 0x39	; 57
     37a:	0e 94 ef 04 	call	0x9de	; 0x9de <TWIMWrite>
     37e:	89 83       	std	Y+1, r24	; 0x01
     380:	82 e9       	ldi	r24, 0x92	; 146
     382:	8a 83       	std	Y+2, r24	; 0x02
     384:	9e 01       	movw	r18, r28
     386:	2e 5f       	subi	r18, 0xFE	; 254
     388:	3f 4f       	sbci	r19, 0xFF	; 255
     38a:	ce 01       	movw	r24, r28
     38c:	02 96       	adiw	r24, 0x02	; 2
     38e:	01 e0       	ldi	r16, 0x01	; 1
     390:	41 e0       	ldi	r20, 0x01	; 1
     392:	bc 01       	movw	r22, r24
     394:	89 e3       	ldi	r24, 0x39	; 57
     396:	0e 94 0e 05 	call	0xa1c	; 0xa1c <TWIMWriteRead>
     39a:	89 83       	std	Y+1, r24	; 0x01
     39c:	8a 81       	ldd	r24, Y+2	; 0x02
     39e:	8b 3a       	cpi	r24, 0xAB	; 171
     3a0:	99 f0       	breq	.+38     	; 0x3c8 <DriverAdps9960Init+0x6c>
     3a2:	8a 81       	ldd	r24, Y+2	; 0x02
     3a4:	88 2f       	mov	r24, r24
     3a6:	90 e0       	ldi	r25, 0x00	; 0
     3a8:	29 2f       	mov	r18, r25
     3aa:	2f 93       	push	r18
     3ac:	8f 93       	push	r24
     3ae:	8f e0       	ldi	r24, 0x0F	; 15
     3b0:	90 e2       	ldi	r25, 0x20	; 32
     3b2:	89 2f       	mov	r24, r25
     3b4:	8f 93       	push	r24
     3b6:	8f e0       	ldi	r24, 0x0F	; 15
     3b8:	90 e2       	ldi	r25, 0x20	; 32
     3ba:	8f 93       	push	r24
     3bc:	0e 94 2b 0e 	call	0x1c56	; 0x1c56 <printf>
     3c0:	0f 90       	pop	r0
     3c2:	0f 90       	pop	r0
     3c4:	0f 90       	pop	r0
     3c6:	0f 90       	pop	r0
     3c8:	81 e8       	ldi	r24, 0x81	; 129
     3ca:	8a 83       	std	Y+2, r24	; 0x02
     3cc:	8b ed       	ldi	r24, 0xDB	; 219
     3ce:	8b 83       	std	Y+3, r24	; 0x03
     3d0:	ce 01       	movw	r24, r28
     3d2:	02 96       	adiw	r24, 0x02	; 2
     3d4:	42 e0       	ldi	r20, 0x02	; 2
     3d6:	bc 01       	movw	r22, r24
     3d8:	89 e3       	ldi	r24, 0x39	; 57
     3da:	0e 94 ef 04 	call	0x9de	; 0x9de <TWIMWrite>
     3de:	89 83       	std	Y+1, r24	; 0x01
     3e0:	8f e8       	ldi	r24, 0x8F	; 143
     3e2:	8a 83       	std	Y+2, r24	; 0x02
     3e4:	83 e0       	ldi	r24, 0x03	; 3
     3e6:	8b 83       	std	Y+3, r24	; 0x03
     3e8:	ce 01       	movw	r24, r28
     3ea:	02 96       	adiw	r24, 0x02	; 2
     3ec:	42 e0       	ldi	r20, 0x02	; 2
     3ee:	bc 01       	movw	r22, r24
     3f0:	89 e3       	ldi	r24, 0x39	; 57
     3f2:	0e 94 ef 04 	call	0x9de	; 0x9de <TWIMWrite>
     3f6:	89 83       	std	Y+1, r24	; 0x01
     3f8:	00 00       	nop
     3fa:	23 96       	adiw	r28, 0x03	; 3
     3fc:	cd bf       	out	0x3d, r28	; 61
     3fe:	de bf       	out	0x3e, r29	; 62
     400:	df 91       	pop	r29
     402:	cf 91       	pop	r28
     404:	0f 91       	pop	r16
     406:	08 95       	ret

00000408 <DriverCursorstickInit>:
     408:	cf 93       	push	r28
     40a:	df 93       	push	r29
     40c:	cd b7       	in	r28, 0x3d	; 61
     40e:	de b7       	in	r29, 0x3e	; 62
     410:	00 00       	nop
     412:	df 91       	pop	r29
     414:	cf 91       	pop	r28
     416:	08 95       	ret

00000418 <DriverLedInit>:
     418:	cf 93       	push	r28
     41a:	df 93       	push	r29
     41c:	cd b7       	in	r28, 0x3d	; 61
     41e:	de b7       	in	r29, 0x3e	; 62
     420:	80 e2       	ldi	r24, 0x20	; 32
     422:	96 e0       	ldi	r25, 0x06	; 6
     424:	27 e0       	ldi	r18, 0x07	; 7
     426:	fc 01       	movw	r30, r24
     428:	21 83       	std	Z+1, r18	; 0x01
     42a:	80 e2       	ldi	r24, 0x20	; 32
     42c:	96 e0       	ldi	r25, 0x06	; 6
     42e:	28 e5       	ldi	r18, 0x58	; 88
     430:	fc 01       	movw	r30, r24
     432:	20 8b       	std	Z+16, r18	; 0x10
     434:	80 e2       	ldi	r24, 0x20	; 32
     436:	96 e0       	ldi	r25, 0x06	; 6
     438:	28 e5       	ldi	r18, 0x58	; 88
     43a:	fc 01       	movw	r30, r24
     43c:	21 8b       	std	Z+17, r18	; 0x11
     43e:	80 e2       	ldi	r24, 0x20	; 32
     440:	96 e0       	ldi	r25, 0x06	; 6
     442:	28 e5       	ldi	r18, 0x58	; 88
     444:	fc 01       	movw	r30, r24
     446:	22 8b       	std	Z+18, r18	; 0x12
     448:	80 e0       	ldi	r24, 0x00	; 0
     44a:	96 e0       	ldi	r25, 0x06	; 6
     44c:	20 e8       	ldi	r18, 0x80	; 128
     44e:	fc 01       	movw	r30, r24
     450:	21 83       	std	Z+1, r18	; 0x01
     452:	80 e0       	ldi	r24, 0x00	; 0
     454:	96 e0       	ldi	r25, 0x06	; 6
     456:	28 e5       	ldi	r18, 0x58	; 88
     458:	fc 01       	movw	r30, r24
     45a:	27 8b       	std	Z+23, r18	; 0x17
     45c:	00 00       	nop
     45e:	df 91       	pop	r29
     460:	cf 91       	pop	r28
     462:	08 95       	ret

00000464 <DriverLedWrite>:
     464:	cf 93       	push	r28
     466:	df 93       	push	r29
     468:	1f 92       	push	r1
     46a:	cd b7       	in	r28, 0x3d	; 61
     46c:	de b7       	in	r29, 0x3e	; 62
     46e:	89 83       	std	Y+1, r24	; 0x01
     470:	80 e2       	ldi	r24, 0x20	; 32
     472:	96 e0       	ldi	r25, 0x06	; 6
     474:	29 81       	ldd	r18, Y+1	; 0x01
     476:	27 70       	andi	r18, 0x07	; 7
     478:	fc 01       	movw	r30, r24
     47a:	24 83       	std	Z+4, r18	; 0x04
     47c:	80 e0       	ldi	r24, 0x00	; 0
     47e:	96 e0       	ldi	r25, 0x06	; 6
     480:	29 81       	ldd	r18, Y+1	; 0x01
     482:	28 70       	andi	r18, 0x08	; 8
     484:	22 95       	swap	r18
     486:	20 7f       	andi	r18, 0xF0	; 240
     488:	fc 01       	movw	r30, r24
     48a:	24 83       	std	Z+4, r18	; 0x04
     48c:	00 00       	nop
     48e:	0f 90       	pop	r0
     490:	df 91       	pop	r29
     492:	cf 91       	pop	r28
     494:	08 95       	ret

00000496 <DriverMotorInit>:
EncoderStruct DriverMotorGetEncoder(void){
	EncoderStruct st;
	st.Cnt1 = motor1Pos;
	st.Cnt2 = motor2Pos;
	return st;
}
     496:	cf 93       	push	r28
     498:	df 93       	push	r29
     49a:	cd b7       	in	r28, 0x3d	; 61
     49c:	de b7       	in	r29, 0x3e	; 62
     49e:	80 ea       	ldi	r24, 0xA0	; 160
     4a0:	96 e0       	ldi	r25, 0x06	; 6
     4a2:	2f e3       	ldi	r18, 0x3F	; 63
     4a4:	fc 01       	movw	r30, r24
     4a6:	21 83       	std	Z+1, r18	; 0x01
     4a8:	80 ea       	ldi	r24, 0xA0	; 160
     4aa:	96 e0       	ldi	r25, 0x06	; 6
     4ac:	28 e5       	ldi	r18, 0x58	; 88
     4ae:	fc 01       	movw	r30, r24
     4b0:	25 8b       	std	Z+21, r18	; 0x15
     4b2:	80 ea       	ldi	r24, 0xA0	; 160
     4b4:	96 e0       	ldi	r25, 0x06	; 6
     4b6:	28 e5       	ldi	r18, 0x58	; 88
     4b8:	fc 01       	movw	r30, r24
     4ba:	24 8b       	std	Z+20, r18	; 0x14
     4bc:	80 ea       	ldi	r24, 0xA0	; 160
     4be:	96 e0       	ldi	r25, 0x06	; 6
     4c0:	20 e1       	ldi	r18, 0x10	; 16
     4c2:	fc 01       	movw	r30, r24
     4c4:	23 8b       	std	Z+19, r18	; 0x13
     4c6:	80 ea       	ldi	r24, 0xA0	; 160
     4c8:	96 e0       	ldi	r25, 0x06	; 6
     4ca:	20 e1       	ldi	r18, 0x10	; 16
     4cc:	fc 01       	movw	r30, r24
     4ce:	22 8b       	std	Z+18, r18	; 0x12
     4d0:	80 ea       	ldi	r24, 0xA0	; 160
     4d2:	96 e0       	ldi	r25, 0x06	; 6
     4d4:	20 e1       	ldi	r18, 0x10	; 16
     4d6:	fc 01       	movw	r30, r24
     4d8:	21 8b       	std	Z+17, r18	; 0x11
     4da:	80 ea       	ldi	r24, 0xA0	; 160
     4dc:	96 e0       	ldi	r25, 0x06	; 6
     4de:	20 e1       	ldi	r18, 0x10	; 16
     4e0:	fc 01       	movw	r30, r24
     4e2:	20 8b       	std	Z+16, r18	; 0x10
     4e4:	80 e0       	ldi	r24, 0x00	; 0
     4e6:	9b e0       	ldi	r25, 0x0B	; 11
     4e8:	24 e0       	ldi	r18, 0x04	; 4
     4ea:	fc 01       	movw	r30, r24
     4ec:	20 83       	st	Z, r18
     4ee:	80 e0       	ldi	r24, 0x00	; 0
     4f0:	9b e0       	ldi	r25, 0x0B	; 11
     4f2:	23 ef       	ldi	r18, 0xF3	; 243
     4f4:	fc 01       	movw	r30, r24
     4f6:	21 83       	std	Z+1, r18	; 0x01
     4f8:	80 e0       	ldi	r24, 0x00	; 0
     4fa:	9b e0       	ldi	r25, 0x0B	; 11
     4fc:	2f ef       	ldi	r18, 0xFF	; 255
     4fe:	3f e0       	ldi	r19, 0x0F	; 15
     500:	fc 01       	movw	r30, r24
     502:	26 a3       	std	Z+38, r18	; 0x26
     504:	37 a3       	std	Z+39, r19	; 0x27
     506:	80 e4       	ldi	r24, 0x40	; 64
     508:	96 e0       	ldi	r25, 0x06	; 6
     50a:	25 e0       	ldi	r18, 0x05	; 5
     50c:	fc 01       	movw	r30, r24
     50e:	21 87       	std	Z+9, r18	; 0x09
     510:	80 e4       	ldi	r24, 0x40	; 64
     512:	96 e0       	ldi	r25, 0x06	; 6
     514:	20 e8       	ldi	r18, 0x80	; 128
     516:	fc 01       	movw	r30, r24
     518:	22 87       	std	Z+10, r18	; 0x0a
     51a:	80 e4       	ldi	r24, 0x40	; 64
     51c:	96 e0       	ldi	r25, 0x06	; 6
     51e:	20 e4       	ldi	r18, 0x40	; 64
     520:	fc 01       	movw	r30, r24
     522:	23 87       	std	Z+11, r18	; 0x0b
     524:	80 e4       	ldi	r24, 0x40	; 64
     526:	96 e0       	ldi	r25, 0x06	; 6
     528:	fc 01       	movw	r30, r24
     52a:	17 8a       	std	Z+23, r1	; 0x17
     52c:	80 e4       	ldi	r24, 0x40	; 64
     52e:	96 e0       	ldi	r25, 0x06	; 6
     530:	fc 01       	movw	r30, r24
     532:	16 8a       	std	Z+22, r1	; 0x16
     534:	80 e8       	ldi	r24, 0x80	; 128
     536:	96 e0       	ldi	r25, 0x06	; 6
     538:	25 e0       	ldi	r18, 0x05	; 5
     53a:	fc 01       	movw	r30, r24
     53c:	21 87       	std	Z+9, r18	; 0x09
     53e:	80 e8       	ldi	r24, 0x80	; 128
     540:	96 e0       	ldi	r25, 0x06	; 6
     542:	20 e8       	ldi	r18, 0x80	; 128
     544:	fc 01       	movw	r30, r24
     546:	22 87       	std	Z+10, r18	; 0x0a
     548:	80 e8       	ldi	r24, 0x80	; 128
     54a:	96 e0       	ldi	r25, 0x06	; 6
     54c:	20 e4       	ldi	r18, 0x40	; 64
     54e:	fc 01       	movw	r30, r24
     550:	23 87       	std	Z+11, r18	; 0x0b
     552:	80 e8       	ldi	r24, 0x80	; 128
     554:	96 e0       	ldi	r25, 0x06	; 6
     556:	fc 01       	movw	r30, r24
     558:	17 8a       	std	Z+23, r1	; 0x17
     55a:	80 e8       	ldi	r24, 0x80	; 128
     55c:	96 e0       	ldi	r25, 0x06	; 6
     55e:	fc 01       	movw	r30, r24
     560:	16 8a       	std	Z+22, r1	; 0x16
     562:	80 ea       	ldi	r24, 0xA0	; 160
     564:	90 e0       	ldi	r25, 0x00	; 0
     566:	27 e8       	ldi	r18, 0x87	; 135
     568:	fc 01       	movw	r30, r24
     56a:	22 83       	std	Z+2, r18	; 0x02
     56c:	8f e3       	ldi	r24, 0x3F	; 63
     56e:	90 e0       	ldi	r25, 0x00	; 0
     570:	20 e8       	ldi	r18, 0x80	; 128
     572:	fc 01       	movw	r30, r24
     574:	20 83       	st	Z, r18
     576:	00 00       	nop
     578:	df 91       	pop	r29
     57a:	cf 91       	pop	r28
     57c:	08 95       	ret

0000057e <DriverMotorSet>:
     57e:	cf 93       	push	r28
     580:	df 93       	push	r29
     582:	00 d0       	rcall	.+0      	; 0x584 <DriverMotorSet+0x6>
     584:	1f 92       	push	r1
     586:	cd b7       	in	r28, 0x3d	; 61
     588:	de b7       	in	r29, 0x3e	; 62
     58a:	89 83       	std	Y+1, r24	; 0x01
     58c:	9a 83       	std	Y+2, r25	; 0x02
     58e:	6b 83       	std	Y+3, r22	; 0x03
     590:	7c 83       	std	Y+4, r23	; 0x04
     592:	89 81       	ldd	r24, Y+1	; 0x01
     594:	9a 81       	ldd	r25, Y+2	; 0x02
     596:	99 23       	and	r25, r25
     598:	84 f4       	brge	.+32     	; 0x5ba <DriverMotorSet+0x3c>
     59a:	80 e0       	ldi	r24, 0x00	; 0
     59c:	9b e0       	ldi	r25, 0x0B	; 11
     59e:	29 81       	ldd	r18, Y+1	; 0x01
     5a0:	3a 81       	ldd	r19, Y+2	; 0x02
     5a2:	31 95       	neg	r19
     5a4:	21 95       	neg	r18
     5a6:	31 09       	sbc	r19, r1
     5a8:	fc 01       	movw	r30, r24
     5aa:	20 a7       	std	Z+40, r18	; 0x28
     5ac:	31 a7       	std	Z+41, r19	; 0x29
     5ae:	80 e0       	ldi	r24, 0x00	; 0
     5b0:	9b e0       	ldi	r25, 0x0B	; 11
     5b2:	fc 01       	movw	r30, r24
     5b4:	12 a6       	std	Z+42, r1	; 0x2a
     5b6:	13 a6       	std	Z+43, r1	; 0x2b
     5b8:	0c c0       	rjmp	.+24     	; 0x5d2 <DriverMotorSet+0x54>
     5ba:	80 e0       	ldi	r24, 0x00	; 0
     5bc:	9b e0       	ldi	r25, 0x0B	; 11
     5be:	fc 01       	movw	r30, r24
     5c0:	10 a6       	std	Z+40, r1	; 0x28
     5c2:	11 a6       	std	Z+41, r1	; 0x29
     5c4:	80 e0       	ldi	r24, 0x00	; 0
     5c6:	9b e0       	ldi	r25, 0x0B	; 11
     5c8:	29 81       	ldd	r18, Y+1	; 0x01
     5ca:	3a 81       	ldd	r19, Y+2	; 0x02
     5cc:	fc 01       	movw	r30, r24
     5ce:	22 a7       	std	Z+42, r18	; 0x2a
     5d0:	33 a7       	std	Z+43, r19	; 0x2b
     5d2:	8b 81       	ldd	r24, Y+3	; 0x03
     5d4:	9c 81       	ldd	r25, Y+4	; 0x04
     5d6:	18 16       	cp	r1, r24
     5d8:	19 06       	cpc	r1, r25
     5da:	6c f4       	brge	.+26     	; 0x5f6 <DriverMotorSet+0x78>
     5dc:	80 e0       	ldi	r24, 0x00	; 0
     5de:	9b e0       	ldi	r25, 0x0B	; 11
     5e0:	2b 81       	ldd	r18, Y+3	; 0x03
     5e2:	3c 81       	ldd	r19, Y+4	; 0x04
     5e4:	fc 01       	movw	r30, r24
     5e6:	24 a7       	std	Z+44, r18	; 0x2c
     5e8:	35 a7       	std	Z+45, r19	; 0x2d
     5ea:	80 e0       	ldi	r24, 0x00	; 0
     5ec:	9b e0       	ldi	r25, 0x0B	; 11
     5ee:	fc 01       	movw	r30, r24
     5f0:	16 a6       	std	Z+46, r1	; 0x2e
     5f2:	17 a6       	std	Z+47, r1	; 0x2f
     5f4:	0f c0       	rjmp	.+30     	; 0x614 <DriverMotorSet+0x96>
     5f6:	80 e0       	ldi	r24, 0x00	; 0
     5f8:	9b e0       	ldi	r25, 0x0B	; 11
     5fa:	fc 01       	movw	r30, r24
     5fc:	14 a6       	std	Z+44, r1	; 0x2c
     5fe:	15 a6       	std	Z+45, r1	; 0x2d
     600:	80 e0       	ldi	r24, 0x00	; 0
     602:	9b e0       	ldi	r25, 0x0B	; 11
     604:	2b 81       	ldd	r18, Y+3	; 0x03
     606:	3c 81       	ldd	r19, Y+4	; 0x04
     608:	31 95       	neg	r19
     60a:	21 95       	neg	r18
     60c:	31 09       	sbc	r19, r1
     60e:	fc 01       	movw	r30, r24
     610:	26 a7       	std	Z+46, r18	; 0x2e
     612:	37 a7       	std	Z+47, r19	; 0x2f
     614:	00 00       	nop
     616:	24 96       	adiw	r28, 0x04	; 4
     618:	cd bf       	out	0x3d, r28	; 61
     61a:	de bf       	out	0x3e, r29	; 62
     61c:	df 91       	pop	r29
     61e:	cf 91       	pop	r28
     620:	08 95       	ret

00000622 <__vector_2>:


//###ISRs###
ISR(PORTC_INT0_vect){ //interrupt op pin C7
     622:	1f 92       	push	r1
     624:	0f 92       	push	r0
     626:	00 90 3f 00 	lds	r0, 0x003F	; 0x80003f <__TEXT_REGION_LENGTH__+0x70003f>
     62a:	0f 92       	push	r0
     62c:	11 24       	eor	r1, r1
     62e:	00 90 3b 00 	lds	r0, 0x003B	; 0x80003b <__TEXT_REGION_LENGTH__+0x70003b>
     632:	0f 92       	push	r0
     634:	8f 93       	push	r24
     636:	9f 93       	push	r25
     638:	ef 93       	push	r30
     63a:	ff 93       	push	r31
     63c:	cf 93       	push	r28
     63e:	df 93       	push	r29
     640:	1f 92       	push	r1
     642:	cd b7       	in	r28, 0x3d	; 61
     644:	de b7       	in	r29, 0x3e	; 62
	char input = PORTC.IN>>6;
     646:	80 e4       	ldi	r24, 0x40	; 64
     648:	96 e0       	ldi	r25, 0x06	; 6
     64a:	fc 01       	movw	r30, r24
     64c:	80 85       	ldd	r24, Z+8	; 0x08
     64e:	82 95       	swap	r24
     650:	86 95       	lsr	r24
     652:	86 95       	lsr	r24
     654:	83 70       	andi	r24, 0x03	; 3
     656:	89 83       	std	Y+1, r24	; 0x01
	if (input&0b1)				//als pin 6 hoog is
     658:	89 81       	ldd	r24, Y+1	; 0x01
     65a:	88 2f       	mov	r24, r24
     65c:	90 e0       	ldi	r25, 0x00	; 0
     65e:	81 70       	andi	r24, 0x01	; 1
     660:	99 27       	eor	r25, r25
     662:	89 2b       	or	r24, r25
     664:	d9 f0       	breq	.+54     	; 0x69c <__vector_2+0x7a>
	{
		if (input&0b10)				//als rising edge op pin 7
     666:	89 81       	ldd	r24, Y+1	; 0x01
     668:	88 2f       	mov	r24, r24
     66a:	90 e0       	ldi	r25, 0x00	; 0
     66c:	82 70       	andi	r24, 0x02	; 2
     66e:	99 27       	eor	r25, r25
     670:	89 2b       	or	r24, r25
     672:	51 f0       	breq	.+20     	; 0x688 <__vector_2+0x66>
		{
			motor1Pos--;					//teller--
     674:	80 91 3f 20 	lds	r24, 0x203F	; 0x80203f <motor1Pos>
     678:	90 91 40 20 	lds	r25, 0x2040	; 0x802040 <motor1Pos+0x1>
     67c:	01 97       	sbiw	r24, 0x01	; 1
     67e:	80 93 3f 20 	sts	0x203F, r24	; 0x80203f <motor1Pos>
     682:	90 93 40 20 	sts	0x2040, r25	; 0x802040 <motor1Pos+0x1>
			motor1Pos++;					//teller++
			} else {					//als falling edge op pin7
			motor1Pos--;					//teller--
		}
	}
}
     686:	24 c0       	rjmp	.+72     	; 0x6d0 <__vector_2+0xae>
	{
		if (input&0b10)				//als rising edge op pin 7
		{
			motor1Pos--;					//teller--
			} else{						//als falling edge op pin7
			motor1Pos++;					//teller++
     688:	80 91 3f 20 	lds	r24, 0x203F	; 0x80203f <motor1Pos>
     68c:	90 91 40 20 	lds	r25, 0x2040	; 0x802040 <motor1Pos+0x1>
     690:	01 96       	adiw	r24, 0x01	; 1
     692:	80 93 3f 20 	sts	0x203F, r24	; 0x80203f <motor1Pos>
     696:	90 93 40 20 	sts	0x2040, r25	; 0x802040 <motor1Pos+0x1>
			motor1Pos++;					//teller++
			} else {					//als falling edge op pin7
			motor1Pos--;					//teller--
		}
	}
}
     69a:	1a c0       	rjmp	.+52     	; 0x6d0 <__vector_2+0xae>
			motor1Pos--;					//teller--
			} else{						//als falling edge op pin7
			motor1Pos++;					//teller++
		}
		} else {					//als pin 6 laag is
		if (input&0b10)				//als rising edge op pin 7
     69c:	89 81       	ldd	r24, Y+1	; 0x01
     69e:	88 2f       	mov	r24, r24
     6a0:	90 e0       	ldi	r25, 0x00	; 0
     6a2:	82 70       	andi	r24, 0x02	; 2
     6a4:	99 27       	eor	r25, r25
     6a6:	89 2b       	or	r24, r25
     6a8:	51 f0       	breq	.+20     	; 0x6be <__vector_2+0x9c>
		{
			motor1Pos++;					//teller++
     6aa:	80 91 3f 20 	lds	r24, 0x203F	; 0x80203f <motor1Pos>
     6ae:	90 91 40 20 	lds	r25, 0x2040	; 0x802040 <motor1Pos+0x1>
     6b2:	01 96       	adiw	r24, 0x01	; 1
     6b4:	80 93 3f 20 	sts	0x203F, r24	; 0x80203f <motor1Pos>
     6b8:	90 93 40 20 	sts	0x2040, r25	; 0x802040 <motor1Pos+0x1>
			} else {					//als falling edge op pin7
			motor1Pos--;					//teller--
		}
	}
}
     6bc:	09 c0       	rjmp	.+18     	; 0x6d0 <__vector_2+0xae>
		} else {					//als pin 6 laag is
		if (input&0b10)				//als rising edge op pin 7
		{
			motor1Pos++;					//teller++
			} else {					//als falling edge op pin7
			motor1Pos--;					//teller--
     6be:	80 91 3f 20 	lds	r24, 0x203F	; 0x80203f <motor1Pos>
     6c2:	90 91 40 20 	lds	r25, 0x2040	; 0x802040 <motor1Pos+0x1>
     6c6:	01 97       	sbiw	r24, 0x01	; 1
     6c8:	80 93 3f 20 	sts	0x203F, r24	; 0x80203f <motor1Pos>
     6cc:	90 93 40 20 	sts	0x2040, r25	; 0x802040 <motor1Pos+0x1>
		}
	}
}
     6d0:	00 00       	nop
     6d2:	0f 90       	pop	r0
     6d4:	df 91       	pop	r29
     6d6:	cf 91       	pop	r28
     6d8:	ff 91       	pop	r31
     6da:	ef 91       	pop	r30
     6dc:	9f 91       	pop	r25
     6de:	8f 91       	pop	r24
     6e0:	0f 90       	pop	r0
     6e2:	00 92 3b 00 	sts	0x003B, r0	; 0x80003b <__TEXT_REGION_LENGTH__+0x70003b>
     6e6:	0f 90       	pop	r0
     6e8:	00 92 3f 00 	sts	0x003F, r0	; 0x80003f <__TEXT_REGION_LENGTH__+0x70003f>
     6ec:	0f 90       	pop	r0
     6ee:	1f 90       	pop	r1
     6f0:	18 95       	reti

000006f2 <__vector_3>:

ISR(PORTC_INT1_vect){	//interrupt op pin C6
     6f2:	1f 92       	push	r1
     6f4:	0f 92       	push	r0
     6f6:	00 90 3f 00 	lds	r0, 0x003F	; 0x80003f <__TEXT_REGION_LENGTH__+0x70003f>
     6fa:	0f 92       	push	r0
     6fc:	11 24       	eor	r1, r1
     6fe:	00 90 3b 00 	lds	r0, 0x003B	; 0x80003b <__TEXT_REGION_LENGTH__+0x70003b>
     702:	0f 92       	push	r0
     704:	8f 93       	push	r24
     706:	9f 93       	push	r25
     708:	ef 93       	push	r30
     70a:	ff 93       	push	r31
     70c:	cf 93       	push	r28
     70e:	df 93       	push	r29
     710:	1f 92       	push	r1
     712:	cd b7       	in	r28, 0x3d	; 61
     714:	de b7       	in	r29, 0x3e	; 62
	char input = PORTC.IN>>6;
     716:	80 e4       	ldi	r24, 0x40	; 64
     718:	96 e0       	ldi	r25, 0x06	; 6
     71a:	fc 01       	movw	r30, r24
     71c:	80 85       	ldd	r24, Z+8	; 0x08
     71e:	82 95       	swap	r24
     720:	86 95       	lsr	r24
     722:	86 95       	lsr	r24
     724:	83 70       	andi	r24, 0x03	; 3
     726:	89 83       	std	Y+1, r24	; 0x01
	if (input&0b10)			//als C7 hoog is
     728:	89 81       	ldd	r24, Y+1	; 0x01
     72a:	88 2f       	mov	r24, r24
     72c:	90 e0       	ldi	r25, 0x00	; 0
     72e:	82 70       	andi	r24, 0x02	; 2
     730:	99 27       	eor	r25, r25
     732:	89 2b       	or	r24, r25
     734:	d9 f0       	breq	.+54     	; 0x76c <__vector_3+0x7a>
	{
		if (input&0b1)			//als RE C6	
     736:	89 81       	ldd	r24, Y+1	; 0x01
     738:	88 2f       	mov	r24, r24
     73a:	90 e0       	ldi	r25, 0x00	; 0
     73c:	81 70       	andi	r24, 0x01	; 1
     73e:	99 27       	eor	r25, r25
     740:	89 2b       	or	r24, r25
     742:	51 f0       	breq	.+20     	; 0x758 <__vector_3+0x66>
		{
			motor1Pos++;				//teller++
     744:	80 91 3f 20 	lds	r24, 0x203F	; 0x80203f <motor1Pos>
     748:	90 91 40 20 	lds	r25, 0x2040	; 0x802040 <motor1Pos+0x1>
     74c:	01 96       	adiw	r24, 0x01	; 1
     74e:	80 93 3f 20 	sts	0x203F, r24	; 0x80203f <motor1Pos>
     752:	90 93 40 20 	sts	0x2040, r25	; 0x802040 <motor1Pos+0x1>
			motor1Pos--;				//teller++
		} else {				//als FE C6
			motor1Pos++;				//teller--
		}
	}
}
     756:	24 c0       	rjmp	.+72     	; 0x7a0 <__vector_3+0xae>
	{
		if (input&0b1)			//als RE C6	
		{
			motor1Pos++;				//teller++
		} else {				//als FE C6
			motor1Pos--;				//teller--
     758:	80 91 3f 20 	lds	r24, 0x203F	; 0x80203f <motor1Pos>
     75c:	90 91 40 20 	lds	r25, 0x2040	; 0x802040 <motor1Pos+0x1>
     760:	01 97       	sbiw	r24, 0x01	; 1
     762:	80 93 3f 20 	sts	0x203F, r24	; 0x80203f <motor1Pos>
     766:	90 93 40 20 	sts	0x2040, r25	; 0x802040 <motor1Pos+0x1>
			motor1Pos--;				//teller++
		} else {				//als FE C6
			motor1Pos++;				//teller--
		}
	}
}
     76a:	1a c0       	rjmp	.+52     	; 0x7a0 <__vector_3+0xae>
			motor1Pos++;				//teller++
		} else {				//als FE C6
			motor1Pos--;				//teller--
		}
	} else {				//als C7 laag is
		if (input&0b10)			//als RE C6
     76c:	89 81       	ldd	r24, Y+1	; 0x01
     76e:	88 2f       	mov	r24, r24
     770:	90 e0       	ldi	r25, 0x00	; 0
     772:	82 70       	andi	r24, 0x02	; 2
     774:	99 27       	eor	r25, r25
     776:	89 2b       	or	r24, r25
     778:	51 f0       	breq	.+20     	; 0x78e <__vector_3+0x9c>
		{					
			motor1Pos--;				//teller++
     77a:	80 91 3f 20 	lds	r24, 0x203F	; 0x80203f <motor1Pos>
     77e:	90 91 40 20 	lds	r25, 0x2040	; 0x802040 <motor1Pos+0x1>
     782:	01 97       	sbiw	r24, 0x01	; 1
     784:	80 93 3f 20 	sts	0x203F, r24	; 0x80203f <motor1Pos>
     788:	90 93 40 20 	sts	0x2040, r25	; 0x802040 <motor1Pos+0x1>
		} else {				//als FE C6
			motor1Pos++;				//teller--
		}
	}
}
     78c:	09 c0       	rjmp	.+18     	; 0x7a0 <__vector_3+0xae>
	} else {				//als C7 laag is
		if (input&0b10)			//als RE C6
		{					
			motor1Pos--;				//teller++
		} else {				//als FE C6
			motor1Pos++;				//teller--
     78e:	80 91 3f 20 	lds	r24, 0x203F	; 0x80203f <motor1Pos>
     792:	90 91 40 20 	lds	r25, 0x2040	; 0x802040 <motor1Pos+0x1>
     796:	01 96       	adiw	r24, 0x01	; 1
     798:	80 93 3f 20 	sts	0x203F, r24	; 0x80203f <motor1Pos>
     79c:	90 93 40 20 	sts	0x2040, r25	; 0x802040 <motor1Pos+0x1>
		}
	}
}
     7a0:	00 00       	nop
     7a2:	0f 90       	pop	r0
     7a4:	df 91       	pop	r29
     7a6:	cf 91       	pop	r28
     7a8:	ff 91       	pop	r31
     7aa:	ef 91       	pop	r30
     7ac:	9f 91       	pop	r25
     7ae:	8f 91       	pop	r24
     7b0:	0f 90       	pop	r0
     7b2:	00 92 3b 00 	sts	0x003B, r0	; 0x80003b <__TEXT_REGION_LENGTH__+0x70003b>
     7b6:	0f 90       	pop	r0
     7b8:	00 92 3f 00 	sts	0x003F, r0	; 0x80003f <__TEXT_REGION_LENGTH__+0x70003f>
     7bc:	0f 90       	pop	r0
     7be:	1f 90       	pop	r1
     7c0:	18 95       	reti

000007c2 <__vector_43>:

ISR(PORTE_INT0_vect){ //interrupt op pin E7
     7c2:	1f 92       	push	r1
     7c4:	0f 92       	push	r0
     7c6:	00 90 3f 00 	lds	r0, 0x003F	; 0x80003f <__TEXT_REGION_LENGTH__+0x70003f>
     7ca:	0f 92       	push	r0
     7cc:	11 24       	eor	r1, r1
     7ce:	00 90 3b 00 	lds	r0, 0x003B	; 0x80003b <__TEXT_REGION_LENGTH__+0x70003b>
     7d2:	0f 92       	push	r0
     7d4:	8f 93       	push	r24
     7d6:	9f 93       	push	r25
     7d8:	ef 93       	push	r30
     7da:	ff 93       	push	r31
     7dc:	cf 93       	push	r28
     7de:	df 93       	push	r29
     7e0:	1f 92       	push	r1
     7e2:	cd b7       	in	r28, 0x3d	; 61
     7e4:	de b7       	in	r29, 0x3e	; 62
	char input = PORTE.IN>>6;
     7e6:	80 e8       	ldi	r24, 0x80	; 128
     7e8:	96 e0       	ldi	r25, 0x06	; 6
     7ea:	fc 01       	movw	r30, r24
     7ec:	80 85       	ldd	r24, Z+8	; 0x08
     7ee:	82 95       	swap	r24
     7f0:	86 95       	lsr	r24
     7f2:	86 95       	lsr	r24
     7f4:	83 70       	andi	r24, 0x03	; 3
     7f6:	89 83       	std	Y+1, r24	; 0x01
	if (input&0b1)				//als pin 6 hoog is
     7f8:	89 81       	ldd	r24, Y+1	; 0x01
     7fa:	88 2f       	mov	r24, r24
     7fc:	90 e0       	ldi	r25, 0x00	; 0
     7fe:	81 70       	andi	r24, 0x01	; 1
     800:	99 27       	eor	r25, r25
     802:	89 2b       	or	r24, r25
     804:	d9 f0       	breq	.+54     	; 0x83c <__vector_43+0x7a>
	{
		if (input&0b10)				//als rising edge op pin 7
     806:	89 81       	ldd	r24, Y+1	; 0x01
     808:	88 2f       	mov	r24, r24
     80a:	90 e0       	ldi	r25, 0x00	; 0
     80c:	82 70       	andi	r24, 0x02	; 2
     80e:	99 27       	eor	r25, r25
     810:	89 2b       	or	r24, r25
     812:	51 f0       	breq	.+20     	; 0x828 <__vector_43+0x66>
		{
			motor2Pos--;					//teller--
     814:	80 91 41 20 	lds	r24, 0x2041	; 0x802041 <motor2Pos>
     818:	90 91 42 20 	lds	r25, 0x2042	; 0x802042 <motor2Pos+0x1>
     81c:	01 97       	sbiw	r24, 0x01	; 1
     81e:	80 93 41 20 	sts	0x2041, r24	; 0x802041 <motor2Pos>
     822:	90 93 42 20 	sts	0x2042, r25	; 0x802042 <motor2Pos+0x1>
			motor2Pos++;					//teller++
			} else {					//als falling edge op pin7
			motor2Pos--;					//teller--
		}
	}
}
     826:	24 c0       	rjmp	.+72     	; 0x870 <__vector_43+0xae>
	{
		if (input&0b10)				//als rising edge op pin 7
		{
			motor2Pos--;					//teller--
			} else{						//als falling edge op pin7
			motor2Pos++;					//teller++
     828:	80 91 41 20 	lds	r24, 0x2041	; 0x802041 <motor2Pos>
     82c:	90 91 42 20 	lds	r25, 0x2042	; 0x802042 <motor2Pos+0x1>
     830:	01 96       	adiw	r24, 0x01	; 1
     832:	80 93 41 20 	sts	0x2041, r24	; 0x802041 <motor2Pos>
     836:	90 93 42 20 	sts	0x2042, r25	; 0x802042 <motor2Pos+0x1>
			motor2Pos++;					//teller++
			} else {					//als falling edge op pin7
			motor2Pos--;					//teller--
		}
	}
}
     83a:	1a c0       	rjmp	.+52     	; 0x870 <__vector_43+0xae>
			motor2Pos--;					//teller--
			} else{						//als falling edge op pin7
			motor2Pos++;					//teller++
		}
		} else {				//als pin 6 laag is
		if (input&0b10)				//als rising edge op pin 7
     83c:	89 81       	ldd	r24, Y+1	; 0x01
     83e:	88 2f       	mov	r24, r24
     840:	90 e0       	ldi	r25, 0x00	; 0
     842:	82 70       	andi	r24, 0x02	; 2
     844:	99 27       	eor	r25, r25
     846:	89 2b       	or	r24, r25
     848:	51 f0       	breq	.+20     	; 0x85e <__vector_43+0x9c>
		{
			motor2Pos++;					//teller++
     84a:	80 91 41 20 	lds	r24, 0x2041	; 0x802041 <motor2Pos>
     84e:	90 91 42 20 	lds	r25, 0x2042	; 0x802042 <motor2Pos+0x1>
     852:	01 96       	adiw	r24, 0x01	; 1
     854:	80 93 41 20 	sts	0x2041, r24	; 0x802041 <motor2Pos>
     858:	90 93 42 20 	sts	0x2042, r25	; 0x802042 <motor2Pos+0x1>
			} else {					//als falling edge op pin7
			motor2Pos--;					//teller--
		}
	}
}
     85c:	09 c0       	rjmp	.+18     	; 0x870 <__vector_43+0xae>
		} else {				//als pin 6 laag is
		if (input&0b10)				//als rising edge op pin 7
		{
			motor2Pos++;					//teller++
			} else {					//als falling edge op pin7
			motor2Pos--;					//teller--
     85e:	80 91 41 20 	lds	r24, 0x2041	; 0x802041 <motor2Pos>
     862:	90 91 42 20 	lds	r25, 0x2042	; 0x802042 <motor2Pos+0x1>
     866:	01 97       	sbiw	r24, 0x01	; 1
     868:	80 93 41 20 	sts	0x2041, r24	; 0x802041 <motor2Pos>
     86c:	90 93 42 20 	sts	0x2042, r25	; 0x802042 <motor2Pos+0x1>
		}
	}
}
     870:	00 00       	nop
     872:	0f 90       	pop	r0
     874:	df 91       	pop	r29
     876:	cf 91       	pop	r28
     878:	ff 91       	pop	r31
     87a:	ef 91       	pop	r30
     87c:	9f 91       	pop	r25
     87e:	8f 91       	pop	r24
     880:	0f 90       	pop	r0
     882:	00 92 3b 00 	sts	0x003B, r0	; 0x80003b <__TEXT_REGION_LENGTH__+0x70003b>
     886:	0f 90       	pop	r0
     888:	00 92 3f 00 	sts	0x003F, r0	; 0x80003f <__TEXT_REGION_LENGTH__+0x70003f>
     88c:	0f 90       	pop	r0
     88e:	1f 90       	pop	r1
     890:	18 95       	reti

00000892 <__vector_44>:

ISR(PORTE_INT1_vect){	//Interrupt op E6
     892:	1f 92       	push	r1
     894:	0f 92       	push	r0
     896:	00 90 3f 00 	lds	r0, 0x003F	; 0x80003f <__TEXT_REGION_LENGTH__+0x70003f>
     89a:	0f 92       	push	r0
     89c:	11 24       	eor	r1, r1
     89e:	00 90 3b 00 	lds	r0, 0x003B	; 0x80003b <__TEXT_REGION_LENGTH__+0x70003b>
     8a2:	0f 92       	push	r0
     8a4:	8f 93       	push	r24
     8a6:	9f 93       	push	r25
     8a8:	ef 93       	push	r30
     8aa:	ff 93       	push	r31
     8ac:	cf 93       	push	r28
     8ae:	df 93       	push	r29
     8b0:	1f 92       	push	r1
     8b2:	cd b7       	in	r28, 0x3d	; 61
     8b4:	de b7       	in	r29, 0x3e	; 62
	char input = PORTE.IN>>6;
     8b6:	80 e8       	ldi	r24, 0x80	; 128
     8b8:	96 e0       	ldi	r25, 0x06	; 6
     8ba:	fc 01       	movw	r30, r24
     8bc:	80 85       	ldd	r24, Z+8	; 0x08
     8be:	82 95       	swap	r24
     8c0:	86 95       	lsr	r24
     8c2:	86 95       	lsr	r24
     8c4:	83 70       	andi	r24, 0x03	; 3
     8c6:	89 83       	std	Y+1, r24	; 0x01
	if (input&0b10)			//als E7 hoog is
     8c8:	89 81       	ldd	r24, Y+1	; 0x01
     8ca:	88 2f       	mov	r24, r24
     8cc:	90 e0       	ldi	r25, 0x00	; 0
     8ce:	82 70       	andi	r24, 0x02	; 2
     8d0:	99 27       	eor	r25, r25
     8d2:	89 2b       	or	r24, r25
     8d4:	d9 f0       	breq	.+54     	; 0x90c <__vector_44+0x7a>
	{
		if (input&0b1)			//als RE E6
     8d6:	89 81       	ldd	r24, Y+1	; 0x01
     8d8:	88 2f       	mov	r24, r24
     8da:	90 e0       	ldi	r25, 0x00	; 0
     8dc:	81 70       	andi	r24, 0x01	; 1
     8de:	99 27       	eor	r25, r25
     8e0:	89 2b       	or	r24, r25
     8e2:	51 f0       	breq	.+20     	; 0x8f8 <__vector_44+0x66>
		{
			motor2Pos++;			//teller++
     8e4:	80 91 41 20 	lds	r24, 0x2041	; 0x802041 <motor2Pos>
     8e8:	90 91 42 20 	lds	r25, 0x2042	; 0x802042 <motor2Pos+0x1>
     8ec:	01 96       	adiw	r24, 0x01	; 1
     8ee:	80 93 41 20 	sts	0x2041, r24	; 0x802041 <motor2Pos>
     8f2:	90 93 42 20 	sts	0x2042, r25	; 0x802042 <motor2Pos+0x1>
			motor2Pos--;			//teller++
			} else {			//als FE E6
			motor2Pos++;			//teller--
		}
	}
}
     8f6:	24 c0       	rjmp	.+72     	; 0x940 <__vector_44+0xae>
	{
		if (input&0b1)			//als RE E6
		{
			motor2Pos++;			//teller++
			} else {			//als FE E6
			motor2Pos--;			//teller--
     8f8:	80 91 41 20 	lds	r24, 0x2041	; 0x802041 <motor2Pos>
     8fc:	90 91 42 20 	lds	r25, 0x2042	; 0x802042 <motor2Pos+0x1>
     900:	01 97       	sbiw	r24, 0x01	; 1
     902:	80 93 41 20 	sts	0x2041, r24	; 0x802041 <motor2Pos>
     906:	90 93 42 20 	sts	0x2042, r25	; 0x802042 <motor2Pos+0x1>
			motor2Pos--;			//teller++
			} else {			//als FE E6
			motor2Pos++;			//teller--
		}
	}
}
     90a:	1a c0       	rjmp	.+52     	; 0x940 <__vector_44+0xae>
			motor2Pos++;			//teller++
			} else {			//als FE E6
			motor2Pos--;			//teller--
		}
		} else {			//als E7 laag is
		if (input&0b10)			//als RE E6
     90c:	89 81       	ldd	r24, Y+1	; 0x01
     90e:	88 2f       	mov	r24, r24
     910:	90 e0       	ldi	r25, 0x00	; 0
     912:	82 70       	andi	r24, 0x02	; 2
     914:	99 27       	eor	r25, r25
     916:	89 2b       	or	r24, r25
     918:	51 f0       	breq	.+20     	; 0x92e <__vector_44+0x9c>
		{
			motor2Pos--;			//teller++
     91a:	80 91 41 20 	lds	r24, 0x2041	; 0x802041 <motor2Pos>
     91e:	90 91 42 20 	lds	r25, 0x2042	; 0x802042 <motor2Pos+0x1>
     922:	01 97       	sbiw	r24, 0x01	; 1
     924:	80 93 41 20 	sts	0x2041, r24	; 0x802041 <motor2Pos>
     928:	90 93 42 20 	sts	0x2042, r25	; 0x802042 <motor2Pos+0x1>
			} else {			//als FE E6
			motor2Pos++;			//teller--
		}
	}
}
     92c:	09 c0       	rjmp	.+18     	; 0x940 <__vector_44+0xae>
		} else {			//als E7 laag is
		if (input&0b10)			//als RE E6
		{
			motor2Pos--;			//teller++
			} else {			//als FE E6
			motor2Pos++;			//teller--
     92e:	80 91 41 20 	lds	r24, 0x2041	; 0x802041 <motor2Pos>
     932:	90 91 42 20 	lds	r25, 0x2042	; 0x802042 <motor2Pos+0x1>
     936:	01 96       	adiw	r24, 0x01	; 1
     938:	80 93 41 20 	sts	0x2041, r24	; 0x802041 <motor2Pos>
     93c:	90 93 42 20 	sts	0x2042, r25	; 0x802042 <motor2Pos+0x1>
		}
	}
}
     940:	00 00       	nop
     942:	0f 90       	pop	r0
     944:	df 91       	pop	r29
     946:	cf 91       	pop	r28
     948:	ff 91       	pop	r31
     94a:	ef 91       	pop	r30
     94c:	9f 91       	pop	r25
     94e:	8f 91       	pop	r24
     950:	0f 90       	pop	r0
     952:	00 92 3b 00 	sts	0x003B, r0	; 0x80003b <__TEXT_REGION_LENGTH__+0x70003b>
     956:	0f 90       	pop	r0
     958:	00 92 3f 00 	sts	0x003F, r0	; 0x80003f <__TEXT_REGION_LENGTH__+0x70003f>
     95c:	0f 90       	pop	r0
     95e:	1f 90       	pop	r1
     960:	18 95       	reti

00000962 <DriverSysClkXtalInit>:
     962:	8b ec       	ldi	r24, 0xCB	; 203
     964:	80 93 52 00 	sts	0x0052, r24	; 0x800052 <__TEXT_REGION_LENGTH__+0x700052>
     968:	88 e0       	ldi	r24, 0x08	; 8
     96a:	80 93 50 00 	sts	0x0050, r24	; 0x800050 <__TEXT_REGION_LENGTH__+0x700050>
     96e:	80 91 51 00 	lds	r24, 0x0051	; 0x800051 <__TEXT_REGION_LENGTH__+0x700051>
     972:	83 ff       	sbrs	r24, 3
     974:	fc cf       	rjmp	.-8      	; 0x96e <DriverSysClkXtalInit+0xc>
     976:	82 ec       	ldi	r24, 0xC2	; 194
     978:	80 93 55 00 	sts	0x0055, r24	; 0x800055 <__TEXT_REGION_LENGTH__+0x700055>
     97c:	88 e1       	ldi	r24, 0x18	; 24
     97e:	80 93 50 00 	sts	0x0050, r24	; 0x800050 <__TEXT_REGION_LENGTH__+0x700050>
     982:	80 91 51 00 	lds	r24, 0x0051	; 0x800051 <__TEXT_REGION_LENGTH__+0x700051>
     986:	84 ff       	sbrs	r24, 4
     988:	fc cf       	rjmp	.-8      	; 0x982 <DriverSysClkXtalInit+0x20>
     98a:	88 ed       	ldi	r24, 0xD8	; 216
     98c:	84 bf       	out	0x34, r24	; 52
     98e:	84 e0       	ldi	r24, 0x04	; 4
     990:	80 93 40 00 	sts	0x0040, r24	; 0x800040 <__TEXT_REGION_LENGTH__+0x700040>
     994:	80 e0       	ldi	r24, 0x00	; 0
     996:	08 95       	ret

00000998 <DriverTWIMInit>:
     998:	cf 93       	push	r28
     99a:	df 93       	push	r29
     99c:	cd b7       	in	r28, 0x3d	; 61
     99e:	de b7       	in	r29, 0x3e	; 62
     9a0:	10 92 3d 20 	sts	0x203D, r1	; 0x80203d <Twim_status>
     9a4:	80 e8       	ldi	r24, 0x80	; 128
     9a6:	96 e0       	ldi	r25, 0x06	; 6
     9a8:	28 e1       	ldi	r18, 0x18	; 24
     9aa:	fc 01       	movw	r30, r24
     9ac:	20 8b       	std	Z+16, r18	; 0x10
     9ae:	80 e8       	ldi	r24, 0x80	; 128
     9b0:	96 e0       	ldi	r25, 0x06	; 6
     9b2:	28 e1       	ldi	r18, 0x18	; 24
     9b4:	fc 01       	movw	r30, r24
     9b6:	21 8b       	std	Z+17, r18	; 0x11
     9b8:	80 ea       	ldi	r24, 0xA0	; 160
     9ba:	94 e0       	ldi	r25, 0x04	; 4
     9bc:	28 e7       	ldi	r18, 0x78	; 120
     9be:	fc 01       	movw	r30, r24
     9c0:	21 83       	std	Z+1, r18	; 0x01
     9c2:	80 ea       	ldi	r24, 0xA0	; 160
     9c4:	94 e0       	ldi	r25, 0x04	; 4
     9c6:	23 e2       	ldi	r18, 0x23	; 35
     9c8:	fc 01       	movw	r30, r24
     9ca:	25 83       	std	Z+5, r18	; 0x05
     9cc:	80 ea       	ldi	r24, 0xA0	; 160
     9ce:	94 e0       	ldi	r25, 0x04	; 4
     9d0:	21 e0       	ldi	r18, 0x01	; 1
     9d2:	fc 01       	movw	r30, r24
     9d4:	24 83       	std	Z+4, r18	; 0x04
     9d6:	00 00       	nop
     9d8:	df 91       	pop	r29
     9da:	cf 91       	pop	r28
     9dc:	08 95       	ret

000009de <TWIMWrite>:
     9de:	0f 93       	push	r16
     9e0:	cf 93       	push	r28
     9e2:	df 93       	push	r29
     9e4:	cd b7       	in	r28, 0x3d	; 61
     9e6:	de b7       	in	r29, 0x3e	; 62
     9e8:	25 97       	sbiw	r28, 0x05	; 5
     9ea:	cd bf       	out	0x3d, r28	; 61
     9ec:	de bf       	out	0x3e, r29	; 62
     9ee:	8a 83       	std	Y+2, r24	; 0x02
     9f0:	6b 83       	std	Y+3, r22	; 0x03
     9f2:	7c 83       	std	Y+4, r23	; 0x04
     9f4:	4d 83       	std	Y+5, r20	; 0x05
     9f6:	8b 81       	ldd	r24, Y+3	; 0x03
     9f8:	9c 81       	ldd	r25, Y+4	; 0x04
     9fa:	00 e0       	ldi	r16, 0x00	; 0
     9fc:	20 e0       	ldi	r18, 0x00	; 0
     9fe:	30 e0       	ldi	r19, 0x00	; 0
     a00:	4d 81       	ldd	r20, Y+5	; 0x05
     a02:	bc 01       	movw	r22, r24
     a04:	8a 81       	ldd	r24, Y+2	; 0x02
     a06:	0e 94 0e 05 	call	0xa1c	; 0xa1c <TWIMWriteRead>
     a0a:	89 83       	std	Y+1, r24	; 0x01
     a0c:	89 81       	ldd	r24, Y+1	; 0x01
     a0e:	25 96       	adiw	r28, 0x05	; 5
     a10:	cd bf       	out	0x3d, r28	; 61
     a12:	de bf       	out	0x3e, r29	; 62
     a14:	df 91       	pop	r29
     a16:	cf 91       	pop	r28
     a18:	0f 91       	pop	r16
     a1a:	08 95       	ret

00000a1c <TWIMWriteRead>:
     a1c:	0f 93       	push	r16
     a1e:	cf 93       	push	r28
     a20:	df 93       	push	r29
     a22:	cd b7       	in	r28, 0x3d	; 61
     a24:	de b7       	in	r29, 0x3e	; 62
     a26:	29 97       	sbiw	r28, 0x09	; 9
     a28:	cd bf       	out	0x3d, r28	; 61
     a2a:	de bf       	out	0x3e, r29	; 62
     a2c:	8b 83       	std	Y+3, r24	; 0x03
     a2e:	6c 83       	std	Y+4, r22	; 0x04
     a30:	7d 83       	std	Y+5, r23	; 0x05
     a32:	4e 83       	std	Y+6, r20	; 0x06
     a34:	2f 83       	std	Y+7, r18	; 0x07
     a36:	38 87       	std	Y+8, r19	; 0x08
     a38:	09 87       	std	Y+9, r16	; 0x09
     a3a:	8c 81       	ldd	r24, Y+4	; 0x04
     a3c:	9d 81       	ldd	r25, Y+5	; 0x05
     a3e:	80 93 35 20 	sts	0x2035, r24	; 0x802035 <Twim_writeData>
     a42:	90 93 36 20 	sts	0x2036, r25	; 0x802036 <Twim_writeData+0x1>
     a46:	8f 81       	ldd	r24, Y+7	; 0x07
     a48:	98 85       	ldd	r25, Y+8	; 0x08
     a4a:	80 93 37 20 	sts	0x2037, r24	; 0x802037 <Twim_readData>
     a4e:	90 93 38 20 	sts	0x2038, r25	; 0x802038 <Twim_readData+0x1>
     a52:	80 91 3d 20 	lds	r24, 0x203D	; 0x80203d <Twim_status>
     a56:	88 23       	and	r24, r24
     a58:	b9 f5       	brne	.+110    	; 0xac8 <TWIMWriteRead+0xac>
     a5a:	81 e0       	ldi	r24, 0x01	; 1
     a5c:	80 93 3d 20 	sts	0x203D, r24	; 0x80203d <Twim_status>
     a60:	10 92 3e 20 	sts	0x203E, r1	; 0x80203e <Twim_result>
     a64:	8b 81       	ldd	r24, Y+3	; 0x03
     a66:	88 0f       	add	r24, r24
     a68:	80 93 34 20 	sts	0x2034, r24	; 0x802034 <__data_end>
     a6c:	8e 81       	ldd	r24, Y+6	; 0x06
     a6e:	80 93 39 20 	sts	0x2039, r24	; 0x802039 <Twim_bytesToWrite>
     a72:	89 85       	ldd	r24, Y+9	; 0x09
     a74:	80 93 3a 20 	sts	0x203A, r24	; 0x80203a <Twim_bytesToRead>
     a78:	10 92 3b 20 	sts	0x203B, r1	; 0x80203b <Twim_bytesWritten>
     a7c:	10 92 3c 20 	sts	0x203C, r1	; 0x80203c <Twim_bytesRead>
     a80:	80 91 39 20 	lds	r24, 0x2039	; 0x802039 <Twim_bytesToWrite>
     a84:	88 23       	and	r24, r24
     a86:	51 f0       	breq	.+20     	; 0xa9c <TWIMWriteRead+0x80>
     a88:	80 91 34 20 	lds	r24, 0x2034	; 0x802034 <__data_end>
     a8c:	8e 7f       	andi	r24, 0xFE	; 254
     a8e:	89 83       	std	Y+1, r24	; 0x01
     a90:	80 ea       	ldi	r24, 0xA0	; 160
     a92:	94 e0       	ldi	r25, 0x04	; 4
     a94:	29 81       	ldd	r18, Y+1	; 0x01
     a96:	fc 01       	movw	r30, r24
     a98:	26 83       	std	Z+6, r18	; 0x06
     a9a:	10 c0       	rjmp	.+32     	; 0xabc <TWIMWriteRead+0xa0>
     a9c:	80 91 3a 20 	lds	r24, 0x203A	; 0x80203a <Twim_bytesToRead>
     aa0:	88 23       	and	r24, r24
     aa2:	61 f0       	breq	.+24     	; 0xabc <TWIMWriteRead+0xa0>
     aa4:	80 91 34 20 	lds	r24, 0x2034	; 0x802034 <__data_end>
     aa8:	81 60       	ori	r24, 0x01	; 1
     aaa:	8a 83       	std	Y+2, r24	; 0x02
     aac:	80 ea       	ldi	r24, 0xA0	; 160
     aae:	94 e0       	ldi	r25, 0x04	; 4
     ab0:	2a 81       	ldd	r18, Y+2	; 0x02
     ab2:	fc 01       	movw	r30, r24
     ab4:	26 83       	std	Z+6, r18	; 0x06
     ab6:	02 c0       	rjmp	.+4      	; 0xabc <TWIMWriteRead+0xa0>
     ab8:	81 e0       	ldi	r24, 0x01	; 1
     aba:	08 c0       	rjmp	.+16     	; 0xacc <TWIMWriteRead+0xb0>
     abc:	00 00       	nop
     abe:	80 91 3d 20 	lds	r24, 0x203D	; 0x80203d <Twim_status>
     ac2:	88 23       	and	r24, r24
     ac4:	c9 f7       	brne	.-14     	; 0xab8 <TWIMWriteRead+0x9c>
     ac6:	02 c0       	rjmp	.+4      	; 0xacc <TWIMWriteRead+0xb0>
     ac8:	80 e0       	ldi	r24, 0x00	; 0
     aca:	00 c0       	rjmp	.+0      	; 0xacc <TWIMWriteRead+0xb0>
     acc:	29 96       	adiw	r28, 0x09	; 9
     ace:	cd bf       	out	0x3d, r28	; 61
     ad0:	de bf       	out	0x3e, r29	; 62
     ad2:	df 91       	pop	r29
     ad4:	cf 91       	pop	r28
     ad6:	0f 91       	pop	r16
     ad8:	08 95       	ret

00000ada <TWIMArbitrationLostBusErrorHandler>:
     ada:	cf 93       	push	r28
     adc:	df 93       	push	r29
     ade:	1f 92       	push	r1
     ae0:	cd b7       	in	r28, 0x3d	; 61
     ae2:	de b7       	in	r29, 0x3e	; 62
     ae4:	80 ea       	ldi	r24, 0xA0	; 160
     ae6:	94 e0       	ldi	r25, 0x04	; 4
     ae8:	fc 01       	movw	r30, r24
     aea:	84 81       	ldd	r24, Z+4	; 0x04
     aec:	89 83       	std	Y+1, r24	; 0x01
     aee:	89 81       	ldd	r24, Y+1	; 0x01
     af0:	88 2f       	mov	r24, r24
     af2:	90 e0       	ldi	r25, 0x00	; 0
     af4:	84 70       	andi	r24, 0x04	; 4
     af6:	99 27       	eor	r25, r25
     af8:	89 2b       	or	r24, r25
     afa:	21 f0       	breq	.+8      	; 0xb04 <TWIMArbitrationLostBusErrorHandler+0x2a>
     afc:	84 e0       	ldi	r24, 0x04	; 4
     afe:	80 93 3e 20 	sts	0x203E, r24	; 0x80203e <Twim_result>
     b02:	03 c0       	rjmp	.+6      	; 0xb0a <TWIMArbitrationLostBusErrorHandler+0x30>
     b04:	83 e0       	ldi	r24, 0x03	; 3
     b06:	80 93 3e 20 	sts	0x203E, r24	; 0x80203e <Twim_result>
     b0a:	80 ea       	ldi	r24, 0xA0	; 160
     b0c:	94 e0       	ldi	r25, 0x04	; 4
     b0e:	29 81       	ldd	r18, Y+1	; 0x01
     b10:	28 60       	ori	r18, 0x08	; 8
     b12:	fc 01       	movw	r30, r24
     b14:	24 83       	std	Z+4, r18	; 0x04
     b16:	10 92 3d 20 	sts	0x203D, r1	; 0x80203d <Twim_status>
     b1a:	00 00       	nop
     b1c:	0f 90       	pop	r0
     b1e:	df 91       	pop	r29
     b20:	cf 91       	pop	r28
     b22:	08 95       	ret

00000b24 <TWIMWriteHandler>:
     b24:	cf 93       	push	r28
     b26:	df 93       	push	r29
     b28:	00 d0       	rcall	.+0      	; 0xb2a <TWIMWriteHandler+0x6>
     b2a:	1f 92       	push	r1
     b2c:	cd b7       	in	r28, 0x3d	; 61
     b2e:	de b7       	in	r29, 0x3e	; 62
     b30:	80 91 39 20 	lds	r24, 0x2039	; 0x802039 <Twim_bytesToWrite>
     b34:	89 83       	std	Y+1, r24	; 0x01
     b36:	80 91 3a 20 	lds	r24, 0x203A	; 0x80203a <Twim_bytesToRead>
     b3a:	8a 83       	std	Y+2, r24	; 0x02
     b3c:	80 ea       	ldi	r24, 0xA0	; 160
     b3e:	94 e0       	ldi	r25, 0x04	; 4
     b40:	fc 01       	movw	r30, r24
     b42:	84 81       	ldd	r24, Z+4	; 0x04
     b44:	88 2f       	mov	r24, r24
     b46:	90 e0       	ldi	r25, 0x00	; 0
     b48:	80 71       	andi	r24, 0x10	; 16
     b4a:	99 27       	eor	r25, r25
     b4c:	89 2b       	or	r24, r25
     b4e:	59 f0       	breq	.+22     	; 0xb66 <TWIMWriteHandler+0x42>
     b50:	80 ea       	ldi	r24, 0xA0	; 160
     b52:	94 e0       	ldi	r25, 0x04	; 4
     b54:	23 e0       	ldi	r18, 0x03	; 3
     b56:	fc 01       	movw	r30, r24
     b58:	23 83       	std	Z+3, r18	; 0x03
     b5a:	85 e0       	ldi	r24, 0x05	; 5
     b5c:	80 93 3e 20 	sts	0x203E, r24	; 0x80203e <Twim_result>
     b60:	10 92 3d 20 	sts	0x203D, r1	; 0x80203d <Twim_status>
     b64:	34 c0       	rjmp	.+104    	; 0xbce <TWIMWriteHandler+0xaa>
     b66:	90 91 3b 20 	lds	r25, 0x203B	; 0x80203b <Twim_bytesWritten>
     b6a:	89 81       	ldd	r24, Y+1	; 0x01
     b6c:	98 17       	cp	r25, r24
     b6e:	c0 f4       	brcc	.+48     	; 0xba0 <TWIMWriteHandler+0x7c>
     b70:	20 91 35 20 	lds	r18, 0x2035	; 0x802035 <Twim_writeData>
     b74:	30 91 36 20 	lds	r19, 0x2036	; 0x802036 <Twim_writeData+0x1>
     b78:	80 91 3b 20 	lds	r24, 0x203B	; 0x80203b <Twim_bytesWritten>
     b7c:	88 2f       	mov	r24, r24
     b7e:	90 e0       	ldi	r25, 0x00	; 0
     b80:	82 0f       	add	r24, r18
     b82:	93 1f       	adc	r25, r19
     b84:	fc 01       	movw	r30, r24
     b86:	80 81       	ld	r24, Z
     b88:	8b 83       	std	Y+3, r24	; 0x03
     b8a:	80 ea       	ldi	r24, 0xA0	; 160
     b8c:	94 e0       	ldi	r25, 0x04	; 4
     b8e:	2b 81       	ldd	r18, Y+3	; 0x03
     b90:	fc 01       	movw	r30, r24
     b92:	27 83       	std	Z+7, r18	; 0x07
     b94:	80 91 3b 20 	lds	r24, 0x203B	; 0x80203b <Twim_bytesWritten>
     b98:	8f 5f       	subi	r24, 0xFF	; 255
     b9a:	80 93 3b 20 	sts	0x203B, r24	; 0x80203b <Twim_bytesWritten>
     b9e:	17 c0       	rjmp	.+46     	; 0xbce <TWIMWriteHandler+0xaa>
     ba0:	90 91 3c 20 	lds	r25, 0x203C	; 0x80203c <Twim_bytesRead>
     ba4:	8a 81       	ldd	r24, Y+2	; 0x02
     ba6:	98 17       	cp	r25, r24
     ba8:	50 f4       	brcc	.+20     	; 0xbbe <TWIMWriteHandler+0x9a>
     baa:	80 91 34 20 	lds	r24, 0x2034	; 0x802034 <__data_end>
     bae:	81 60       	ori	r24, 0x01	; 1
     bb0:	8c 83       	std	Y+4, r24	; 0x04
     bb2:	80 ea       	ldi	r24, 0xA0	; 160
     bb4:	94 e0       	ldi	r25, 0x04	; 4
     bb6:	2c 81       	ldd	r18, Y+4	; 0x04
     bb8:	fc 01       	movw	r30, r24
     bba:	26 83       	std	Z+6, r18	; 0x06
     bbc:	08 c0       	rjmp	.+16     	; 0xbce <TWIMWriteHandler+0xaa>
     bbe:	80 ea       	ldi	r24, 0xA0	; 160
     bc0:	94 e0       	ldi	r25, 0x04	; 4
     bc2:	23 e0       	ldi	r18, 0x03	; 3
     bc4:	fc 01       	movw	r30, r24
     bc6:	23 83       	std	Z+3, r18	; 0x03
     bc8:	81 e0       	ldi	r24, 0x01	; 1
     bca:	0e 94 34 06 	call	0xc68	; 0xc68 <TWIMTransactionFinished>
     bce:	00 00       	nop
     bd0:	24 96       	adiw	r28, 0x04	; 4
     bd2:	cd bf       	out	0x3d, r28	; 61
     bd4:	de bf       	out	0x3e, r29	; 62
     bd6:	df 91       	pop	r29
     bd8:	cf 91       	pop	r28
     bda:	08 95       	ret

00000bdc <TWIMReadHandler>:
     bdc:	cf 93       	push	r28
     bde:	df 93       	push	r29
     be0:	1f 92       	push	r1
     be2:	1f 92       	push	r1
     be4:	cd b7       	in	r28, 0x3d	; 61
     be6:	de b7       	in	r29, 0x3e	; 62
     be8:	80 91 3c 20 	lds	r24, 0x203C	; 0x80203c <Twim_bytesRead>
     bec:	80 32       	cpi	r24, 0x20	; 32
     bee:	c0 f4       	brcc	.+48     	; 0xc20 <TWIMReadHandler+0x44>
     bf0:	80 ea       	ldi	r24, 0xA0	; 160
     bf2:	94 e0       	ldi	r25, 0x04	; 4
     bf4:	fc 01       	movw	r30, r24
     bf6:	87 81       	ldd	r24, Z+7	; 0x07
     bf8:	89 83       	std	Y+1, r24	; 0x01
     bfa:	20 91 37 20 	lds	r18, 0x2037	; 0x802037 <Twim_readData>
     bfe:	30 91 38 20 	lds	r19, 0x2038	; 0x802038 <Twim_readData+0x1>
     c02:	80 91 3c 20 	lds	r24, 0x203C	; 0x80203c <Twim_bytesRead>
     c06:	88 2f       	mov	r24, r24
     c08:	90 e0       	ldi	r25, 0x00	; 0
     c0a:	82 0f       	add	r24, r18
     c0c:	93 1f       	adc	r25, r19
     c0e:	29 81       	ldd	r18, Y+1	; 0x01
     c10:	fc 01       	movw	r30, r24
     c12:	20 83       	st	Z, r18
     c14:	80 91 3c 20 	lds	r24, 0x203C	; 0x80203c <Twim_bytesRead>
     c18:	8f 5f       	subi	r24, 0xFF	; 255
     c1a:	80 93 3c 20 	sts	0x203C, r24	; 0x80203c <Twim_bytesRead>
     c1e:	08 c0       	rjmp	.+16     	; 0xc30 <TWIMReadHandler+0x54>
     c20:	80 ea       	ldi	r24, 0xA0	; 160
     c22:	94 e0       	ldi	r25, 0x04	; 4
     c24:	23 e0       	ldi	r18, 0x03	; 3
     c26:	fc 01       	movw	r30, r24
     c28:	23 83       	std	Z+3, r18	; 0x03
     c2a:	82 e0       	ldi	r24, 0x02	; 2
     c2c:	0e 94 34 06 	call	0xc68	; 0xc68 <TWIMTransactionFinished>
     c30:	80 91 3a 20 	lds	r24, 0x203A	; 0x80203a <Twim_bytesToRead>
     c34:	8a 83       	std	Y+2, r24	; 0x02
     c36:	90 91 3c 20 	lds	r25, 0x203C	; 0x80203c <Twim_bytesRead>
     c3a:	8a 81       	ldd	r24, Y+2	; 0x02
     c3c:	98 17       	cp	r25, r24
     c3e:	30 f4       	brcc	.+12     	; 0xc4c <TWIMReadHandler+0x70>
     c40:	80 ea       	ldi	r24, 0xA0	; 160
     c42:	94 e0       	ldi	r25, 0x04	; 4
     c44:	22 e0       	ldi	r18, 0x02	; 2
     c46:	fc 01       	movw	r30, r24
     c48:	23 83       	std	Z+3, r18	; 0x03
     c4a:	08 c0       	rjmp	.+16     	; 0xc5c <TWIMReadHandler+0x80>
     c4c:	80 ea       	ldi	r24, 0xA0	; 160
     c4e:	94 e0       	ldi	r25, 0x04	; 4
     c50:	27 e0       	ldi	r18, 0x07	; 7
     c52:	fc 01       	movw	r30, r24
     c54:	23 83       	std	Z+3, r18	; 0x03
     c56:	81 e0       	ldi	r24, 0x01	; 1
     c58:	0e 94 34 06 	call	0xc68	; 0xc68 <TWIMTransactionFinished>
     c5c:	00 00       	nop
     c5e:	0f 90       	pop	r0
     c60:	0f 90       	pop	r0
     c62:	df 91       	pop	r29
     c64:	cf 91       	pop	r28
     c66:	08 95       	ret

00000c68 <TWIMTransactionFinished>:
     c68:	cf 93       	push	r28
     c6a:	df 93       	push	r29
     c6c:	1f 92       	push	r1
     c6e:	cd b7       	in	r28, 0x3d	; 61
     c70:	de b7       	in	r29, 0x3e	; 62
     c72:	89 83       	std	Y+1, r24	; 0x01
     c74:	89 81       	ldd	r24, Y+1	; 0x01
     c76:	80 93 3e 20 	sts	0x203E, r24	; 0x80203e <Twim_result>
     c7a:	10 92 3d 20 	sts	0x203D, r1	; 0x80203d <Twim_status>
     c7e:	00 00       	nop
     c80:	0f 90       	pop	r0
     c82:	df 91       	pop	r29
     c84:	cf 91       	pop	r28
     c86:	08 95       	ret

00000c88 <__vector_46>:
     c88:	1f 92       	push	r1
     c8a:	0f 92       	push	r0
     c8c:	00 90 3f 00 	lds	r0, 0x003F	; 0x80003f <__TEXT_REGION_LENGTH__+0x70003f>
     c90:	0f 92       	push	r0
     c92:	11 24       	eor	r1, r1
     c94:	00 90 3b 00 	lds	r0, 0x003B	; 0x80003b <__TEXT_REGION_LENGTH__+0x70003b>
     c98:	0f 92       	push	r0
     c9a:	2f 93       	push	r18
     c9c:	3f 93       	push	r19
     c9e:	4f 93       	push	r20
     ca0:	5f 93       	push	r21
     ca2:	6f 93       	push	r22
     ca4:	7f 93       	push	r23
     ca6:	8f 93       	push	r24
     ca8:	9f 93       	push	r25
     caa:	af 93       	push	r26
     cac:	bf 93       	push	r27
     cae:	ef 93       	push	r30
     cb0:	ff 93       	push	r31
     cb2:	cf 93       	push	r28
     cb4:	df 93       	push	r29
     cb6:	1f 92       	push	r1
     cb8:	cd b7       	in	r28, 0x3d	; 61
     cba:	de b7       	in	r29, 0x3e	; 62
     cbc:	80 ea       	ldi	r24, 0xA0	; 160
     cbe:	94 e0       	ldi	r25, 0x04	; 4
     cc0:	fc 01       	movw	r30, r24
     cc2:	84 81       	ldd	r24, Z+4	; 0x04
     cc4:	89 83       	std	Y+1, r24	; 0x01
     cc6:	89 81       	ldd	r24, Y+1	; 0x01
     cc8:	88 2f       	mov	r24, r24
     cca:	90 e0       	ldi	r25, 0x00	; 0
     ccc:	88 70       	andi	r24, 0x08	; 8
     cce:	99 27       	eor	r25, r25
     cd0:	89 2b       	or	r24, r25
     cd2:	39 f4       	brne	.+14     	; 0xce2 <__vector_46+0x5a>
     cd4:	89 81       	ldd	r24, Y+1	; 0x01
     cd6:	88 2f       	mov	r24, r24
     cd8:	90 e0       	ldi	r25, 0x00	; 0
     cda:	84 70       	andi	r24, 0x04	; 4
     cdc:	99 27       	eor	r25, r25
     cde:	89 2b       	or	r24, r25
     ce0:	19 f0       	breq	.+6      	; 0xce8 <__vector_46+0x60>
     ce2:	0e 94 6d 05 	call	0xada	; 0xada <TWIMArbitrationLostBusErrorHandler>
     ce6:	13 c0       	rjmp	.+38     	; 0xd0e <__vector_46+0x86>
     ce8:	89 81       	ldd	r24, Y+1	; 0x01
     cea:	88 2f       	mov	r24, r24
     cec:	90 e0       	ldi	r25, 0x00	; 0
     cee:	80 74       	andi	r24, 0x40	; 64
     cf0:	99 27       	eor	r25, r25
     cf2:	89 2b       	or	r24, r25
     cf4:	19 f0       	breq	.+6      	; 0xcfc <__vector_46+0x74>
     cf6:	0e 94 92 05 	call	0xb24	; 0xb24 <TWIMWriteHandler>
     cfa:	09 c0       	rjmp	.+18     	; 0xd0e <__vector_46+0x86>
     cfc:	89 81       	ldd	r24, Y+1	; 0x01
     cfe:	88 23       	and	r24, r24
     d00:	1c f4       	brge	.+6      	; 0xd08 <__vector_46+0x80>
     d02:	0e 94 ee 05 	call	0xbdc	; 0xbdc <TWIMReadHandler>
     d06:	03 c0       	rjmp	.+6      	; 0xd0e <__vector_46+0x86>
     d08:	86 e0       	ldi	r24, 0x06	; 6
     d0a:	0e 94 34 06 	call	0xc68	; 0xc68 <TWIMTransactionFinished>
     d0e:	80 91 3d 20 	lds	r24, 0x203D	; 0x80203d <Twim_status>
     d12:	00 00       	nop
     d14:	0f 90       	pop	r0
     d16:	df 91       	pop	r29
     d18:	cf 91       	pop	r28
     d1a:	ff 91       	pop	r31
     d1c:	ef 91       	pop	r30
     d1e:	bf 91       	pop	r27
     d20:	af 91       	pop	r26
     d22:	9f 91       	pop	r25
     d24:	8f 91       	pop	r24
     d26:	7f 91       	pop	r23
     d28:	6f 91       	pop	r22
     d2a:	5f 91       	pop	r21
     d2c:	4f 91       	pop	r20
     d2e:	3f 91       	pop	r19
     d30:	2f 91       	pop	r18
     d32:	0f 90       	pop	r0
     d34:	00 92 3b 00 	sts	0x003B, r0	; 0x80003b <__TEXT_REGION_LENGTH__+0x70003b>
     d38:	0f 90       	pop	r0
     d3a:	00 92 3f 00 	sts	0x003F, r0	; 0x80003f <__TEXT_REGION_LENGTH__+0x70003f>
     d3e:	0f 90       	pop	r0
     d40:	1f 90       	pop	r1
     d42:	18 95       	reti

00000d44 <DriverUSARTInit>:
     d44:	cf 93       	push	r28
     d46:	df 93       	push	r29
     d48:	cd b7       	in	r28, 0x3d	; 61
     d4a:	de b7       	in	r29, 0x3e	; 62
     d4c:	80 e8       	ldi	r24, 0x80	; 128
     d4e:	96 e0       	ldi	r25, 0x06	; 6
     d50:	28 e0       	ldi	r18, 0x08	; 8
     d52:	fc 01       	movw	r30, r24
     d54:	21 83       	std	Z+1, r18	; 0x01
     d56:	80 e8       	ldi	r24, 0x80	; 128
     d58:	96 e0       	ldi	r25, 0x06	; 6
     d5a:	24 e0       	ldi	r18, 0x04	; 4
     d5c:	fc 01       	movw	r30, r24
     d5e:	22 83       	std	Z+2, r18	; 0x02
     d60:	80 ea       	ldi	r24, 0xA0	; 160
     d62:	9a e0       	ldi	r25, 0x0A	; 10
     d64:	fc 01       	movw	r30, r24
     d66:	13 82       	std	Z+3, r1	; 0x03
     d68:	80 ea       	ldi	r24, 0xA0	; 160
     d6a:	9a e0       	ldi	r25, 0x0A	; 10
     d6c:	28 e1       	ldi	r18, 0x18	; 24
     d6e:	fc 01       	movw	r30, r24
     d70:	24 83       	std	Z+4, r18	; 0x04
     d72:	80 ea       	ldi	r24, 0xA0	; 160
     d74:	9a e0       	ldi	r25, 0x0A	; 10
     d76:	23 e0       	ldi	r18, 0x03	; 3
     d78:	fc 01       	movw	r30, r24
     d7a:	25 83       	std	Z+5, r18	; 0x05
     d7c:	80 ea       	ldi	r24, 0xA0	; 160
     d7e:	9a e0       	ldi	r25, 0x0A	; 10
     d80:	25 ee       	ldi	r18, 0xE5	; 229
     d82:	fc 01       	movw	r30, r24
     d84:	26 83       	std	Z+6, r18	; 0x06
     d86:	80 ea       	ldi	r24, 0xA0	; 160
     d88:	9a e0       	ldi	r25, 0x0A	; 10
     d8a:	2c eb       	ldi	r18, 0xBC	; 188
     d8c:	fc 01       	movw	r30, r24
     d8e:	27 83       	std	Z+7, r18	; 0x07
     d90:	80 e0       	ldi	r24, 0x00	; 0
     d92:	90 e2       	ldi	r25, 0x20	; 32
     d94:	80 93 45 20 	sts	0x2045, r24	; 0x802045 <__iob+0x2>
     d98:	90 93 46 20 	sts	0x2046, r25	; 0x802046 <__iob+0x3>
     d9c:	80 e0       	ldi	r24, 0x00	; 0
     d9e:	90 e2       	ldi	r25, 0x20	; 32
     da0:	80 93 43 20 	sts	0x2043, r24	; 0x802043 <__iob>
     da4:	90 93 44 20 	sts	0x2044, r25	; 0x802044 <__iob+0x1>
     da8:	00 00       	nop
     daa:	df 91       	pop	r29
     dac:	cf 91       	pop	r28
     dae:	08 95       	ret

00000db0 <stdio_putchar>:
     db0:	cf 93       	push	r28
     db2:	df 93       	push	r29
     db4:	00 d0       	rcall	.+0      	; 0xdb6 <stdio_putchar+0x6>
     db6:	cd b7       	in	r28, 0x3d	; 61
     db8:	de b7       	in	r29, 0x3e	; 62
     dba:	89 83       	std	Y+1, r24	; 0x01
     dbc:	6a 83       	std	Y+2, r22	; 0x02
     dbe:	7b 83       	std	Y+3, r23	; 0x03
     dc0:	80 ea       	ldi	r24, 0xA0	; 160
     dc2:	9a e0       	ldi	r25, 0x0A	; 10
     dc4:	29 81       	ldd	r18, Y+1	; 0x01
     dc6:	fc 01       	movw	r30, r24
     dc8:	20 83       	st	Z, r18
     dca:	00 00       	nop
     dcc:	80 ea       	ldi	r24, 0xA0	; 160
     dce:	9a e0       	ldi	r25, 0x0A	; 10
     dd0:	fc 01       	movw	r30, r24
     dd2:	81 81       	ldd	r24, Z+1	; 0x01
     dd4:	88 2f       	mov	r24, r24
     dd6:	90 e0       	ldi	r25, 0x00	; 0
     dd8:	80 74       	andi	r24, 0x40	; 64
     dda:	99 27       	eor	r25, r25
     ddc:	89 2b       	or	r24, r25
     dde:	b1 f3       	breq	.-20     	; 0xdcc <stdio_putchar+0x1c>
     de0:	80 ea       	ldi	r24, 0xA0	; 160
     de2:	9a e0       	ldi	r25, 0x0A	; 10
     de4:	20 e4       	ldi	r18, 0x40	; 64
     de6:	fc 01       	movw	r30, r24
     de8:	21 83       	std	Z+1, r18	; 0x01
     dea:	80 e0       	ldi	r24, 0x00	; 0
     dec:	90 e0       	ldi	r25, 0x00	; 0
     dee:	23 96       	adiw	r28, 0x03	; 3
     df0:	cd bf       	out	0x3d, r28	; 61
     df2:	de bf       	out	0x3e, r29	; 62
     df4:	df 91       	pop	r29
     df6:	cf 91       	pop	r28
     df8:	08 95       	ret

00000dfa <stdio_getchar>:
     dfa:	cf 93       	push	r28
     dfc:	df 93       	push	r29
     dfe:	1f 92       	push	r1
     e00:	1f 92       	push	r1
     e02:	cd b7       	in	r28, 0x3d	; 61
     e04:	de b7       	in	r29, 0x3e	; 62
     e06:	89 83       	std	Y+1, r24	; 0x01
     e08:	9a 83       	std	Y+2, r25	; 0x02
     e0a:	00 00       	nop
     e0c:	80 ea       	ldi	r24, 0xA0	; 160
     e0e:	9a e0       	ldi	r25, 0x0A	; 10
     e10:	fc 01       	movw	r30, r24
     e12:	81 81       	ldd	r24, Z+1	; 0x01
     e14:	88 23       	and	r24, r24
     e16:	d4 f7       	brge	.-12     	; 0xe0c <stdio_getchar+0x12>
     e18:	80 ea       	ldi	r24, 0xA0	; 160
     e1a:	9a e0       	ldi	r25, 0x0A	; 10
     e1c:	fc 01       	movw	r30, r24
     e1e:	80 81       	ld	r24, Z
     e20:	88 2f       	mov	r24, r24
     e22:	90 e0       	ldi	r25, 0x00	; 0
     e24:	0f 90       	pop	r0
     e26:	0f 90       	pop	r0
     e28:	df 91       	pop	r29
     e2a:	cf 91       	pop	r28
     e2c:	08 95       	ret

00000e2e <main>:

char text[10];
char a = 0b1;

int main(void)
{
     e2e:	cf 93       	push	r28
     e30:	df 93       	push	r29
     e32:	cd b7       	in	r28, 0x3d	; 61
     e34:	de b7       	in	r29, 0x3e	; 62
     e36:	6c 97       	sbiw	r28, 0x1c	; 28
     e38:	cd bf       	out	0x3d, r28	; 61
     e3a:	de bf       	out	0x3e, r29	; 62
	//###1###
	
	//Initialize drivers
	DriverSysClkXtalInit();	//Clock init
     e3c:	0e 94 b1 04 	call	0x962	; 0x962 <DriverSysClkXtalInit>
	DriverUSARTInit();		//USART init and link to stdio
     e40:	0e 94 a2 06 	call	0xd44	; 0xd44 <DriverUSARTInit>
	DriverTWIMInit();		//Initialize TWI in master mode
     e44:	0e 94 cc 04 	call	0x998	; 0x998 <DriverTWIMInit>
	DriverCursorstickInit();//Initialize cursor stick
     e48:	0e 94 04 02 	call	0x408	; 0x408 <DriverCursorstickInit>
	DriverLedInit();		//Initialize LED's
     e4c:	0e 94 0c 02 	call	0x418	; 0x418 <DriverLedInit>
	DriverPowerInit();		//Initialize aux power driver
     e50:	0e 94 53 09 	call	0x12a6	; 0x12a6 <DriverPowerInit>
	DriverAdcInit();		//Initialize ADC driver
     e54:	0e 94 a6 01 	call	0x34c	; 0x34c <DriverAdcInit>
	DriverMotorInit();		//Initialize motor driver
     e58:	0e 94 4b 02 	call	0x496	; 0x496 <DriverMotorInit>
	DriverAdps9960Init();
     e5c:	0e 94 ae 01 	call	0x35c	; 0x35c <DriverAdps9960Init>

	DriverPowerVccAuxSet(1);//Enable Auxillary power line
     e60:	81 e0       	ldi	r24, 0x01	; 1
     e62:	0e 94 57 09 	call	0x12ae	; 0x12ae <DriverPowerVccAuxSet>
     e66:	80 e0       	ldi	r24, 0x00	; 0
     e68:	90 e0       	ldi	r25, 0x00	; 0
     e6a:	aa ef       	ldi	r26, 0xFA	; 250
     e6c:	b3 e4       	ldi	r27, 0x43	; 67
     e6e:	8d 83       	std	Y+5, r24	; 0x05
     e70:	9e 83       	std	Y+6, r25	; 0x06
     e72:	af 83       	std	Y+7, r26	; 0x07
     e74:	b8 87       	std	Y+8, r27	; 0x08

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     e76:	20 e0       	ldi	r18, 0x00	; 0
     e78:	30 e0       	ldi	r19, 0x00	; 0
     e7a:	4a ef       	ldi	r20, 0xFA	; 250
     e7c:	55 e4       	ldi	r21, 0x45	; 69
     e7e:	6d 81       	ldd	r22, Y+5	; 0x05
     e80:	7e 81       	ldd	r23, Y+6	; 0x06
     e82:	8f 81       	ldd	r24, Y+7	; 0x07
     e84:	98 85       	ldd	r25, Y+8	; 0x08
     e86:	0e 94 be 08 	call	0x117c	; 0x117c <__mulsf3>
     e8a:	dc 01       	movw	r26, r24
     e8c:	cb 01       	movw	r24, r22
     e8e:	89 87       	std	Y+9, r24	; 0x09
     e90:	9a 87       	std	Y+10, r25	; 0x0a
     e92:	ab 87       	std	Y+11, r26	; 0x0b
     e94:	bc 87       	std	Y+12, r27	; 0x0c
	if (__tmp < 1.0)
     e96:	20 e0       	ldi	r18, 0x00	; 0
     e98:	30 e0       	ldi	r19, 0x00	; 0
     e9a:	40 e8       	ldi	r20, 0x80	; 128
     e9c:	5f e3       	ldi	r21, 0x3F	; 63
     e9e:	69 85       	ldd	r22, Y+9	; 0x09
     ea0:	7a 85       	ldd	r23, Y+10	; 0x0a
     ea2:	8b 85       	ldd	r24, Y+11	; 0x0b
     ea4:	9c 85       	ldd	r25, Y+12	; 0x0c
     ea6:	0e 94 38 08 	call	0x1070	; 0x1070 <__cmpsf2>
     eaa:	88 23       	and	r24, r24
     eac:	2c f4       	brge	.+10     	; 0xeb8 <main+0x8a>
		__ticks = 1;
     eae:	81 e0       	ldi	r24, 0x01	; 1
     eb0:	90 e0       	ldi	r25, 0x00	; 0
     eb2:	8d 87       	std	Y+13, r24	; 0x0d
     eb4:	9e 87       	std	Y+14, r25	; 0x0e
     eb6:	3f c0       	rjmp	.+126    	; 0xf36 <main+0x108>
	else if (__tmp > 65535)
     eb8:	20 e0       	ldi	r18, 0x00	; 0
     eba:	3f ef       	ldi	r19, 0xFF	; 255
     ebc:	4f e7       	ldi	r20, 0x7F	; 127
     ebe:	57 e4       	ldi	r21, 0x47	; 71
     ec0:	69 85       	ldd	r22, Y+9	; 0x09
     ec2:	7a 85       	ldd	r23, Y+10	; 0x0a
     ec4:	8b 85       	ldd	r24, Y+11	; 0x0b
     ec6:	9c 85       	ldd	r25, Y+12	; 0x0c
     ec8:	0e 94 b9 08 	call	0x1172	; 0x1172 <__gesf2>
     ecc:	18 16       	cp	r1, r24
     ece:	4c f5       	brge	.+82     	; 0xf22 <main+0xf4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     ed0:	20 e0       	ldi	r18, 0x00	; 0
     ed2:	30 e0       	ldi	r19, 0x00	; 0
     ed4:	40 e2       	ldi	r20, 0x20	; 32
     ed6:	51 e4       	ldi	r21, 0x41	; 65
     ed8:	6d 81       	ldd	r22, Y+5	; 0x05
     eda:	7e 81       	ldd	r23, Y+6	; 0x06
     edc:	8f 81       	ldd	r24, Y+7	; 0x07
     ede:	98 85       	ldd	r25, Y+8	; 0x08
     ee0:	0e 94 be 08 	call	0x117c	; 0x117c <__mulsf3>
     ee4:	dc 01       	movw	r26, r24
     ee6:	cb 01       	movw	r24, r22
     ee8:	bc 01       	movw	r22, r24
     eea:	cd 01       	movw	r24, r26
     eec:	0e 94 3d 08 	call	0x107a	; 0x107a <__fixunssfsi>
     ef0:	dc 01       	movw	r26, r24
     ef2:	cb 01       	movw	r24, r22
     ef4:	8d 87       	std	Y+13, r24	; 0x0d
     ef6:	9e 87       	std	Y+14, r25	; 0x0e
     ef8:	0f c0       	rjmp	.+30     	; 0xf18 <main+0xea>
     efa:	80 e2       	ldi	r24, 0x20	; 32
     efc:	93 e0       	ldi	r25, 0x03	; 3
     efe:	8f 87       	std	Y+15, r24	; 0x0f
     f00:	98 8b       	std	Y+16, r25	; 0x10
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     f02:	8f 85       	ldd	r24, Y+15	; 0x0f
     f04:	98 89       	ldd	r25, Y+16	; 0x10
     f06:	01 97       	sbiw	r24, 0x01	; 1
     f08:	f1 f7       	brne	.-4      	; 0xf06 <main+0xd8>
     f0a:	8f 87       	std	Y+15, r24	; 0x0f
     f0c:	98 8b       	std	Y+16, r25	; 0x10
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     f0e:	8d 85       	ldd	r24, Y+13	; 0x0d
     f10:	9e 85       	ldd	r25, Y+14	; 0x0e
     f12:	01 97       	sbiw	r24, 0x01	; 1
     f14:	8d 87       	std	Y+13, r24	; 0x0d
     f16:	9e 87       	std	Y+14, r25	; 0x0e
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     f18:	8d 85       	ldd	r24, Y+13	; 0x0d
     f1a:	9e 85       	ldd	r25, Y+14	; 0x0e
     f1c:	89 2b       	or	r24, r25
     f1e:	69 f7       	brne	.-38     	; 0xefa <main+0xcc>
     f20:	14 c0       	rjmp	.+40     	; 0xf4a <main+0x11c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     f22:	69 85       	ldd	r22, Y+9	; 0x09
     f24:	7a 85       	ldd	r23, Y+10	; 0x0a
     f26:	8b 85       	ldd	r24, Y+11	; 0x0b
     f28:	9c 85       	ldd	r25, Y+12	; 0x0c
     f2a:	0e 94 3d 08 	call	0x107a	; 0x107a <__fixunssfsi>
     f2e:	dc 01       	movw	r26, r24
     f30:	cb 01       	movw	r24, r22
     f32:	8d 87       	std	Y+13, r24	; 0x0d
     f34:	9e 87       	std	Y+14, r25	; 0x0e
     f36:	8d 85       	ldd	r24, Y+13	; 0x0d
     f38:	9e 85       	ldd	r25, Y+14	; 0x0e
     f3a:	89 8b       	std	Y+17, r24	; 0x11
     f3c:	9a 8b       	std	Y+18, r25	; 0x12
     f3e:	89 89       	ldd	r24, Y+17	; 0x11
     f40:	9a 89       	ldd	r25, Y+18	; 0x12
     f42:	01 97       	sbiw	r24, 0x01	; 1
     f44:	f1 f7       	brne	.-4      	; 0xf42 <main+0x114>
     f46:	89 8b       	std	Y+17, r24	; 0x11
     f48:	9a 8b       	std	Y+18, r25	; 0x12
	
	_delay_ms(500);
	
		
	DriverMotorSet(4095,4095);
     f4a:	6f ef       	ldi	r22, 0xFF	; 255
     f4c:	7f e0       	ldi	r23, 0x0F	; 15
     f4e:	8f ef       	ldi	r24, 0xFF	; 255
     f50:	9f e0       	ldi	r25, 0x0F	; 15
     f52:	0e 94 bf 02 	call	0x57e	; 0x57e <DriverMotorSet>
		
	while(1)
	{
		DriverLedWrite(a);
     f56:	80 91 0e 20 	lds	r24, 0x200E	; 0x80200e <a>
     f5a:	0e 94 32 02 	call	0x464	; 0x464 <DriverLedWrite>
		a = a<<1;
     f5e:	80 91 0e 20 	lds	r24, 0x200E	; 0x80200e <a>
     f62:	88 0f       	add	r24, r24
     f64:	80 93 0e 20 	sts	0x200E, r24	; 0x80200e <a>
		if (!(a&0x0F))
     f68:	80 91 0e 20 	lds	r24, 0x200E	; 0x80200e <a>
     f6c:	88 2f       	mov	r24, r24
     f6e:	90 e0       	ldi	r25, 0x00	; 0
     f70:	8f 70       	andi	r24, 0x0F	; 15
     f72:	99 27       	eor	r25, r25
     f74:	89 2b       	or	r24, r25
     f76:	49 f4       	brne	.+18     	; 0xf8a <main+0x15c>
		{
			DriverMotorSet(0,0);
     f78:	60 e0       	ldi	r22, 0x00	; 0
     f7a:	70 e0       	ldi	r23, 0x00	; 0
     f7c:	80 e0       	ldi	r24, 0x00	; 0
     f7e:	90 e0       	ldi	r25, 0x00	; 0
     f80:	0e 94 bf 02 	call	0x57e	; 0x57e <DriverMotorSet>
			a = 0b01;
     f84:	81 e0       	ldi	r24, 0x01	; 1
     f86:	80 93 0e 20 	sts	0x200E, r24	; 0x80200e <a>
     f8a:	80 e0       	ldi	r24, 0x00	; 0
     f8c:	90 e0       	ldi	r25, 0x00	; 0
     f8e:	aa ef       	ldi	r26, 0xFA	; 250
     f90:	b3 e4       	ldi	r27, 0x43	; 67
     f92:	89 83       	std	Y+1, r24	; 0x01
     f94:	9a 83       	std	Y+2, r25	; 0x02
     f96:	ab 83       	std	Y+3, r26	; 0x03
     f98:	bc 83       	std	Y+4, r27	; 0x04

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     f9a:	20 e0       	ldi	r18, 0x00	; 0
     f9c:	30 e0       	ldi	r19, 0x00	; 0
     f9e:	4a ef       	ldi	r20, 0xFA	; 250
     fa0:	55 e4       	ldi	r21, 0x45	; 69
     fa2:	69 81       	ldd	r22, Y+1	; 0x01
     fa4:	7a 81       	ldd	r23, Y+2	; 0x02
     fa6:	8b 81       	ldd	r24, Y+3	; 0x03
     fa8:	9c 81       	ldd	r25, Y+4	; 0x04
     faa:	0e 94 be 08 	call	0x117c	; 0x117c <__mulsf3>
     fae:	dc 01       	movw	r26, r24
     fb0:	cb 01       	movw	r24, r22
     fb2:	8b 8b       	std	Y+19, r24	; 0x13
     fb4:	9c 8b       	std	Y+20, r25	; 0x14
     fb6:	ad 8b       	std	Y+21, r26	; 0x15
     fb8:	be 8b       	std	Y+22, r27	; 0x16
	if (__tmp < 1.0)
     fba:	20 e0       	ldi	r18, 0x00	; 0
     fbc:	30 e0       	ldi	r19, 0x00	; 0
     fbe:	40 e8       	ldi	r20, 0x80	; 128
     fc0:	5f e3       	ldi	r21, 0x3F	; 63
     fc2:	6b 89       	ldd	r22, Y+19	; 0x13
     fc4:	7c 89       	ldd	r23, Y+20	; 0x14
     fc6:	8d 89       	ldd	r24, Y+21	; 0x15
     fc8:	9e 89       	ldd	r25, Y+22	; 0x16
     fca:	0e 94 38 08 	call	0x1070	; 0x1070 <__cmpsf2>
     fce:	88 23       	and	r24, r24
     fd0:	2c f4       	brge	.+10     	; 0xfdc <main+0x1ae>
		__ticks = 1;
     fd2:	81 e0       	ldi	r24, 0x01	; 1
     fd4:	90 e0       	ldi	r25, 0x00	; 0
     fd6:	8f 8b       	std	Y+23, r24	; 0x17
     fd8:	98 8f       	std	Y+24, r25	; 0x18
     fda:	3f c0       	rjmp	.+126    	; 0x105a <main+0x22c>
	else if (__tmp > 65535)
     fdc:	20 e0       	ldi	r18, 0x00	; 0
     fde:	3f ef       	ldi	r19, 0xFF	; 255
     fe0:	4f e7       	ldi	r20, 0x7F	; 127
     fe2:	57 e4       	ldi	r21, 0x47	; 71
     fe4:	6b 89       	ldd	r22, Y+19	; 0x13
     fe6:	7c 89       	ldd	r23, Y+20	; 0x14
     fe8:	8d 89       	ldd	r24, Y+21	; 0x15
     fea:	9e 89       	ldd	r25, Y+22	; 0x16
     fec:	0e 94 b9 08 	call	0x1172	; 0x1172 <__gesf2>
     ff0:	18 16       	cp	r1, r24
     ff2:	4c f5       	brge	.+82     	; 0x1046 <main+0x218>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     ff4:	20 e0       	ldi	r18, 0x00	; 0
     ff6:	30 e0       	ldi	r19, 0x00	; 0
     ff8:	40 e2       	ldi	r20, 0x20	; 32
     ffa:	51 e4       	ldi	r21, 0x41	; 65
     ffc:	69 81       	ldd	r22, Y+1	; 0x01
     ffe:	7a 81       	ldd	r23, Y+2	; 0x02
    1000:	8b 81       	ldd	r24, Y+3	; 0x03
    1002:	9c 81       	ldd	r25, Y+4	; 0x04
    1004:	0e 94 be 08 	call	0x117c	; 0x117c <__mulsf3>
    1008:	dc 01       	movw	r26, r24
    100a:	cb 01       	movw	r24, r22
    100c:	bc 01       	movw	r22, r24
    100e:	cd 01       	movw	r24, r26
    1010:	0e 94 3d 08 	call	0x107a	; 0x107a <__fixunssfsi>
    1014:	dc 01       	movw	r26, r24
    1016:	cb 01       	movw	r24, r22
    1018:	8f 8b       	std	Y+23, r24	; 0x17
    101a:	98 8f       	std	Y+24, r25	; 0x18
    101c:	0f c0       	rjmp	.+30     	; 0x103c <main+0x20e>
    101e:	80 e2       	ldi	r24, 0x20	; 32
    1020:	93 e0       	ldi	r25, 0x03	; 3
    1022:	89 8f       	std	Y+25, r24	; 0x19
    1024:	9a 8f       	std	Y+26, r25	; 0x1a
    1026:	89 8d       	ldd	r24, Y+25	; 0x19
    1028:	9a 8d       	ldd	r25, Y+26	; 0x1a
    102a:	01 97       	sbiw	r24, 0x01	; 1
    102c:	f1 f7       	brne	.-4      	; 0x102a <main+0x1fc>
    102e:	89 8f       	std	Y+25, r24	; 0x19
    1030:	9a 8f       	std	Y+26, r25	; 0x1a
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1032:	8f 89       	ldd	r24, Y+23	; 0x17
    1034:	98 8d       	ldd	r25, Y+24	; 0x18
    1036:	01 97       	sbiw	r24, 0x01	; 1
    1038:	8f 8b       	std	Y+23, r24	; 0x17
    103a:	98 8f       	std	Y+24, r25	; 0x18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    103c:	8f 89       	ldd	r24, Y+23	; 0x17
    103e:	98 8d       	ldd	r25, Y+24	; 0x18
    1040:	89 2b       	or	r24, r25
    1042:	69 f7       	brne	.-38     	; 0x101e <main+0x1f0>
    1044:	14 c0       	rjmp	.+40     	; 0x106e <main+0x240>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1046:	6b 89       	ldd	r22, Y+19	; 0x13
    1048:	7c 89       	ldd	r23, Y+20	; 0x14
    104a:	8d 89       	ldd	r24, Y+21	; 0x15
    104c:	9e 89       	ldd	r25, Y+22	; 0x16
    104e:	0e 94 3d 08 	call	0x107a	; 0x107a <__fixunssfsi>
    1052:	dc 01       	movw	r26, r24
    1054:	cb 01       	movw	r24, r22
    1056:	8f 8b       	std	Y+23, r24	; 0x17
    1058:	98 8f       	std	Y+24, r25	; 0x18
    105a:	8f 89       	ldd	r24, Y+23	; 0x17
    105c:	98 8d       	ldd	r25, Y+24	; 0x18
    105e:	8b 8f       	std	Y+27, r24	; 0x1b
    1060:	9c 8f       	std	Y+28, r25	; 0x1c
    1062:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1064:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1066:	01 97       	sbiw	r24, 0x01	; 1
    1068:	f1 f7       	brne	.-4      	; 0x1066 <main+0x238>
    106a:	8b 8f       	std	Y+27, r24	; 0x1b
    106c:	9c 8f       	std	Y+28, r25	; 0x1c
		}
		_delay_ms(500);
	}
    106e:	73 cf       	rjmp	.-282    	; 0xf56 <main+0x128>

00001070 <__cmpsf2>:
    1070:	0e 94 6c 08 	call	0x10d8	; 0x10d8 <__fp_cmp>
    1074:	08 f4       	brcc	.+2      	; 0x1078 <__cmpsf2+0x8>
    1076:	81 e0       	ldi	r24, 0x01	; 1
    1078:	08 95       	ret

0000107a <__fixunssfsi>:
    107a:	0e 94 98 08 	call	0x1130	; 0x1130 <__fp_splitA>
    107e:	88 f0       	brcs	.+34     	; 0x10a2 <__fixunssfsi+0x28>
    1080:	9f 57       	subi	r25, 0x7F	; 127
    1082:	98 f0       	brcs	.+38     	; 0x10aa <__fixunssfsi+0x30>
    1084:	b9 2f       	mov	r27, r25
    1086:	99 27       	eor	r25, r25
    1088:	b7 51       	subi	r27, 0x17	; 23
    108a:	b0 f0       	brcs	.+44     	; 0x10b8 <__fixunssfsi+0x3e>
    108c:	e1 f0       	breq	.+56     	; 0x10c6 <__fixunssfsi+0x4c>
    108e:	66 0f       	add	r22, r22
    1090:	77 1f       	adc	r23, r23
    1092:	88 1f       	adc	r24, r24
    1094:	99 1f       	adc	r25, r25
    1096:	1a f0       	brmi	.+6      	; 0x109e <__fixunssfsi+0x24>
    1098:	ba 95       	dec	r27
    109a:	c9 f7       	brne	.-14     	; 0x108e <__fixunssfsi+0x14>
    109c:	14 c0       	rjmp	.+40     	; 0x10c6 <__fixunssfsi+0x4c>
    109e:	b1 30       	cpi	r27, 0x01	; 1
    10a0:	91 f0       	breq	.+36     	; 0x10c6 <__fixunssfsi+0x4c>
    10a2:	0e 94 b2 08 	call	0x1164	; 0x1164 <__fp_zero>
    10a6:	b1 e0       	ldi	r27, 0x01	; 1
    10a8:	08 95       	ret
    10aa:	0c 94 b2 08 	jmp	0x1164	; 0x1164 <__fp_zero>
    10ae:	67 2f       	mov	r22, r23
    10b0:	78 2f       	mov	r23, r24
    10b2:	88 27       	eor	r24, r24
    10b4:	b8 5f       	subi	r27, 0xF8	; 248
    10b6:	39 f0       	breq	.+14     	; 0x10c6 <__fixunssfsi+0x4c>
    10b8:	b9 3f       	cpi	r27, 0xF9	; 249
    10ba:	cc f3       	brlt	.-14     	; 0x10ae <__fixunssfsi+0x34>
    10bc:	86 95       	lsr	r24
    10be:	77 95       	ror	r23
    10c0:	67 95       	ror	r22
    10c2:	b3 95       	inc	r27
    10c4:	d9 f7       	brne	.-10     	; 0x10bc <__fixunssfsi+0x42>
    10c6:	3e f4       	brtc	.+14     	; 0x10d6 <__fixunssfsi+0x5c>
    10c8:	90 95       	com	r25
    10ca:	80 95       	com	r24
    10cc:	70 95       	com	r23
    10ce:	61 95       	neg	r22
    10d0:	7f 4f       	sbci	r23, 0xFF	; 255
    10d2:	8f 4f       	sbci	r24, 0xFF	; 255
    10d4:	9f 4f       	sbci	r25, 0xFF	; 255
    10d6:	08 95       	ret

000010d8 <__fp_cmp>:
    10d8:	99 0f       	add	r25, r25
    10da:	00 08       	sbc	r0, r0
    10dc:	55 0f       	add	r21, r21
    10de:	aa 0b       	sbc	r26, r26
    10e0:	e0 e8       	ldi	r30, 0x80	; 128
    10e2:	fe ef       	ldi	r31, 0xFE	; 254
    10e4:	16 16       	cp	r1, r22
    10e6:	17 06       	cpc	r1, r23
    10e8:	e8 07       	cpc	r30, r24
    10ea:	f9 07       	cpc	r31, r25
    10ec:	c0 f0       	brcs	.+48     	; 0x111e <__fp_cmp+0x46>
    10ee:	12 16       	cp	r1, r18
    10f0:	13 06       	cpc	r1, r19
    10f2:	e4 07       	cpc	r30, r20
    10f4:	f5 07       	cpc	r31, r21
    10f6:	98 f0       	brcs	.+38     	; 0x111e <__fp_cmp+0x46>
    10f8:	62 1b       	sub	r22, r18
    10fa:	73 0b       	sbc	r23, r19
    10fc:	84 0b       	sbc	r24, r20
    10fe:	95 0b       	sbc	r25, r21
    1100:	39 f4       	brne	.+14     	; 0x1110 <__fp_cmp+0x38>
    1102:	0a 26       	eor	r0, r26
    1104:	61 f0       	breq	.+24     	; 0x111e <__fp_cmp+0x46>
    1106:	23 2b       	or	r18, r19
    1108:	24 2b       	or	r18, r20
    110a:	25 2b       	or	r18, r21
    110c:	21 f4       	brne	.+8      	; 0x1116 <__fp_cmp+0x3e>
    110e:	08 95       	ret
    1110:	0a 26       	eor	r0, r26
    1112:	09 f4       	brne	.+2      	; 0x1116 <__fp_cmp+0x3e>
    1114:	a1 40       	sbci	r26, 0x01	; 1
    1116:	a6 95       	lsr	r26
    1118:	8f ef       	ldi	r24, 0xFF	; 255
    111a:	81 1d       	adc	r24, r1
    111c:	81 1d       	adc	r24, r1
    111e:	08 95       	ret

00001120 <__fp_split3>:
    1120:	57 fd       	sbrc	r21, 7
    1122:	90 58       	subi	r25, 0x80	; 128
    1124:	44 0f       	add	r20, r20
    1126:	55 1f       	adc	r21, r21
    1128:	59 f0       	breq	.+22     	; 0x1140 <__fp_splitA+0x10>
    112a:	5f 3f       	cpi	r21, 0xFF	; 255
    112c:	71 f0       	breq	.+28     	; 0x114a <__fp_splitA+0x1a>
    112e:	47 95       	ror	r20

00001130 <__fp_splitA>:
    1130:	88 0f       	add	r24, r24
    1132:	97 fb       	bst	r25, 7
    1134:	99 1f       	adc	r25, r25
    1136:	61 f0       	breq	.+24     	; 0x1150 <__fp_splitA+0x20>
    1138:	9f 3f       	cpi	r25, 0xFF	; 255
    113a:	79 f0       	breq	.+30     	; 0x115a <__fp_splitA+0x2a>
    113c:	87 95       	ror	r24
    113e:	08 95       	ret
    1140:	12 16       	cp	r1, r18
    1142:	13 06       	cpc	r1, r19
    1144:	14 06       	cpc	r1, r20
    1146:	55 1f       	adc	r21, r21
    1148:	f2 cf       	rjmp	.-28     	; 0x112e <__fp_split3+0xe>
    114a:	46 95       	lsr	r20
    114c:	f1 df       	rcall	.-30     	; 0x1130 <__fp_splitA>
    114e:	08 c0       	rjmp	.+16     	; 0x1160 <__fp_splitA+0x30>
    1150:	16 16       	cp	r1, r22
    1152:	17 06       	cpc	r1, r23
    1154:	18 06       	cpc	r1, r24
    1156:	99 1f       	adc	r25, r25
    1158:	f1 cf       	rjmp	.-30     	; 0x113c <__fp_splitA+0xc>
    115a:	86 95       	lsr	r24
    115c:	71 05       	cpc	r23, r1
    115e:	61 05       	cpc	r22, r1
    1160:	08 94       	sec
    1162:	08 95       	ret

00001164 <__fp_zero>:
    1164:	e8 94       	clt

00001166 <__fp_szero>:
    1166:	bb 27       	eor	r27, r27
    1168:	66 27       	eor	r22, r22
    116a:	77 27       	eor	r23, r23
    116c:	cb 01       	movw	r24, r22
    116e:	97 f9       	bld	r25, 7
    1170:	08 95       	ret

00001172 <__gesf2>:
    1172:	0e 94 6c 08 	call	0x10d8	; 0x10d8 <__fp_cmp>
    1176:	08 f4       	brcc	.+2      	; 0x117a <__gesf2+0x8>
    1178:	8f ef       	ldi	r24, 0xFF	; 255
    117a:	08 95       	ret

0000117c <__mulsf3>:
    117c:	0e 94 d1 08 	call	0x11a2	; 0x11a2 <__mulsf3x>
    1180:	0c 94 42 09 	jmp	0x1284	; 0x1284 <__fp_round>
    1184:	0e 94 34 09 	call	0x1268	; 0x1268 <__fp_pscA>
    1188:	38 f0       	brcs	.+14     	; 0x1198 <__mulsf3+0x1c>
    118a:	0e 94 3b 09 	call	0x1276	; 0x1276 <__fp_pscB>
    118e:	20 f0       	brcs	.+8      	; 0x1198 <__mulsf3+0x1c>
    1190:	95 23       	and	r25, r21
    1192:	11 f0       	breq	.+4      	; 0x1198 <__mulsf3+0x1c>
    1194:	0c 94 2b 09 	jmp	0x1256	; 0x1256 <__fp_inf>
    1198:	0c 94 31 09 	jmp	0x1262	; 0x1262 <__fp_nan>
    119c:	11 24       	eor	r1, r1
    119e:	0c 94 b3 08 	jmp	0x1166	; 0x1166 <__fp_szero>

000011a2 <__mulsf3x>:
    11a2:	0e 94 90 08 	call	0x1120	; 0x1120 <__fp_split3>
    11a6:	70 f3       	brcs	.-36     	; 0x1184 <__mulsf3+0x8>

000011a8 <__mulsf3_pse>:
    11a8:	95 9f       	mul	r25, r21
    11aa:	c1 f3       	breq	.-16     	; 0x119c <__mulsf3+0x20>
    11ac:	95 0f       	add	r25, r21
    11ae:	50 e0       	ldi	r21, 0x00	; 0
    11b0:	55 1f       	adc	r21, r21
    11b2:	62 9f       	mul	r22, r18
    11b4:	f0 01       	movw	r30, r0
    11b6:	72 9f       	mul	r23, r18
    11b8:	bb 27       	eor	r27, r27
    11ba:	f0 0d       	add	r31, r0
    11bc:	b1 1d       	adc	r27, r1
    11be:	63 9f       	mul	r22, r19
    11c0:	aa 27       	eor	r26, r26
    11c2:	f0 0d       	add	r31, r0
    11c4:	b1 1d       	adc	r27, r1
    11c6:	aa 1f       	adc	r26, r26
    11c8:	64 9f       	mul	r22, r20
    11ca:	66 27       	eor	r22, r22
    11cc:	b0 0d       	add	r27, r0
    11ce:	a1 1d       	adc	r26, r1
    11d0:	66 1f       	adc	r22, r22
    11d2:	82 9f       	mul	r24, r18
    11d4:	22 27       	eor	r18, r18
    11d6:	b0 0d       	add	r27, r0
    11d8:	a1 1d       	adc	r26, r1
    11da:	62 1f       	adc	r22, r18
    11dc:	73 9f       	mul	r23, r19
    11de:	b0 0d       	add	r27, r0
    11e0:	a1 1d       	adc	r26, r1
    11e2:	62 1f       	adc	r22, r18
    11e4:	83 9f       	mul	r24, r19
    11e6:	a0 0d       	add	r26, r0
    11e8:	61 1d       	adc	r22, r1
    11ea:	22 1f       	adc	r18, r18
    11ec:	74 9f       	mul	r23, r20
    11ee:	33 27       	eor	r19, r19
    11f0:	a0 0d       	add	r26, r0
    11f2:	61 1d       	adc	r22, r1
    11f4:	23 1f       	adc	r18, r19
    11f6:	84 9f       	mul	r24, r20
    11f8:	60 0d       	add	r22, r0
    11fa:	21 1d       	adc	r18, r1
    11fc:	82 2f       	mov	r24, r18
    11fe:	76 2f       	mov	r23, r22
    1200:	6a 2f       	mov	r22, r26
    1202:	11 24       	eor	r1, r1
    1204:	9f 57       	subi	r25, 0x7F	; 127
    1206:	50 40       	sbci	r21, 0x00	; 0
    1208:	9a f0       	brmi	.+38     	; 0x1230 <__mulsf3_pse+0x88>
    120a:	f1 f0       	breq	.+60     	; 0x1248 <__mulsf3_pse+0xa0>
    120c:	88 23       	and	r24, r24
    120e:	4a f0       	brmi	.+18     	; 0x1222 <__mulsf3_pse+0x7a>
    1210:	ee 0f       	add	r30, r30
    1212:	ff 1f       	adc	r31, r31
    1214:	bb 1f       	adc	r27, r27
    1216:	66 1f       	adc	r22, r22
    1218:	77 1f       	adc	r23, r23
    121a:	88 1f       	adc	r24, r24
    121c:	91 50       	subi	r25, 0x01	; 1
    121e:	50 40       	sbci	r21, 0x00	; 0
    1220:	a9 f7       	brne	.-22     	; 0x120c <__mulsf3_pse+0x64>
    1222:	9e 3f       	cpi	r25, 0xFE	; 254
    1224:	51 05       	cpc	r21, r1
    1226:	80 f0       	brcs	.+32     	; 0x1248 <__mulsf3_pse+0xa0>
    1228:	0c 94 2b 09 	jmp	0x1256	; 0x1256 <__fp_inf>
    122c:	0c 94 b3 08 	jmp	0x1166	; 0x1166 <__fp_szero>
    1230:	5f 3f       	cpi	r21, 0xFF	; 255
    1232:	e4 f3       	brlt	.-8      	; 0x122c <__mulsf3_pse+0x84>
    1234:	98 3e       	cpi	r25, 0xE8	; 232
    1236:	d4 f3       	brlt	.-12     	; 0x122c <__mulsf3_pse+0x84>
    1238:	86 95       	lsr	r24
    123a:	77 95       	ror	r23
    123c:	67 95       	ror	r22
    123e:	b7 95       	ror	r27
    1240:	f7 95       	ror	r31
    1242:	e7 95       	ror	r30
    1244:	9f 5f       	subi	r25, 0xFF	; 255
    1246:	c1 f7       	brne	.-16     	; 0x1238 <__mulsf3_pse+0x90>
    1248:	fe 2b       	or	r31, r30
    124a:	88 0f       	add	r24, r24
    124c:	91 1d       	adc	r25, r1
    124e:	96 95       	lsr	r25
    1250:	87 95       	ror	r24
    1252:	97 f9       	bld	r25, 7
    1254:	08 95       	ret

00001256 <__fp_inf>:
    1256:	97 f9       	bld	r25, 7
    1258:	9f 67       	ori	r25, 0x7F	; 127
    125a:	80 e8       	ldi	r24, 0x80	; 128
    125c:	70 e0       	ldi	r23, 0x00	; 0
    125e:	60 e0       	ldi	r22, 0x00	; 0
    1260:	08 95       	ret

00001262 <__fp_nan>:
    1262:	9f ef       	ldi	r25, 0xFF	; 255
    1264:	80 ec       	ldi	r24, 0xC0	; 192
    1266:	08 95       	ret

00001268 <__fp_pscA>:
    1268:	00 24       	eor	r0, r0
    126a:	0a 94       	dec	r0
    126c:	16 16       	cp	r1, r22
    126e:	17 06       	cpc	r1, r23
    1270:	18 06       	cpc	r1, r24
    1272:	09 06       	cpc	r0, r25
    1274:	08 95       	ret

00001276 <__fp_pscB>:
    1276:	00 24       	eor	r0, r0
    1278:	0a 94       	dec	r0
    127a:	12 16       	cp	r1, r18
    127c:	13 06       	cpc	r1, r19
    127e:	14 06       	cpc	r1, r20
    1280:	05 06       	cpc	r0, r21
    1282:	08 95       	ret

00001284 <__fp_round>:
    1284:	09 2e       	mov	r0, r25
    1286:	03 94       	inc	r0
    1288:	00 0c       	add	r0, r0
    128a:	11 f4       	brne	.+4      	; 0x1290 <__fp_round+0xc>
    128c:	88 23       	and	r24, r24
    128e:	52 f0       	brmi	.+20     	; 0x12a4 <__fp_round+0x20>
    1290:	bb 0f       	add	r27, r27
    1292:	40 f4       	brcc	.+16     	; 0x12a4 <__fp_round+0x20>
    1294:	bf 2b       	or	r27, r31
    1296:	11 f4       	brne	.+4      	; 0x129c <__fp_round+0x18>
    1298:	60 ff       	sbrs	r22, 0
    129a:	04 c0       	rjmp	.+8      	; 0x12a4 <__fp_round+0x20>
    129c:	6f 5f       	subi	r22, 0xFF	; 255
    129e:	7f 4f       	sbci	r23, 0xFF	; 255
    12a0:	8f 4f       	sbci	r24, 0xFF	; 255
    12a2:	9f 4f       	sbci	r25, 0xFF	; 255
    12a4:	08 95       	ret

000012a6 <DriverPowerInit>:
    12a6:	80 e2       	ldi	r24, 0x20	; 32
    12a8:	80 93 41 06 	sts	0x0641, r24	; 0x800641 <__TEXT_REGION_LENGTH__+0x700641>
    12ac:	08 95       	ret

000012ae <DriverPowerVccAuxSet>:
    12ae:	81 11       	cpse	r24, r1
    12b0:	04 c0       	rjmp	.+8      	; 0x12ba <DriverPowerVccAuxSet+0xc>
    12b2:	80 e2       	ldi	r24, 0x20	; 32
    12b4:	80 93 46 06 	sts	0x0646, r24	; 0x800646 <__TEXT_REGION_LENGTH__+0x700646>
    12b8:	08 95       	ret
    12ba:	80 e2       	ldi	r24, 0x20	; 32
    12bc:	80 93 45 06 	sts	0x0645, r24	; 0x800645 <__TEXT_REGION_LENGTH__+0x700645>
    12c0:	08 95       	ret

000012c2 <vfprintf>:
    12c2:	2f 92       	push	r2
    12c4:	3f 92       	push	r3
    12c6:	4f 92       	push	r4
    12c8:	5f 92       	push	r5
    12ca:	6f 92       	push	r6
    12cc:	7f 92       	push	r7
    12ce:	8f 92       	push	r8
    12d0:	9f 92       	push	r9
    12d2:	af 92       	push	r10
    12d4:	bf 92       	push	r11
    12d6:	cf 92       	push	r12
    12d8:	df 92       	push	r13
    12da:	ef 92       	push	r14
    12dc:	ff 92       	push	r15
    12de:	0f 93       	push	r16
    12e0:	1f 93       	push	r17
    12e2:	cf 93       	push	r28
    12e4:	df 93       	push	r29
    12e6:	cd b7       	in	r28, 0x3d	; 61
    12e8:	de b7       	in	r29, 0x3e	; 62
    12ea:	60 97       	sbiw	r28, 0x10	; 16
    12ec:	cd bf       	out	0x3d, r28	; 61
    12ee:	de bf       	out	0x3e, r29	; 62
    12f0:	7c 01       	movw	r14, r24
    12f2:	1b 01       	movw	r2, r22
    12f4:	6a 01       	movw	r12, r20
    12f6:	fc 01       	movw	r30, r24
    12f8:	16 82       	std	Z+6, r1	; 0x06
    12fa:	17 82       	std	Z+7, r1	; 0x07
    12fc:	83 81       	ldd	r24, Z+3	; 0x03
    12fe:	81 ff       	sbrs	r24, 1
    1300:	44 c3       	rjmp	.+1672   	; 0x198a <vfprintf+0x6c8>
    1302:	9e 01       	movw	r18, r28
    1304:	2f 5f       	subi	r18, 0xFF	; 255
    1306:	3f 4f       	sbci	r19, 0xFF	; 255
    1308:	39 01       	movw	r6, r18
    130a:	f7 01       	movw	r30, r14
    130c:	93 81       	ldd	r25, Z+3	; 0x03
    130e:	f1 01       	movw	r30, r2
    1310:	93 fd       	sbrc	r25, 3
    1312:	85 91       	lpm	r24, Z+
    1314:	93 ff       	sbrs	r25, 3
    1316:	81 91       	ld	r24, Z+
    1318:	1f 01       	movw	r2, r30
    131a:	88 23       	and	r24, r24
    131c:	09 f4       	brne	.+2      	; 0x1320 <vfprintf+0x5e>
    131e:	31 c3       	rjmp	.+1634   	; 0x1982 <vfprintf+0x6c0>
    1320:	85 32       	cpi	r24, 0x25	; 37
    1322:	39 f4       	brne	.+14     	; 0x1332 <vfprintf+0x70>
    1324:	93 fd       	sbrc	r25, 3
    1326:	85 91       	lpm	r24, Z+
    1328:	93 ff       	sbrs	r25, 3
    132a:	81 91       	ld	r24, Z+
    132c:	1f 01       	movw	r2, r30
    132e:	85 32       	cpi	r24, 0x25	; 37
    1330:	39 f4       	brne	.+14     	; 0x1340 <vfprintf+0x7e>
    1332:	b7 01       	movw	r22, r14
    1334:	90 e0       	ldi	r25, 0x00	; 0
    1336:	0e 94 ef 0d 	call	0x1bde	; 0x1bde <fputc>
    133a:	56 01       	movw	r10, r12
    133c:	65 01       	movw	r12, r10
    133e:	e5 cf       	rjmp	.-54     	; 0x130a <vfprintf+0x48>
    1340:	10 e0       	ldi	r17, 0x00	; 0
    1342:	51 2c       	mov	r5, r1
    1344:	91 2c       	mov	r9, r1
    1346:	ff e1       	ldi	r31, 0x1F	; 31
    1348:	f9 15       	cp	r31, r9
    134a:	d8 f0       	brcs	.+54     	; 0x1382 <vfprintf+0xc0>
    134c:	8b 32       	cpi	r24, 0x2B	; 43
    134e:	79 f0       	breq	.+30     	; 0x136e <vfprintf+0xac>
    1350:	38 f4       	brcc	.+14     	; 0x1360 <vfprintf+0x9e>
    1352:	80 32       	cpi	r24, 0x20	; 32
    1354:	79 f0       	breq	.+30     	; 0x1374 <vfprintf+0xb2>
    1356:	83 32       	cpi	r24, 0x23	; 35
    1358:	a1 f4       	brne	.+40     	; 0x1382 <vfprintf+0xc0>
    135a:	f9 2d       	mov	r31, r9
    135c:	f0 61       	ori	r31, 0x10	; 16
    135e:	2e c0       	rjmp	.+92     	; 0x13bc <vfprintf+0xfa>
    1360:	8d 32       	cpi	r24, 0x2D	; 45
    1362:	61 f0       	breq	.+24     	; 0x137c <vfprintf+0xba>
    1364:	80 33       	cpi	r24, 0x30	; 48
    1366:	69 f4       	brne	.+26     	; 0x1382 <vfprintf+0xc0>
    1368:	29 2d       	mov	r18, r9
    136a:	21 60       	ori	r18, 0x01	; 1
    136c:	2d c0       	rjmp	.+90     	; 0x13c8 <vfprintf+0x106>
    136e:	39 2d       	mov	r19, r9
    1370:	32 60       	ori	r19, 0x02	; 2
    1372:	93 2e       	mov	r9, r19
    1374:	89 2d       	mov	r24, r9
    1376:	84 60       	ori	r24, 0x04	; 4
    1378:	98 2e       	mov	r9, r24
    137a:	2a c0       	rjmp	.+84     	; 0x13d0 <vfprintf+0x10e>
    137c:	e9 2d       	mov	r30, r9
    137e:	e8 60       	ori	r30, 0x08	; 8
    1380:	15 c0       	rjmp	.+42     	; 0x13ac <vfprintf+0xea>
    1382:	97 fc       	sbrc	r9, 7
    1384:	2d c0       	rjmp	.+90     	; 0x13e0 <vfprintf+0x11e>
    1386:	20 ed       	ldi	r18, 0xD0	; 208
    1388:	28 0f       	add	r18, r24
    138a:	2a 30       	cpi	r18, 0x0A	; 10
    138c:	88 f4       	brcc	.+34     	; 0x13b0 <vfprintf+0xee>
    138e:	96 fe       	sbrs	r9, 6
    1390:	06 c0       	rjmp	.+12     	; 0x139e <vfprintf+0xdc>
    1392:	3a e0       	ldi	r19, 0x0A	; 10
    1394:	13 9f       	mul	r17, r19
    1396:	20 0d       	add	r18, r0
    1398:	11 24       	eor	r1, r1
    139a:	12 2f       	mov	r17, r18
    139c:	19 c0       	rjmp	.+50     	; 0x13d0 <vfprintf+0x10e>
    139e:	8a e0       	ldi	r24, 0x0A	; 10
    13a0:	58 9e       	mul	r5, r24
    13a2:	20 0d       	add	r18, r0
    13a4:	11 24       	eor	r1, r1
    13a6:	52 2e       	mov	r5, r18
    13a8:	e9 2d       	mov	r30, r9
    13aa:	e0 62       	ori	r30, 0x20	; 32
    13ac:	9e 2e       	mov	r9, r30
    13ae:	10 c0       	rjmp	.+32     	; 0x13d0 <vfprintf+0x10e>
    13b0:	8e 32       	cpi	r24, 0x2E	; 46
    13b2:	31 f4       	brne	.+12     	; 0x13c0 <vfprintf+0xfe>
    13b4:	96 fc       	sbrc	r9, 6
    13b6:	e5 c2       	rjmp	.+1482   	; 0x1982 <vfprintf+0x6c0>
    13b8:	f9 2d       	mov	r31, r9
    13ba:	f0 64       	ori	r31, 0x40	; 64
    13bc:	9f 2e       	mov	r9, r31
    13be:	08 c0       	rjmp	.+16     	; 0x13d0 <vfprintf+0x10e>
    13c0:	8c 36       	cpi	r24, 0x6C	; 108
    13c2:	21 f4       	brne	.+8      	; 0x13cc <vfprintf+0x10a>
    13c4:	29 2d       	mov	r18, r9
    13c6:	20 68       	ori	r18, 0x80	; 128
    13c8:	92 2e       	mov	r9, r18
    13ca:	02 c0       	rjmp	.+4      	; 0x13d0 <vfprintf+0x10e>
    13cc:	88 36       	cpi	r24, 0x68	; 104
    13ce:	41 f4       	brne	.+16     	; 0x13e0 <vfprintf+0x11e>
    13d0:	f1 01       	movw	r30, r2
    13d2:	93 fd       	sbrc	r25, 3
    13d4:	85 91       	lpm	r24, Z+
    13d6:	93 ff       	sbrs	r25, 3
    13d8:	81 91       	ld	r24, Z+
    13da:	1f 01       	movw	r2, r30
    13dc:	81 11       	cpse	r24, r1
    13de:	b3 cf       	rjmp	.-154    	; 0x1346 <vfprintf+0x84>
    13e0:	9b eb       	ldi	r25, 0xBB	; 187
    13e2:	98 0f       	add	r25, r24
    13e4:	93 30       	cpi	r25, 0x03	; 3
    13e6:	20 f4       	brcc	.+8      	; 0x13f0 <vfprintf+0x12e>
    13e8:	99 2d       	mov	r25, r9
    13ea:	90 61       	ori	r25, 0x10	; 16
    13ec:	80 5e       	subi	r24, 0xE0	; 224
    13ee:	07 c0       	rjmp	.+14     	; 0x13fe <vfprintf+0x13c>
    13f0:	9b e9       	ldi	r25, 0x9B	; 155
    13f2:	98 0f       	add	r25, r24
    13f4:	93 30       	cpi	r25, 0x03	; 3
    13f6:	08 f0       	brcs	.+2      	; 0x13fa <vfprintf+0x138>
    13f8:	66 c1       	rjmp	.+716    	; 0x16c6 <vfprintf+0x404>
    13fa:	99 2d       	mov	r25, r9
    13fc:	9f 7e       	andi	r25, 0xEF	; 239
    13fe:	96 ff       	sbrs	r25, 6
    1400:	16 e0       	ldi	r17, 0x06	; 6
    1402:	9f 73       	andi	r25, 0x3F	; 63
    1404:	99 2e       	mov	r9, r25
    1406:	85 36       	cpi	r24, 0x65	; 101
    1408:	19 f4       	brne	.+6      	; 0x1410 <vfprintf+0x14e>
    140a:	90 64       	ori	r25, 0x40	; 64
    140c:	99 2e       	mov	r9, r25
    140e:	08 c0       	rjmp	.+16     	; 0x1420 <vfprintf+0x15e>
    1410:	86 36       	cpi	r24, 0x66	; 102
    1412:	21 f4       	brne	.+8      	; 0x141c <vfprintf+0x15a>
    1414:	39 2f       	mov	r19, r25
    1416:	30 68       	ori	r19, 0x80	; 128
    1418:	93 2e       	mov	r9, r19
    141a:	02 c0       	rjmp	.+4      	; 0x1420 <vfprintf+0x15e>
    141c:	11 11       	cpse	r17, r1
    141e:	11 50       	subi	r17, 0x01	; 1
    1420:	97 fe       	sbrs	r9, 7
    1422:	07 c0       	rjmp	.+14     	; 0x1432 <vfprintf+0x170>
    1424:	1c 33       	cpi	r17, 0x3C	; 60
    1426:	50 f4       	brcc	.+20     	; 0x143c <vfprintf+0x17a>
    1428:	44 24       	eor	r4, r4
    142a:	43 94       	inc	r4
    142c:	41 0e       	add	r4, r17
    142e:	27 e0       	ldi	r18, 0x07	; 7
    1430:	0b c0       	rjmp	.+22     	; 0x1448 <vfprintf+0x186>
    1432:	18 30       	cpi	r17, 0x08	; 8
    1434:	38 f0       	brcs	.+14     	; 0x1444 <vfprintf+0x182>
    1436:	27 e0       	ldi	r18, 0x07	; 7
    1438:	17 e0       	ldi	r17, 0x07	; 7
    143a:	05 c0       	rjmp	.+10     	; 0x1446 <vfprintf+0x184>
    143c:	27 e0       	ldi	r18, 0x07	; 7
    143e:	9c e3       	ldi	r25, 0x3C	; 60
    1440:	49 2e       	mov	r4, r25
    1442:	02 c0       	rjmp	.+4      	; 0x1448 <vfprintf+0x186>
    1444:	21 2f       	mov	r18, r17
    1446:	41 2c       	mov	r4, r1
    1448:	56 01       	movw	r10, r12
    144a:	84 e0       	ldi	r24, 0x04	; 4
    144c:	a8 0e       	add	r10, r24
    144e:	b1 1c       	adc	r11, r1
    1450:	f6 01       	movw	r30, r12
    1452:	60 81       	ld	r22, Z
    1454:	71 81       	ldd	r23, Z+1	; 0x01
    1456:	82 81       	ldd	r24, Z+2	; 0x02
    1458:	93 81       	ldd	r25, Z+3	; 0x03
    145a:	04 2d       	mov	r16, r4
    145c:	a3 01       	movw	r20, r6
    145e:	0e 94 01 0d 	call	0x1a02	; 0x1a02 <__ftoa_engine>
    1462:	6c 01       	movw	r12, r24
    1464:	f9 81       	ldd	r31, Y+1	; 0x01
    1466:	fc 87       	std	Y+12, r31	; 0x0c
    1468:	f0 ff       	sbrs	r31, 0
    146a:	02 c0       	rjmp	.+4      	; 0x1470 <vfprintf+0x1ae>
    146c:	f3 ff       	sbrs	r31, 3
    146e:	06 c0       	rjmp	.+12     	; 0x147c <vfprintf+0x1ba>
    1470:	91 fc       	sbrc	r9, 1
    1472:	06 c0       	rjmp	.+12     	; 0x1480 <vfprintf+0x1be>
    1474:	92 fe       	sbrs	r9, 2
    1476:	06 c0       	rjmp	.+12     	; 0x1484 <vfprintf+0x1c2>
    1478:	00 e2       	ldi	r16, 0x20	; 32
    147a:	05 c0       	rjmp	.+10     	; 0x1486 <vfprintf+0x1c4>
    147c:	0d e2       	ldi	r16, 0x2D	; 45
    147e:	03 c0       	rjmp	.+6      	; 0x1486 <vfprintf+0x1c4>
    1480:	0b e2       	ldi	r16, 0x2B	; 43
    1482:	01 c0       	rjmp	.+2      	; 0x1486 <vfprintf+0x1c4>
    1484:	00 e0       	ldi	r16, 0x00	; 0
    1486:	8c 85       	ldd	r24, Y+12	; 0x0c
    1488:	8c 70       	andi	r24, 0x0C	; 12
    148a:	19 f0       	breq	.+6      	; 0x1492 <vfprintf+0x1d0>
    148c:	01 11       	cpse	r16, r1
    148e:	5a c2       	rjmp	.+1204   	; 0x1944 <vfprintf+0x682>
    1490:	9b c2       	rjmp	.+1334   	; 0x19c8 <vfprintf+0x706>
    1492:	97 fe       	sbrs	r9, 7
    1494:	10 c0       	rjmp	.+32     	; 0x14b6 <vfprintf+0x1f4>
    1496:	4c 0c       	add	r4, r12
    1498:	fc 85       	ldd	r31, Y+12	; 0x0c
    149a:	f4 ff       	sbrs	r31, 4
    149c:	04 c0       	rjmp	.+8      	; 0x14a6 <vfprintf+0x1e4>
    149e:	8a 81       	ldd	r24, Y+2	; 0x02
    14a0:	81 33       	cpi	r24, 0x31	; 49
    14a2:	09 f4       	brne	.+2      	; 0x14a6 <vfprintf+0x1e4>
    14a4:	4a 94       	dec	r4
    14a6:	14 14       	cp	r1, r4
    14a8:	74 f5       	brge	.+92     	; 0x1506 <vfprintf+0x244>
    14aa:	28 e0       	ldi	r18, 0x08	; 8
    14ac:	24 15       	cp	r18, r4
    14ae:	78 f5       	brcc	.+94     	; 0x150e <vfprintf+0x24c>
    14b0:	88 e0       	ldi	r24, 0x08	; 8
    14b2:	48 2e       	mov	r4, r24
    14b4:	2c c0       	rjmp	.+88     	; 0x150e <vfprintf+0x24c>
    14b6:	96 fc       	sbrc	r9, 6
    14b8:	2a c0       	rjmp	.+84     	; 0x150e <vfprintf+0x24c>
    14ba:	81 2f       	mov	r24, r17
    14bc:	90 e0       	ldi	r25, 0x00	; 0
    14be:	8c 15       	cp	r24, r12
    14c0:	9d 05       	cpc	r25, r13
    14c2:	9c f0       	brlt	.+38     	; 0x14ea <vfprintf+0x228>
    14c4:	3c ef       	ldi	r19, 0xFC	; 252
    14c6:	c3 16       	cp	r12, r19
    14c8:	3f ef       	ldi	r19, 0xFF	; 255
    14ca:	d3 06       	cpc	r13, r19
    14cc:	74 f0       	brlt	.+28     	; 0x14ea <vfprintf+0x228>
    14ce:	89 2d       	mov	r24, r9
    14d0:	80 68       	ori	r24, 0x80	; 128
    14d2:	98 2e       	mov	r9, r24
    14d4:	0a c0       	rjmp	.+20     	; 0x14ea <vfprintf+0x228>
    14d6:	e2 e0       	ldi	r30, 0x02	; 2
    14d8:	f0 e0       	ldi	r31, 0x00	; 0
    14da:	ec 0f       	add	r30, r28
    14dc:	fd 1f       	adc	r31, r29
    14de:	e1 0f       	add	r30, r17
    14e0:	f1 1d       	adc	r31, r1
    14e2:	80 81       	ld	r24, Z
    14e4:	80 33       	cpi	r24, 0x30	; 48
    14e6:	19 f4       	brne	.+6      	; 0x14ee <vfprintf+0x22c>
    14e8:	11 50       	subi	r17, 0x01	; 1
    14ea:	11 11       	cpse	r17, r1
    14ec:	f4 cf       	rjmp	.-24     	; 0x14d6 <vfprintf+0x214>
    14ee:	97 fe       	sbrs	r9, 7
    14f0:	0e c0       	rjmp	.+28     	; 0x150e <vfprintf+0x24c>
    14f2:	44 24       	eor	r4, r4
    14f4:	43 94       	inc	r4
    14f6:	41 0e       	add	r4, r17
    14f8:	81 2f       	mov	r24, r17
    14fa:	90 e0       	ldi	r25, 0x00	; 0
    14fc:	c8 16       	cp	r12, r24
    14fe:	d9 06       	cpc	r13, r25
    1500:	2c f4       	brge	.+10     	; 0x150c <vfprintf+0x24a>
    1502:	1c 19       	sub	r17, r12
    1504:	04 c0       	rjmp	.+8      	; 0x150e <vfprintf+0x24c>
    1506:	44 24       	eor	r4, r4
    1508:	43 94       	inc	r4
    150a:	01 c0       	rjmp	.+2      	; 0x150e <vfprintf+0x24c>
    150c:	10 e0       	ldi	r17, 0x00	; 0
    150e:	97 fe       	sbrs	r9, 7
    1510:	06 c0       	rjmp	.+12     	; 0x151e <vfprintf+0x25c>
    1512:	1c 14       	cp	r1, r12
    1514:	1d 04       	cpc	r1, r13
    1516:	34 f4       	brge	.+12     	; 0x1524 <vfprintf+0x262>
    1518:	c6 01       	movw	r24, r12
    151a:	01 96       	adiw	r24, 0x01	; 1
    151c:	05 c0       	rjmp	.+10     	; 0x1528 <vfprintf+0x266>
    151e:	85 e0       	ldi	r24, 0x05	; 5
    1520:	90 e0       	ldi	r25, 0x00	; 0
    1522:	02 c0       	rjmp	.+4      	; 0x1528 <vfprintf+0x266>
    1524:	81 e0       	ldi	r24, 0x01	; 1
    1526:	90 e0       	ldi	r25, 0x00	; 0
    1528:	01 11       	cpse	r16, r1
    152a:	01 96       	adiw	r24, 0x01	; 1
    152c:	11 23       	and	r17, r17
    152e:	31 f0       	breq	.+12     	; 0x153c <vfprintf+0x27a>
    1530:	21 2f       	mov	r18, r17
    1532:	30 e0       	ldi	r19, 0x00	; 0
    1534:	2f 5f       	subi	r18, 0xFF	; 255
    1536:	3f 4f       	sbci	r19, 0xFF	; 255
    1538:	82 0f       	add	r24, r18
    153a:	93 1f       	adc	r25, r19
    153c:	25 2d       	mov	r18, r5
    153e:	30 e0       	ldi	r19, 0x00	; 0
    1540:	82 17       	cp	r24, r18
    1542:	93 07       	cpc	r25, r19
    1544:	14 f4       	brge	.+4      	; 0x154a <vfprintf+0x288>
    1546:	58 1a       	sub	r5, r24
    1548:	01 c0       	rjmp	.+2      	; 0x154c <vfprintf+0x28a>
    154a:	51 2c       	mov	r5, r1
    154c:	89 2d       	mov	r24, r9
    154e:	89 70       	andi	r24, 0x09	; 9
    1550:	49 f4       	brne	.+18     	; 0x1564 <vfprintf+0x2a2>
    1552:	55 20       	and	r5, r5
    1554:	39 f0       	breq	.+14     	; 0x1564 <vfprintf+0x2a2>
    1556:	b7 01       	movw	r22, r14
    1558:	80 e2       	ldi	r24, 0x20	; 32
    155a:	90 e0       	ldi	r25, 0x00	; 0
    155c:	0e 94 ef 0d 	call	0x1bde	; 0x1bde <fputc>
    1560:	5a 94       	dec	r5
    1562:	f7 cf       	rjmp	.-18     	; 0x1552 <vfprintf+0x290>
    1564:	00 23       	and	r16, r16
    1566:	29 f0       	breq	.+10     	; 0x1572 <vfprintf+0x2b0>
    1568:	b7 01       	movw	r22, r14
    156a:	80 2f       	mov	r24, r16
    156c:	90 e0       	ldi	r25, 0x00	; 0
    156e:	0e 94 ef 0d 	call	0x1bde	; 0x1bde <fputc>
    1572:	93 fc       	sbrc	r9, 3
    1574:	09 c0       	rjmp	.+18     	; 0x1588 <vfprintf+0x2c6>
    1576:	55 20       	and	r5, r5
    1578:	39 f0       	breq	.+14     	; 0x1588 <vfprintf+0x2c6>
    157a:	b7 01       	movw	r22, r14
    157c:	80 e3       	ldi	r24, 0x30	; 48
    157e:	90 e0       	ldi	r25, 0x00	; 0
    1580:	0e 94 ef 0d 	call	0x1bde	; 0x1bde <fputc>
    1584:	5a 94       	dec	r5
    1586:	f7 cf       	rjmp	.-18     	; 0x1576 <vfprintf+0x2b4>
    1588:	97 fe       	sbrs	r9, 7
    158a:	4c c0       	rjmp	.+152    	; 0x1624 <vfprintf+0x362>
    158c:	46 01       	movw	r8, r12
    158e:	d7 fe       	sbrs	r13, 7
    1590:	02 c0       	rjmp	.+4      	; 0x1596 <vfprintf+0x2d4>
    1592:	81 2c       	mov	r8, r1
    1594:	91 2c       	mov	r9, r1
    1596:	c6 01       	movw	r24, r12
    1598:	88 19       	sub	r24, r8
    159a:	99 09       	sbc	r25, r9
    159c:	f3 01       	movw	r30, r6
    159e:	e8 0f       	add	r30, r24
    15a0:	f9 1f       	adc	r31, r25
    15a2:	ed 87       	std	Y+13, r30	; 0x0d
    15a4:	fe 87       	std	Y+14, r31	; 0x0e
    15a6:	96 01       	movw	r18, r12
    15a8:	24 19       	sub	r18, r4
    15aa:	31 09       	sbc	r19, r1
    15ac:	2f 87       	std	Y+15, r18	; 0x0f
    15ae:	38 8b       	std	Y+16, r19	; 0x10
    15b0:	01 2f       	mov	r16, r17
    15b2:	10 e0       	ldi	r17, 0x00	; 0
    15b4:	11 95       	neg	r17
    15b6:	01 95       	neg	r16
    15b8:	11 09       	sbc	r17, r1
    15ba:	3f ef       	ldi	r19, 0xFF	; 255
    15bc:	83 16       	cp	r8, r19
    15be:	93 06       	cpc	r9, r19
    15c0:	29 f4       	brne	.+10     	; 0x15cc <vfprintf+0x30a>
    15c2:	b7 01       	movw	r22, r14
    15c4:	8e e2       	ldi	r24, 0x2E	; 46
    15c6:	90 e0       	ldi	r25, 0x00	; 0
    15c8:	0e 94 ef 0d 	call	0x1bde	; 0x1bde <fputc>
    15cc:	c8 14       	cp	r12, r8
    15ce:	d9 04       	cpc	r13, r9
    15d0:	4c f0       	brlt	.+18     	; 0x15e4 <vfprintf+0x322>
    15d2:	8f 85       	ldd	r24, Y+15	; 0x0f
    15d4:	98 89       	ldd	r25, Y+16	; 0x10
    15d6:	88 15       	cp	r24, r8
    15d8:	99 05       	cpc	r25, r9
    15da:	24 f4       	brge	.+8      	; 0x15e4 <vfprintf+0x322>
    15dc:	ed 85       	ldd	r30, Y+13	; 0x0d
    15de:	fe 85       	ldd	r31, Y+14	; 0x0e
    15e0:	81 81       	ldd	r24, Z+1	; 0x01
    15e2:	01 c0       	rjmp	.+2      	; 0x15e6 <vfprintf+0x324>
    15e4:	80 e3       	ldi	r24, 0x30	; 48
    15e6:	f1 e0       	ldi	r31, 0x01	; 1
    15e8:	8f 1a       	sub	r8, r31
    15ea:	91 08       	sbc	r9, r1
    15ec:	2d 85       	ldd	r18, Y+13	; 0x0d
    15ee:	3e 85       	ldd	r19, Y+14	; 0x0e
    15f0:	2f 5f       	subi	r18, 0xFF	; 255
    15f2:	3f 4f       	sbci	r19, 0xFF	; 255
    15f4:	2d 87       	std	Y+13, r18	; 0x0d
    15f6:	3e 87       	std	Y+14, r19	; 0x0e
    15f8:	80 16       	cp	r8, r16
    15fa:	91 06       	cpc	r9, r17
    15fc:	2c f0       	brlt	.+10     	; 0x1608 <vfprintf+0x346>
    15fe:	b7 01       	movw	r22, r14
    1600:	90 e0       	ldi	r25, 0x00	; 0
    1602:	0e 94 ef 0d 	call	0x1bde	; 0x1bde <fputc>
    1606:	d9 cf       	rjmp	.-78     	; 0x15ba <vfprintf+0x2f8>
    1608:	c8 14       	cp	r12, r8
    160a:	d9 04       	cpc	r13, r9
    160c:	41 f4       	brne	.+16     	; 0x161e <vfprintf+0x35c>
    160e:	9a 81       	ldd	r25, Y+2	; 0x02
    1610:	96 33       	cpi	r25, 0x36	; 54
    1612:	20 f4       	brcc	.+8      	; 0x161c <vfprintf+0x35a>
    1614:	95 33       	cpi	r25, 0x35	; 53
    1616:	19 f4       	brne	.+6      	; 0x161e <vfprintf+0x35c>
    1618:	3c 85       	ldd	r19, Y+12	; 0x0c
    161a:	34 ff       	sbrs	r19, 4
    161c:	81 e3       	ldi	r24, 0x31	; 49
    161e:	b7 01       	movw	r22, r14
    1620:	90 e0       	ldi	r25, 0x00	; 0
    1622:	4e c0       	rjmp	.+156    	; 0x16c0 <vfprintf+0x3fe>
    1624:	8a 81       	ldd	r24, Y+2	; 0x02
    1626:	81 33       	cpi	r24, 0x31	; 49
    1628:	19 f0       	breq	.+6      	; 0x1630 <vfprintf+0x36e>
    162a:	9c 85       	ldd	r25, Y+12	; 0x0c
    162c:	9f 7e       	andi	r25, 0xEF	; 239
    162e:	9c 87       	std	Y+12, r25	; 0x0c
    1630:	b7 01       	movw	r22, r14
    1632:	90 e0       	ldi	r25, 0x00	; 0
    1634:	0e 94 ef 0d 	call	0x1bde	; 0x1bde <fputc>
    1638:	11 11       	cpse	r17, r1
    163a:	05 c0       	rjmp	.+10     	; 0x1646 <vfprintf+0x384>
    163c:	94 fc       	sbrc	r9, 4
    163e:	18 c0       	rjmp	.+48     	; 0x1670 <vfprintf+0x3ae>
    1640:	85 e6       	ldi	r24, 0x65	; 101
    1642:	90 e0       	ldi	r25, 0x00	; 0
    1644:	17 c0       	rjmp	.+46     	; 0x1674 <vfprintf+0x3b2>
    1646:	b7 01       	movw	r22, r14
    1648:	8e e2       	ldi	r24, 0x2E	; 46
    164a:	90 e0       	ldi	r25, 0x00	; 0
    164c:	0e 94 ef 0d 	call	0x1bde	; 0x1bde <fputc>
    1650:	1e 5f       	subi	r17, 0xFE	; 254
    1652:	82 e0       	ldi	r24, 0x02	; 2
    1654:	01 e0       	ldi	r16, 0x01	; 1
    1656:	08 0f       	add	r16, r24
    1658:	f3 01       	movw	r30, r6
    165a:	e8 0f       	add	r30, r24
    165c:	f1 1d       	adc	r31, r1
    165e:	80 81       	ld	r24, Z
    1660:	b7 01       	movw	r22, r14
    1662:	90 e0       	ldi	r25, 0x00	; 0
    1664:	0e 94 ef 0d 	call	0x1bde	; 0x1bde <fputc>
    1668:	80 2f       	mov	r24, r16
    166a:	01 13       	cpse	r16, r17
    166c:	f3 cf       	rjmp	.-26     	; 0x1654 <vfprintf+0x392>
    166e:	e6 cf       	rjmp	.-52     	; 0x163c <vfprintf+0x37a>
    1670:	85 e4       	ldi	r24, 0x45	; 69
    1672:	90 e0       	ldi	r25, 0x00	; 0
    1674:	b7 01       	movw	r22, r14
    1676:	0e 94 ef 0d 	call	0x1bde	; 0x1bde <fputc>
    167a:	d7 fc       	sbrc	r13, 7
    167c:	06 c0       	rjmp	.+12     	; 0x168a <vfprintf+0x3c8>
    167e:	c1 14       	cp	r12, r1
    1680:	d1 04       	cpc	r13, r1
    1682:	41 f4       	brne	.+16     	; 0x1694 <vfprintf+0x3d2>
    1684:	ec 85       	ldd	r30, Y+12	; 0x0c
    1686:	e4 ff       	sbrs	r30, 4
    1688:	05 c0       	rjmp	.+10     	; 0x1694 <vfprintf+0x3d2>
    168a:	d1 94       	neg	r13
    168c:	c1 94       	neg	r12
    168e:	d1 08       	sbc	r13, r1
    1690:	8d e2       	ldi	r24, 0x2D	; 45
    1692:	01 c0       	rjmp	.+2      	; 0x1696 <vfprintf+0x3d4>
    1694:	8b e2       	ldi	r24, 0x2B	; 43
    1696:	b7 01       	movw	r22, r14
    1698:	90 e0       	ldi	r25, 0x00	; 0
    169a:	0e 94 ef 0d 	call	0x1bde	; 0x1bde <fputc>
    169e:	80 e3       	ldi	r24, 0x30	; 48
    16a0:	2a e0       	ldi	r18, 0x0A	; 10
    16a2:	c2 16       	cp	r12, r18
    16a4:	d1 04       	cpc	r13, r1
    16a6:	2c f0       	brlt	.+10     	; 0x16b2 <vfprintf+0x3f0>
    16a8:	8f 5f       	subi	r24, 0xFF	; 255
    16aa:	fa e0       	ldi	r31, 0x0A	; 10
    16ac:	cf 1a       	sub	r12, r31
    16ae:	d1 08       	sbc	r13, r1
    16b0:	f7 cf       	rjmp	.-18     	; 0x16a0 <vfprintf+0x3de>
    16b2:	b7 01       	movw	r22, r14
    16b4:	90 e0       	ldi	r25, 0x00	; 0
    16b6:	0e 94 ef 0d 	call	0x1bde	; 0x1bde <fputc>
    16ba:	b7 01       	movw	r22, r14
    16bc:	c6 01       	movw	r24, r12
    16be:	c0 96       	adiw	r24, 0x30	; 48
    16c0:	0e 94 ef 0d 	call	0x1bde	; 0x1bde <fputc>
    16c4:	54 c1       	rjmp	.+680    	; 0x196e <vfprintf+0x6ac>
    16c6:	83 36       	cpi	r24, 0x63	; 99
    16c8:	31 f0       	breq	.+12     	; 0x16d6 <vfprintf+0x414>
    16ca:	83 37       	cpi	r24, 0x73	; 115
    16cc:	79 f0       	breq	.+30     	; 0x16ec <vfprintf+0x42a>
    16ce:	83 35       	cpi	r24, 0x53	; 83
    16d0:	09 f0       	breq	.+2      	; 0x16d4 <vfprintf+0x412>
    16d2:	56 c0       	rjmp	.+172    	; 0x1780 <vfprintf+0x4be>
    16d4:	20 c0       	rjmp	.+64     	; 0x1716 <vfprintf+0x454>
    16d6:	56 01       	movw	r10, r12
    16d8:	32 e0       	ldi	r19, 0x02	; 2
    16da:	a3 0e       	add	r10, r19
    16dc:	b1 1c       	adc	r11, r1
    16de:	f6 01       	movw	r30, r12
    16e0:	80 81       	ld	r24, Z
    16e2:	89 83       	std	Y+1, r24	; 0x01
    16e4:	01 e0       	ldi	r16, 0x01	; 1
    16e6:	10 e0       	ldi	r17, 0x00	; 0
    16e8:	63 01       	movw	r12, r6
    16ea:	12 c0       	rjmp	.+36     	; 0x1710 <vfprintf+0x44e>
    16ec:	56 01       	movw	r10, r12
    16ee:	f2 e0       	ldi	r31, 0x02	; 2
    16f0:	af 0e       	add	r10, r31
    16f2:	b1 1c       	adc	r11, r1
    16f4:	f6 01       	movw	r30, r12
    16f6:	c0 80       	ld	r12, Z
    16f8:	d1 80       	ldd	r13, Z+1	; 0x01
    16fa:	96 fe       	sbrs	r9, 6
    16fc:	03 c0       	rjmp	.+6      	; 0x1704 <vfprintf+0x442>
    16fe:	61 2f       	mov	r22, r17
    1700:	70 e0       	ldi	r23, 0x00	; 0
    1702:	02 c0       	rjmp	.+4      	; 0x1708 <vfprintf+0x446>
    1704:	6f ef       	ldi	r22, 0xFF	; 255
    1706:	7f ef       	ldi	r23, 0xFF	; 255
    1708:	c6 01       	movw	r24, r12
    170a:	0e 94 e4 0d 	call	0x1bc8	; 0x1bc8 <strnlen>
    170e:	8c 01       	movw	r16, r24
    1710:	f9 2d       	mov	r31, r9
    1712:	ff 77       	andi	r31, 0x7F	; 127
    1714:	14 c0       	rjmp	.+40     	; 0x173e <vfprintf+0x47c>
    1716:	56 01       	movw	r10, r12
    1718:	22 e0       	ldi	r18, 0x02	; 2
    171a:	a2 0e       	add	r10, r18
    171c:	b1 1c       	adc	r11, r1
    171e:	f6 01       	movw	r30, r12
    1720:	c0 80       	ld	r12, Z
    1722:	d1 80       	ldd	r13, Z+1	; 0x01
    1724:	96 fe       	sbrs	r9, 6
    1726:	03 c0       	rjmp	.+6      	; 0x172e <vfprintf+0x46c>
    1728:	61 2f       	mov	r22, r17
    172a:	70 e0       	ldi	r23, 0x00	; 0
    172c:	02 c0       	rjmp	.+4      	; 0x1732 <vfprintf+0x470>
    172e:	6f ef       	ldi	r22, 0xFF	; 255
    1730:	7f ef       	ldi	r23, 0xFF	; 255
    1732:	c6 01       	movw	r24, r12
    1734:	0e 94 d9 0d 	call	0x1bb2	; 0x1bb2 <strnlen_P>
    1738:	8c 01       	movw	r16, r24
    173a:	f9 2d       	mov	r31, r9
    173c:	f0 68       	ori	r31, 0x80	; 128
    173e:	9f 2e       	mov	r9, r31
    1740:	f3 fd       	sbrc	r31, 3
    1742:	1a c0       	rjmp	.+52     	; 0x1778 <vfprintf+0x4b6>
    1744:	85 2d       	mov	r24, r5
    1746:	90 e0       	ldi	r25, 0x00	; 0
    1748:	08 17       	cp	r16, r24
    174a:	19 07       	cpc	r17, r25
    174c:	a8 f4       	brcc	.+42     	; 0x1778 <vfprintf+0x4b6>
    174e:	b7 01       	movw	r22, r14
    1750:	80 e2       	ldi	r24, 0x20	; 32
    1752:	90 e0       	ldi	r25, 0x00	; 0
    1754:	0e 94 ef 0d 	call	0x1bde	; 0x1bde <fputc>
    1758:	5a 94       	dec	r5
    175a:	f4 cf       	rjmp	.-24     	; 0x1744 <vfprintf+0x482>
    175c:	f6 01       	movw	r30, r12
    175e:	97 fc       	sbrc	r9, 7
    1760:	85 91       	lpm	r24, Z+
    1762:	97 fe       	sbrs	r9, 7
    1764:	81 91       	ld	r24, Z+
    1766:	6f 01       	movw	r12, r30
    1768:	b7 01       	movw	r22, r14
    176a:	90 e0       	ldi	r25, 0x00	; 0
    176c:	0e 94 ef 0d 	call	0x1bde	; 0x1bde <fputc>
    1770:	51 10       	cpse	r5, r1
    1772:	5a 94       	dec	r5
    1774:	01 50       	subi	r16, 0x01	; 1
    1776:	11 09       	sbc	r17, r1
    1778:	01 15       	cp	r16, r1
    177a:	11 05       	cpc	r17, r1
    177c:	79 f7       	brne	.-34     	; 0x175c <vfprintf+0x49a>
    177e:	f7 c0       	rjmp	.+494    	; 0x196e <vfprintf+0x6ac>
    1780:	84 36       	cpi	r24, 0x64	; 100
    1782:	11 f0       	breq	.+4      	; 0x1788 <vfprintf+0x4c6>
    1784:	89 36       	cpi	r24, 0x69	; 105
    1786:	61 f5       	brne	.+88     	; 0x17e0 <vfprintf+0x51e>
    1788:	56 01       	movw	r10, r12
    178a:	97 fe       	sbrs	r9, 7
    178c:	09 c0       	rjmp	.+18     	; 0x17a0 <vfprintf+0x4de>
    178e:	24 e0       	ldi	r18, 0x04	; 4
    1790:	a2 0e       	add	r10, r18
    1792:	b1 1c       	adc	r11, r1
    1794:	f6 01       	movw	r30, r12
    1796:	60 81       	ld	r22, Z
    1798:	71 81       	ldd	r23, Z+1	; 0x01
    179a:	82 81       	ldd	r24, Z+2	; 0x02
    179c:	93 81       	ldd	r25, Z+3	; 0x03
    179e:	0a c0       	rjmp	.+20     	; 0x17b4 <vfprintf+0x4f2>
    17a0:	f2 e0       	ldi	r31, 0x02	; 2
    17a2:	af 0e       	add	r10, r31
    17a4:	b1 1c       	adc	r11, r1
    17a6:	f6 01       	movw	r30, r12
    17a8:	60 81       	ld	r22, Z
    17aa:	71 81       	ldd	r23, Z+1	; 0x01
    17ac:	07 2e       	mov	r0, r23
    17ae:	00 0c       	add	r0, r0
    17b0:	88 0b       	sbc	r24, r24
    17b2:	99 0b       	sbc	r25, r25
    17b4:	f9 2d       	mov	r31, r9
    17b6:	ff 76       	andi	r31, 0x6F	; 111
    17b8:	9f 2e       	mov	r9, r31
    17ba:	97 ff       	sbrs	r25, 7
    17bc:	09 c0       	rjmp	.+18     	; 0x17d0 <vfprintf+0x50e>
    17be:	90 95       	com	r25
    17c0:	80 95       	com	r24
    17c2:	70 95       	com	r23
    17c4:	61 95       	neg	r22
    17c6:	7f 4f       	sbci	r23, 0xFF	; 255
    17c8:	8f 4f       	sbci	r24, 0xFF	; 255
    17ca:	9f 4f       	sbci	r25, 0xFF	; 255
    17cc:	f0 68       	ori	r31, 0x80	; 128
    17ce:	9f 2e       	mov	r9, r31
    17d0:	2a e0       	ldi	r18, 0x0A	; 10
    17d2:	30 e0       	ldi	r19, 0x00	; 0
    17d4:	a3 01       	movw	r20, r6
    17d6:	0e 94 3f 0e 	call	0x1c7e	; 0x1c7e <__ultoa_invert>
    17da:	c8 2e       	mov	r12, r24
    17dc:	c6 18       	sub	r12, r6
    17de:	3f c0       	rjmp	.+126    	; 0x185e <vfprintf+0x59c>
    17e0:	09 2d       	mov	r16, r9
    17e2:	85 37       	cpi	r24, 0x75	; 117
    17e4:	21 f4       	brne	.+8      	; 0x17ee <vfprintf+0x52c>
    17e6:	0f 7e       	andi	r16, 0xEF	; 239
    17e8:	2a e0       	ldi	r18, 0x0A	; 10
    17ea:	30 e0       	ldi	r19, 0x00	; 0
    17ec:	1d c0       	rjmp	.+58     	; 0x1828 <vfprintf+0x566>
    17ee:	09 7f       	andi	r16, 0xF9	; 249
    17f0:	8f 36       	cpi	r24, 0x6F	; 111
    17f2:	91 f0       	breq	.+36     	; 0x1818 <vfprintf+0x556>
    17f4:	18 f4       	brcc	.+6      	; 0x17fc <vfprintf+0x53a>
    17f6:	88 35       	cpi	r24, 0x58	; 88
    17f8:	59 f0       	breq	.+22     	; 0x1810 <vfprintf+0x54e>
    17fa:	c3 c0       	rjmp	.+390    	; 0x1982 <vfprintf+0x6c0>
    17fc:	80 37       	cpi	r24, 0x70	; 112
    17fe:	19 f0       	breq	.+6      	; 0x1806 <vfprintf+0x544>
    1800:	88 37       	cpi	r24, 0x78	; 120
    1802:	11 f0       	breq	.+4      	; 0x1808 <vfprintf+0x546>
    1804:	be c0       	rjmp	.+380    	; 0x1982 <vfprintf+0x6c0>
    1806:	00 61       	ori	r16, 0x10	; 16
    1808:	04 ff       	sbrs	r16, 4
    180a:	09 c0       	rjmp	.+18     	; 0x181e <vfprintf+0x55c>
    180c:	04 60       	ori	r16, 0x04	; 4
    180e:	07 c0       	rjmp	.+14     	; 0x181e <vfprintf+0x55c>
    1810:	94 fe       	sbrs	r9, 4
    1812:	08 c0       	rjmp	.+16     	; 0x1824 <vfprintf+0x562>
    1814:	06 60       	ori	r16, 0x06	; 6
    1816:	06 c0       	rjmp	.+12     	; 0x1824 <vfprintf+0x562>
    1818:	28 e0       	ldi	r18, 0x08	; 8
    181a:	30 e0       	ldi	r19, 0x00	; 0
    181c:	05 c0       	rjmp	.+10     	; 0x1828 <vfprintf+0x566>
    181e:	20 e1       	ldi	r18, 0x10	; 16
    1820:	30 e0       	ldi	r19, 0x00	; 0
    1822:	02 c0       	rjmp	.+4      	; 0x1828 <vfprintf+0x566>
    1824:	20 e1       	ldi	r18, 0x10	; 16
    1826:	32 e0       	ldi	r19, 0x02	; 2
    1828:	56 01       	movw	r10, r12
    182a:	07 ff       	sbrs	r16, 7
    182c:	09 c0       	rjmp	.+18     	; 0x1840 <vfprintf+0x57e>
    182e:	84 e0       	ldi	r24, 0x04	; 4
    1830:	a8 0e       	add	r10, r24
    1832:	b1 1c       	adc	r11, r1
    1834:	f6 01       	movw	r30, r12
    1836:	60 81       	ld	r22, Z
    1838:	71 81       	ldd	r23, Z+1	; 0x01
    183a:	82 81       	ldd	r24, Z+2	; 0x02
    183c:	93 81       	ldd	r25, Z+3	; 0x03
    183e:	08 c0       	rjmp	.+16     	; 0x1850 <vfprintf+0x58e>
    1840:	f2 e0       	ldi	r31, 0x02	; 2
    1842:	af 0e       	add	r10, r31
    1844:	b1 1c       	adc	r11, r1
    1846:	f6 01       	movw	r30, r12
    1848:	60 81       	ld	r22, Z
    184a:	71 81       	ldd	r23, Z+1	; 0x01
    184c:	80 e0       	ldi	r24, 0x00	; 0
    184e:	90 e0       	ldi	r25, 0x00	; 0
    1850:	a3 01       	movw	r20, r6
    1852:	0e 94 3f 0e 	call	0x1c7e	; 0x1c7e <__ultoa_invert>
    1856:	c8 2e       	mov	r12, r24
    1858:	c6 18       	sub	r12, r6
    185a:	0f 77       	andi	r16, 0x7F	; 127
    185c:	90 2e       	mov	r9, r16
    185e:	96 fe       	sbrs	r9, 6
    1860:	0b c0       	rjmp	.+22     	; 0x1878 <vfprintf+0x5b6>
    1862:	09 2d       	mov	r16, r9
    1864:	0e 7f       	andi	r16, 0xFE	; 254
    1866:	c1 16       	cp	r12, r17
    1868:	50 f4       	brcc	.+20     	; 0x187e <vfprintf+0x5bc>
    186a:	94 fe       	sbrs	r9, 4
    186c:	0a c0       	rjmp	.+20     	; 0x1882 <vfprintf+0x5c0>
    186e:	92 fc       	sbrc	r9, 2
    1870:	08 c0       	rjmp	.+16     	; 0x1882 <vfprintf+0x5c0>
    1872:	09 2d       	mov	r16, r9
    1874:	0e 7e       	andi	r16, 0xEE	; 238
    1876:	05 c0       	rjmp	.+10     	; 0x1882 <vfprintf+0x5c0>
    1878:	dc 2c       	mov	r13, r12
    187a:	09 2d       	mov	r16, r9
    187c:	03 c0       	rjmp	.+6      	; 0x1884 <vfprintf+0x5c2>
    187e:	dc 2c       	mov	r13, r12
    1880:	01 c0       	rjmp	.+2      	; 0x1884 <vfprintf+0x5c2>
    1882:	d1 2e       	mov	r13, r17
    1884:	04 ff       	sbrs	r16, 4
    1886:	0d c0       	rjmp	.+26     	; 0x18a2 <vfprintf+0x5e0>
    1888:	fe 01       	movw	r30, r28
    188a:	ec 0d       	add	r30, r12
    188c:	f1 1d       	adc	r31, r1
    188e:	80 81       	ld	r24, Z
    1890:	80 33       	cpi	r24, 0x30	; 48
    1892:	11 f4       	brne	.+4      	; 0x1898 <vfprintf+0x5d6>
    1894:	09 7e       	andi	r16, 0xE9	; 233
    1896:	09 c0       	rjmp	.+18     	; 0x18aa <vfprintf+0x5e8>
    1898:	02 ff       	sbrs	r16, 2
    189a:	06 c0       	rjmp	.+12     	; 0x18a8 <vfprintf+0x5e6>
    189c:	d3 94       	inc	r13
    189e:	d3 94       	inc	r13
    18a0:	04 c0       	rjmp	.+8      	; 0x18aa <vfprintf+0x5e8>
    18a2:	80 2f       	mov	r24, r16
    18a4:	86 78       	andi	r24, 0x86	; 134
    18a6:	09 f0       	breq	.+2      	; 0x18aa <vfprintf+0x5e8>
    18a8:	d3 94       	inc	r13
    18aa:	03 fd       	sbrc	r16, 3
    18ac:	11 c0       	rjmp	.+34     	; 0x18d0 <vfprintf+0x60e>
    18ae:	00 ff       	sbrs	r16, 0
    18b0:	06 c0       	rjmp	.+12     	; 0x18be <vfprintf+0x5fc>
    18b2:	1c 2d       	mov	r17, r12
    18b4:	d5 14       	cp	r13, r5
    18b6:	80 f4       	brcc	.+32     	; 0x18d8 <vfprintf+0x616>
    18b8:	15 0d       	add	r17, r5
    18ba:	1d 19       	sub	r17, r13
    18bc:	0d c0       	rjmp	.+26     	; 0x18d8 <vfprintf+0x616>
    18be:	d5 14       	cp	r13, r5
    18c0:	58 f4       	brcc	.+22     	; 0x18d8 <vfprintf+0x616>
    18c2:	b7 01       	movw	r22, r14
    18c4:	80 e2       	ldi	r24, 0x20	; 32
    18c6:	90 e0       	ldi	r25, 0x00	; 0
    18c8:	0e 94 ef 0d 	call	0x1bde	; 0x1bde <fputc>
    18cc:	d3 94       	inc	r13
    18ce:	f7 cf       	rjmp	.-18     	; 0x18be <vfprintf+0x5fc>
    18d0:	d5 14       	cp	r13, r5
    18d2:	10 f4       	brcc	.+4      	; 0x18d8 <vfprintf+0x616>
    18d4:	5d 18       	sub	r5, r13
    18d6:	01 c0       	rjmp	.+2      	; 0x18da <vfprintf+0x618>
    18d8:	51 2c       	mov	r5, r1
    18da:	04 ff       	sbrs	r16, 4
    18dc:	10 c0       	rjmp	.+32     	; 0x18fe <vfprintf+0x63c>
    18de:	b7 01       	movw	r22, r14
    18e0:	80 e3       	ldi	r24, 0x30	; 48
    18e2:	90 e0       	ldi	r25, 0x00	; 0
    18e4:	0e 94 ef 0d 	call	0x1bde	; 0x1bde <fputc>
    18e8:	02 ff       	sbrs	r16, 2
    18ea:	17 c0       	rjmp	.+46     	; 0x191a <vfprintf+0x658>
    18ec:	01 fd       	sbrc	r16, 1
    18ee:	03 c0       	rjmp	.+6      	; 0x18f6 <vfprintf+0x634>
    18f0:	88 e7       	ldi	r24, 0x78	; 120
    18f2:	90 e0       	ldi	r25, 0x00	; 0
    18f4:	02 c0       	rjmp	.+4      	; 0x18fa <vfprintf+0x638>
    18f6:	88 e5       	ldi	r24, 0x58	; 88
    18f8:	90 e0       	ldi	r25, 0x00	; 0
    18fa:	b7 01       	movw	r22, r14
    18fc:	0c c0       	rjmp	.+24     	; 0x1916 <vfprintf+0x654>
    18fe:	80 2f       	mov	r24, r16
    1900:	86 78       	andi	r24, 0x86	; 134
    1902:	59 f0       	breq	.+22     	; 0x191a <vfprintf+0x658>
    1904:	01 ff       	sbrs	r16, 1
    1906:	02 c0       	rjmp	.+4      	; 0x190c <vfprintf+0x64a>
    1908:	8b e2       	ldi	r24, 0x2B	; 43
    190a:	01 c0       	rjmp	.+2      	; 0x190e <vfprintf+0x64c>
    190c:	80 e2       	ldi	r24, 0x20	; 32
    190e:	07 fd       	sbrc	r16, 7
    1910:	8d e2       	ldi	r24, 0x2D	; 45
    1912:	b7 01       	movw	r22, r14
    1914:	90 e0       	ldi	r25, 0x00	; 0
    1916:	0e 94 ef 0d 	call	0x1bde	; 0x1bde <fputc>
    191a:	c1 16       	cp	r12, r17
    191c:	38 f4       	brcc	.+14     	; 0x192c <vfprintf+0x66a>
    191e:	b7 01       	movw	r22, r14
    1920:	80 e3       	ldi	r24, 0x30	; 48
    1922:	90 e0       	ldi	r25, 0x00	; 0
    1924:	0e 94 ef 0d 	call	0x1bde	; 0x1bde <fputc>
    1928:	11 50       	subi	r17, 0x01	; 1
    192a:	f7 cf       	rjmp	.-18     	; 0x191a <vfprintf+0x658>
    192c:	ca 94       	dec	r12
    192e:	f3 01       	movw	r30, r6
    1930:	ec 0d       	add	r30, r12
    1932:	f1 1d       	adc	r31, r1
    1934:	80 81       	ld	r24, Z
    1936:	b7 01       	movw	r22, r14
    1938:	90 e0       	ldi	r25, 0x00	; 0
    193a:	0e 94 ef 0d 	call	0x1bde	; 0x1bde <fputc>
    193e:	c1 10       	cpse	r12, r1
    1940:	f5 cf       	rjmp	.-22     	; 0x192c <vfprintf+0x66a>
    1942:	15 c0       	rjmp	.+42     	; 0x196e <vfprintf+0x6ac>
    1944:	f4 e0       	ldi	r31, 0x04	; 4
    1946:	f5 15       	cp	r31, r5
    1948:	60 f5       	brcc	.+88     	; 0x19a2 <vfprintf+0x6e0>
    194a:	84 e0       	ldi	r24, 0x04	; 4
    194c:	58 1a       	sub	r5, r24
    194e:	93 fe       	sbrs	r9, 3
    1950:	1f c0       	rjmp	.+62     	; 0x1990 <vfprintf+0x6ce>
    1952:	01 11       	cpse	r16, r1
    1954:	27 c0       	rjmp	.+78     	; 0x19a4 <vfprintf+0x6e2>
    1956:	2c 85       	ldd	r18, Y+12	; 0x0c
    1958:	23 ff       	sbrs	r18, 3
    195a:	2a c0       	rjmp	.+84     	; 0x19b0 <vfprintf+0x6ee>
    195c:	04 e0       	ldi	r16, 0x04	; 4
    195e:	12 e0       	ldi	r17, 0x02	; 2
    1960:	39 2d       	mov	r19, r9
    1962:	30 71       	andi	r19, 0x10	; 16
    1964:	93 2e       	mov	r9, r19
    1966:	f8 01       	movw	r30, r16
    1968:	84 91       	lpm	r24, Z
    196a:	81 11       	cpse	r24, r1
    196c:	24 c0       	rjmp	.+72     	; 0x19b6 <vfprintf+0x6f4>
    196e:	55 20       	and	r5, r5
    1970:	09 f4       	brne	.+2      	; 0x1974 <vfprintf+0x6b2>
    1972:	e4 cc       	rjmp	.-1592   	; 0x133c <vfprintf+0x7a>
    1974:	b7 01       	movw	r22, r14
    1976:	80 e2       	ldi	r24, 0x20	; 32
    1978:	90 e0       	ldi	r25, 0x00	; 0
    197a:	0e 94 ef 0d 	call	0x1bde	; 0x1bde <fputc>
    197e:	5a 94       	dec	r5
    1980:	f6 cf       	rjmp	.-20     	; 0x196e <vfprintf+0x6ac>
    1982:	f7 01       	movw	r30, r14
    1984:	86 81       	ldd	r24, Z+6	; 0x06
    1986:	97 81       	ldd	r25, Z+7	; 0x07
    1988:	26 c0       	rjmp	.+76     	; 0x19d6 <vfprintf+0x714>
    198a:	8f ef       	ldi	r24, 0xFF	; 255
    198c:	9f ef       	ldi	r25, 0xFF	; 255
    198e:	23 c0       	rjmp	.+70     	; 0x19d6 <vfprintf+0x714>
    1990:	b7 01       	movw	r22, r14
    1992:	80 e2       	ldi	r24, 0x20	; 32
    1994:	90 e0       	ldi	r25, 0x00	; 0
    1996:	0e 94 ef 0d 	call	0x1bde	; 0x1bde <fputc>
    199a:	5a 94       	dec	r5
    199c:	51 10       	cpse	r5, r1
    199e:	f8 cf       	rjmp	.-16     	; 0x1990 <vfprintf+0x6ce>
    19a0:	d8 cf       	rjmp	.-80     	; 0x1952 <vfprintf+0x690>
    19a2:	51 2c       	mov	r5, r1
    19a4:	b7 01       	movw	r22, r14
    19a6:	80 2f       	mov	r24, r16
    19a8:	90 e0       	ldi	r25, 0x00	; 0
    19aa:	0e 94 ef 0d 	call	0x1bde	; 0x1bde <fputc>
    19ae:	d3 cf       	rjmp	.-90     	; 0x1956 <vfprintf+0x694>
    19b0:	08 e0       	ldi	r16, 0x08	; 8
    19b2:	12 e0       	ldi	r17, 0x02	; 2
    19b4:	d5 cf       	rjmp	.-86     	; 0x1960 <vfprintf+0x69e>
    19b6:	91 10       	cpse	r9, r1
    19b8:	80 52       	subi	r24, 0x20	; 32
    19ba:	b7 01       	movw	r22, r14
    19bc:	90 e0       	ldi	r25, 0x00	; 0
    19be:	0e 94 ef 0d 	call	0x1bde	; 0x1bde <fputc>
    19c2:	0f 5f       	subi	r16, 0xFF	; 255
    19c4:	1f 4f       	sbci	r17, 0xFF	; 255
    19c6:	cf cf       	rjmp	.-98     	; 0x1966 <vfprintf+0x6a4>
    19c8:	23 e0       	ldi	r18, 0x03	; 3
    19ca:	25 15       	cp	r18, r5
    19cc:	10 f4       	brcc	.+4      	; 0x19d2 <vfprintf+0x710>
    19ce:	83 e0       	ldi	r24, 0x03	; 3
    19d0:	bd cf       	rjmp	.-134    	; 0x194c <vfprintf+0x68a>
    19d2:	51 2c       	mov	r5, r1
    19d4:	c0 cf       	rjmp	.-128    	; 0x1956 <vfprintf+0x694>
    19d6:	60 96       	adiw	r28, 0x10	; 16
    19d8:	cd bf       	out	0x3d, r28	; 61
    19da:	de bf       	out	0x3e, r29	; 62
    19dc:	df 91       	pop	r29
    19de:	cf 91       	pop	r28
    19e0:	1f 91       	pop	r17
    19e2:	0f 91       	pop	r16
    19e4:	ff 90       	pop	r15
    19e6:	ef 90       	pop	r14
    19e8:	df 90       	pop	r13
    19ea:	cf 90       	pop	r12
    19ec:	bf 90       	pop	r11
    19ee:	af 90       	pop	r10
    19f0:	9f 90       	pop	r9
    19f2:	8f 90       	pop	r8
    19f4:	7f 90       	pop	r7
    19f6:	6f 90       	pop	r6
    19f8:	5f 90       	pop	r5
    19fa:	4f 90       	pop	r4
    19fc:	3f 90       	pop	r3
    19fe:	2f 90       	pop	r2
    1a00:	08 95       	ret

00001a02 <__ftoa_engine>:
    1a02:	28 30       	cpi	r18, 0x08	; 8
    1a04:	08 f0       	brcs	.+2      	; 0x1a08 <__ftoa_engine+0x6>
    1a06:	27 e0       	ldi	r18, 0x07	; 7
    1a08:	33 27       	eor	r19, r19
    1a0a:	da 01       	movw	r26, r20
    1a0c:	99 0f       	add	r25, r25
    1a0e:	31 1d       	adc	r19, r1
    1a10:	87 fd       	sbrc	r24, 7
    1a12:	91 60       	ori	r25, 0x01	; 1
    1a14:	00 96       	adiw	r24, 0x00	; 0
    1a16:	61 05       	cpc	r22, r1
    1a18:	71 05       	cpc	r23, r1
    1a1a:	39 f4       	brne	.+14     	; 0x1a2a <__ftoa_engine+0x28>
    1a1c:	32 60       	ori	r19, 0x02	; 2
    1a1e:	2e 5f       	subi	r18, 0xFE	; 254
    1a20:	3d 93       	st	X+, r19
    1a22:	30 e3       	ldi	r19, 0x30	; 48
    1a24:	2a 95       	dec	r18
    1a26:	e1 f7       	brne	.-8      	; 0x1a20 <__ftoa_engine+0x1e>
    1a28:	08 95       	ret
    1a2a:	9f 3f       	cpi	r25, 0xFF	; 255
    1a2c:	30 f0       	brcs	.+12     	; 0x1a3a <__ftoa_engine+0x38>
    1a2e:	80 38       	cpi	r24, 0x80	; 128
    1a30:	71 05       	cpc	r23, r1
    1a32:	61 05       	cpc	r22, r1
    1a34:	09 f0       	breq	.+2      	; 0x1a38 <__ftoa_engine+0x36>
    1a36:	3c 5f       	subi	r19, 0xFC	; 252
    1a38:	3c 5f       	subi	r19, 0xFC	; 252
    1a3a:	3d 93       	st	X+, r19
    1a3c:	91 30       	cpi	r25, 0x01	; 1
    1a3e:	08 f0       	brcs	.+2      	; 0x1a42 <__ftoa_engine+0x40>
    1a40:	80 68       	ori	r24, 0x80	; 128
    1a42:	91 1d       	adc	r25, r1
    1a44:	df 93       	push	r29
    1a46:	cf 93       	push	r28
    1a48:	1f 93       	push	r17
    1a4a:	0f 93       	push	r16
    1a4c:	ff 92       	push	r15
    1a4e:	ef 92       	push	r14
    1a50:	19 2f       	mov	r17, r25
    1a52:	98 7f       	andi	r25, 0xF8	; 248
    1a54:	96 95       	lsr	r25
    1a56:	e9 2f       	mov	r30, r25
    1a58:	96 95       	lsr	r25
    1a5a:	96 95       	lsr	r25
    1a5c:	e9 0f       	add	r30, r25
    1a5e:	ff 27       	eor	r31, r31
    1a60:	ea 59       	subi	r30, 0x9A	; 154
    1a62:	fd 4f       	sbci	r31, 0xFD	; 253
    1a64:	99 27       	eor	r25, r25
    1a66:	33 27       	eor	r19, r19
    1a68:	ee 24       	eor	r14, r14
    1a6a:	ff 24       	eor	r15, r15
    1a6c:	a7 01       	movw	r20, r14
    1a6e:	e7 01       	movw	r28, r14
    1a70:	05 90       	lpm	r0, Z+
    1a72:	08 94       	sec
    1a74:	07 94       	ror	r0
    1a76:	28 f4       	brcc	.+10     	; 0x1a82 <__ftoa_engine+0x80>
    1a78:	36 0f       	add	r19, r22
    1a7a:	e7 1e       	adc	r14, r23
    1a7c:	f8 1e       	adc	r15, r24
    1a7e:	49 1f       	adc	r20, r25
    1a80:	51 1d       	adc	r21, r1
    1a82:	66 0f       	add	r22, r22
    1a84:	77 1f       	adc	r23, r23
    1a86:	88 1f       	adc	r24, r24
    1a88:	99 1f       	adc	r25, r25
    1a8a:	06 94       	lsr	r0
    1a8c:	a1 f7       	brne	.-24     	; 0x1a76 <__ftoa_engine+0x74>
    1a8e:	05 90       	lpm	r0, Z+
    1a90:	07 94       	ror	r0
    1a92:	28 f4       	brcc	.+10     	; 0x1a9e <__ftoa_engine+0x9c>
    1a94:	e7 0e       	add	r14, r23
    1a96:	f8 1e       	adc	r15, r24
    1a98:	49 1f       	adc	r20, r25
    1a9a:	56 1f       	adc	r21, r22
    1a9c:	c1 1d       	adc	r28, r1
    1a9e:	77 0f       	add	r23, r23
    1aa0:	88 1f       	adc	r24, r24
    1aa2:	99 1f       	adc	r25, r25
    1aa4:	66 1f       	adc	r22, r22
    1aa6:	06 94       	lsr	r0
    1aa8:	a1 f7       	brne	.-24     	; 0x1a92 <__ftoa_engine+0x90>
    1aaa:	05 90       	lpm	r0, Z+
    1aac:	07 94       	ror	r0
    1aae:	28 f4       	brcc	.+10     	; 0x1aba <__ftoa_engine+0xb8>
    1ab0:	f8 0e       	add	r15, r24
    1ab2:	49 1f       	adc	r20, r25
    1ab4:	56 1f       	adc	r21, r22
    1ab6:	c7 1f       	adc	r28, r23
    1ab8:	d1 1d       	adc	r29, r1
    1aba:	88 0f       	add	r24, r24
    1abc:	99 1f       	adc	r25, r25
    1abe:	66 1f       	adc	r22, r22
    1ac0:	77 1f       	adc	r23, r23
    1ac2:	06 94       	lsr	r0
    1ac4:	a1 f7       	brne	.-24     	; 0x1aae <__ftoa_engine+0xac>
    1ac6:	05 90       	lpm	r0, Z+
    1ac8:	07 94       	ror	r0
    1aca:	20 f4       	brcc	.+8      	; 0x1ad4 <__ftoa_engine+0xd2>
    1acc:	49 0f       	add	r20, r25
    1ace:	56 1f       	adc	r21, r22
    1ad0:	c7 1f       	adc	r28, r23
    1ad2:	d8 1f       	adc	r29, r24
    1ad4:	99 0f       	add	r25, r25
    1ad6:	66 1f       	adc	r22, r22
    1ad8:	77 1f       	adc	r23, r23
    1ada:	88 1f       	adc	r24, r24
    1adc:	06 94       	lsr	r0
    1ade:	a9 f7       	brne	.-22     	; 0x1aca <__ftoa_engine+0xc8>
    1ae0:	84 91       	lpm	r24, Z
    1ae2:	10 95       	com	r17
    1ae4:	17 70       	andi	r17, 0x07	; 7
    1ae6:	41 f0       	breq	.+16     	; 0x1af8 <__ftoa_engine+0xf6>
    1ae8:	d6 95       	lsr	r29
    1aea:	c7 95       	ror	r28
    1aec:	57 95       	ror	r21
    1aee:	47 95       	ror	r20
    1af0:	f7 94       	ror	r15
    1af2:	e7 94       	ror	r14
    1af4:	1a 95       	dec	r17
    1af6:	c1 f7       	brne	.-16     	; 0x1ae8 <__ftoa_engine+0xe6>
    1af8:	ec e0       	ldi	r30, 0x0C	; 12
    1afa:	f2 e0       	ldi	r31, 0x02	; 2
    1afc:	68 94       	set
    1afe:	15 90       	lpm	r1, Z+
    1b00:	15 91       	lpm	r17, Z+
    1b02:	35 91       	lpm	r19, Z+
    1b04:	65 91       	lpm	r22, Z+
    1b06:	95 91       	lpm	r25, Z+
    1b08:	05 90       	lpm	r0, Z+
    1b0a:	7f e2       	ldi	r23, 0x2F	; 47
    1b0c:	73 95       	inc	r23
    1b0e:	e1 18       	sub	r14, r1
    1b10:	f1 0a       	sbc	r15, r17
    1b12:	43 0b       	sbc	r20, r19
    1b14:	56 0b       	sbc	r21, r22
    1b16:	c9 0b       	sbc	r28, r25
    1b18:	d0 09       	sbc	r29, r0
    1b1a:	c0 f7       	brcc	.-16     	; 0x1b0c <__ftoa_engine+0x10a>
    1b1c:	e1 0c       	add	r14, r1
    1b1e:	f1 1e       	adc	r15, r17
    1b20:	43 1f       	adc	r20, r19
    1b22:	56 1f       	adc	r21, r22
    1b24:	c9 1f       	adc	r28, r25
    1b26:	d0 1d       	adc	r29, r0
    1b28:	7e f4       	brtc	.+30     	; 0x1b48 <__ftoa_engine+0x146>
    1b2a:	70 33       	cpi	r23, 0x30	; 48
    1b2c:	11 f4       	brne	.+4      	; 0x1b32 <__ftoa_engine+0x130>
    1b2e:	8a 95       	dec	r24
    1b30:	e6 cf       	rjmp	.-52     	; 0x1afe <__ftoa_engine+0xfc>
    1b32:	e8 94       	clt
    1b34:	01 50       	subi	r16, 0x01	; 1
    1b36:	30 f0       	brcs	.+12     	; 0x1b44 <__ftoa_engine+0x142>
    1b38:	08 0f       	add	r16, r24
    1b3a:	0a f4       	brpl	.+2      	; 0x1b3e <__ftoa_engine+0x13c>
    1b3c:	00 27       	eor	r16, r16
    1b3e:	02 17       	cp	r16, r18
    1b40:	08 f4       	brcc	.+2      	; 0x1b44 <__ftoa_engine+0x142>
    1b42:	20 2f       	mov	r18, r16
    1b44:	23 95       	inc	r18
    1b46:	02 2f       	mov	r16, r18
    1b48:	7a 33       	cpi	r23, 0x3A	; 58
    1b4a:	28 f0       	brcs	.+10     	; 0x1b56 <__ftoa_engine+0x154>
    1b4c:	79 e3       	ldi	r23, 0x39	; 57
    1b4e:	7d 93       	st	X+, r23
    1b50:	2a 95       	dec	r18
    1b52:	e9 f7       	brne	.-6      	; 0x1b4e <__ftoa_engine+0x14c>
    1b54:	10 c0       	rjmp	.+32     	; 0x1b76 <__ftoa_engine+0x174>
    1b56:	7d 93       	st	X+, r23
    1b58:	2a 95       	dec	r18
    1b5a:	89 f6       	brne	.-94     	; 0x1afe <__ftoa_engine+0xfc>
    1b5c:	06 94       	lsr	r0
    1b5e:	97 95       	ror	r25
    1b60:	67 95       	ror	r22
    1b62:	37 95       	ror	r19
    1b64:	17 95       	ror	r17
    1b66:	17 94       	ror	r1
    1b68:	e1 18       	sub	r14, r1
    1b6a:	f1 0a       	sbc	r15, r17
    1b6c:	43 0b       	sbc	r20, r19
    1b6e:	56 0b       	sbc	r21, r22
    1b70:	c9 0b       	sbc	r28, r25
    1b72:	d0 09       	sbc	r29, r0
    1b74:	98 f0       	brcs	.+38     	; 0x1b9c <__ftoa_engine+0x19a>
    1b76:	23 95       	inc	r18
    1b78:	7e 91       	ld	r23, -X
    1b7a:	73 95       	inc	r23
    1b7c:	7a 33       	cpi	r23, 0x3A	; 58
    1b7e:	08 f0       	brcs	.+2      	; 0x1b82 <__ftoa_engine+0x180>
    1b80:	70 e3       	ldi	r23, 0x30	; 48
    1b82:	7c 93       	st	X, r23
    1b84:	20 13       	cpse	r18, r16
    1b86:	b8 f7       	brcc	.-18     	; 0x1b76 <__ftoa_engine+0x174>
    1b88:	7e 91       	ld	r23, -X
    1b8a:	70 61       	ori	r23, 0x10	; 16
    1b8c:	7d 93       	st	X+, r23
    1b8e:	30 f0       	brcs	.+12     	; 0x1b9c <__ftoa_engine+0x19a>
    1b90:	83 95       	inc	r24
    1b92:	71 e3       	ldi	r23, 0x31	; 49
    1b94:	7d 93       	st	X+, r23
    1b96:	70 e3       	ldi	r23, 0x30	; 48
    1b98:	2a 95       	dec	r18
    1b9a:	e1 f7       	brne	.-8      	; 0x1b94 <__ftoa_engine+0x192>
    1b9c:	11 24       	eor	r1, r1
    1b9e:	ef 90       	pop	r14
    1ba0:	ff 90       	pop	r15
    1ba2:	0f 91       	pop	r16
    1ba4:	1f 91       	pop	r17
    1ba6:	cf 91       	pop	r28
    1ba8:	df 91       	pop	r29
    1baa:	99 27       	eor	r25, r25
    1bac:	87 fd       	sbrc	r24, 7
    1bae:	90 95       	com	r25
    1bb0:	08 95       	ret

00001bb2 <strnlen_P>:
    1bb2:	fc 01       	movw	r30, r24
    1bb4:	05 90       	lpm	r0, Z+
    1bb6:	61 50       	subi	r22, 0x01	; 1
    1bb8:	70 40       	sbci	r23, 0x00	; 0
    1bba:	01 10       	cpse	r0, r1
    1bbc:	d8 f7       	brcc	.-10     	; 0x1bb4 <strnlen_P+0x2>
    1bbe:	80 95       	com	r24
    1bc0:	90 95       	com	r25
    1bc2:	8e 0f       	add	r24, r30
    1bc4:	9f 1f       	adc	r25, r31
    1bc6:	08 95       	ret

00001bc8 <strnlen>:
    1bc8:	fc 01       	movw	r30, r24
    1bca:	61 50       	subi	r22, 0x01	; 1
    1bcc:	70 40       	sbci	r23, 0x00	; 0
    1bce:	01 90       	ld	r0, Z+
    1bd0:	01 10       	cpse	r0, r1
    1bd2:	d8 f7       	brcc	.-10     	; 0x1bca <strnlen+0x2>
    1bd4:	80 95       	com	r24
    1bd6:	90 95       	com	r25
    1bd8:	8e 0f       	add	r24, r30
    1bda:	9f 1f       	adc	r25, r31
    1bdc:	08 95       	ret

00001bde <fputc>:
    1bde:	0f 93       	push	r16
    1be0:	1f 93       	push	r17
    1be2:	cf 93       	push	r28
    1be4:	df 93       	push	r29
    1be6:	fb 01       	movw	r30, r22
    1be8:	23 81       	ldd	r18, Z+3	; 0x03
    1bea:	21 fd       	sbrc	r18, 1
    1bec:	03 c0       	rjmp	.+6      	; 0x1bf4 <fputc+0x16>
    1bee:	8f ef       	ldi	r24, 0xFF	; 255
    1bf0:	9f ef       	ldi	r25, 0xFF	; 255
    1bf2:	2c c0       	rjmp	.+88     	; 0x1c4c <fputc+0x6e>
    1bf4:	22 ff       	sbrs	r18, 2
    1bf6:	16 c0       	rjmp	.+44     	; 0x1c24 <fputc+0x46>
    1bf8:	46 81       	ldd	r20, Z+6	; 0x06
    1bfa:	57 81       	ldd	r21, Z+7	; 0x07
    1bfc:	24 81       	ldd	r18, Z+4	; 0x04
    1bfe:	35 81       	ldd	r19, Z+5	; 0x05
    1c00:	42 17       	cp	r20, r18
    1c02:	53 07       	cpc	r21, r19
    1c04:	44 f4       	brge	.+16     	; 0x1c16 <fputc+0x38>
    1c06:	a0 81       	ld	r26, Z
    1c08:	b1 81       	ldd	r27, Z+1	; 0x01
    1c0a:	9d 01       	movw	r18, r26
    1c0c:	2f 5f       	subi	r18, 0xFF	; 255
    1c0e:	3f 4f       	sbci	r19, 0xFF	; 255
    1c10:	20 83       	st	Z, r18
    1c12:	31 83       	std	Z+1, r19	; 0x01
    1c14:	8c 93       	st	X, r24
    1c16:	26 81       	ldd	r18, Z+6	; 0x06
    1c18:	37 81       	ldd	r19, Z+7	; 0x07
    1c1a:	2f 5f       	subi	r18, 0xFF	; 255
    1c1c:	3f 4f       	sbci	r19, 0xFF	; 255
    1c1e:	26 83       	std	Z+6, r18	; 0x06
    1c20:	37 83       	std	Z+7, r19	; 0x07
    1c22:	14 c0       	rjmp	.+40     	; 0x1c4c <fputc+0x6e>
    1c24:	8b 01       	movw	r16, r22
    1c26:	ec 01       	movw	r28, r24
    1c28:	fb 01       	movw	r30, r22
    1c2a:	00 84       	ldd	r0, Z+8	; 0x08
    1c2c:	f1 85       	ldd	r31, Z+9	; 0x09
    1c2e:	e0 2d       	mov	r30, r0
    1c30:	19 95       	eicall
    1c32:	89 2b       	or	r24, r25
    1c34:	e1 f6       	brne	.-72     	; 0x1bee <fputc+0x10>
    1c36:	d8 01       	movw	r26, r16
    1c38:	16 96       	adiw	r26, 0x06	; 6
    1c3a:	8d 91       	ld	r24, X+
    1c3c:	9c 91       	ld	r25, X
    1c3e:	17 97       	sbiw	r26, 0x07	; 7
    1c40:	01 96       	adiw	r24, 0x01	; 1
    1c42:	16 96       	adiw	r26, 0x06	; 6
    1c44:	8d 93       	st	X+, r24
    1c46:	9c 93       	st	X, r25
    1c48:	17 97       	sbiw	r26, 0x07	; 7
    1c4a:	ce 01       	movw	r24, r28
    1c4c:	df 91       	pop	r29
    1c4e:	cf 91       	pop	r28
    1c50:	1f 91       	pop	r17
    1c52:	0f 91       	pop	r16
    1c54:	08 95       	ret

00001c56 <printf>:
    1c56:	cf 93       	push	r28
    1c58:	df 93       	push	r29
    1c5a:	cd b7       	in	r28, 0x3d	; 61
    1c5c:	de b7       	in	r29, 0x3e	; 62
    1c5e:	ae 01       	movw	r20, r28
    1c60:	4a 5f       	subi	r20, 0xFA	; 250
    1c62:	5f 4f       	sbci	r21, 0xFF	; 255
    1c64:	fa 01       	movw	r30, r20
    1c66:	61 91       	ld	r22, Z+
    1c68:	71 91       	ld	r23, Z+
    1c6a:	af 01       	movw	r20, r30
    1c6c:	80 91 45 20 	lds	r24, 0x2045	; 0x802045 <__iob+0x2>
    1c70:	90 91 46 20 	lds	r25, 0x2046	; 0x802046 <__iob+0x3>
    1c74:	0e 94 61 09 	call	0x12c2	; 0x12c2 <vfprintf>
    1c78:	df 91       	pop	r29
    1c7a:	cf 91       	pop	r28
    1c7c:	08 95       	ret

00001c7e <__ultoa_invert>:
    1c7e:	fa 01       	movw	r30, r20
    1c80:	aa 27       	eor	r26, r26
    1c82:	28 30       	cpi	r18, 0x08	; 8
    1c84:	51 f1       	breq	.+84     	; 0x1cda <__ultoa_invert+0x5c>
    1c86:	20 31       	cpi	r18, 0x10	; 16
    1c88:	81 f1       	breq	.+96     	; 0x1cea <__ultoa_invert+0x6c>
    1c8a:	e8 94       	clt
    1c8c:	6f 93       	push	r22
    1c8e:	6e 7f       	andi	r22, 0xFE	; 254
    1c90:	6e 5f       	subi	r22, 0xFE	; 254
    1c92:	7f 4f       	sbci	r23, 0xFF	; 255
    1c94:	8f 4f       	sbci	r24, 0xFF	; 255
    1c96:	9f 4f       	sbci	r25, 0xFF	; 255
    1c98:	af 4f       	sbci	r26, 0xFF	; 255
    1c9a:	b1 e0       	ldi	r27, 0x01	; 1
    1c9c:	3e d0       	rcall	.+124    	; 0x1d1a <__ultoa_invert+0x9c>
    1c9e:	b4 e0       	ldi	r27, 0x04	; 4
    1ca0:	3c d0       	rcall	.+120    	; 0x1d1a <__ultoa_invert+0x9c>
    1ca2:	67 0f       	add	r22, r23
    1ca4:	78 1f       	adc	r23, r24
    1ca6:	89 1f       	adc	r24, r25
    1ca8:	9a 1f       	adc	r25, r26
    1caa:	a1 1d       	adc	r26, r1
    1cac:	68 0f       	add	r22, r24
    1cae:	79 1f       	adc	r23, r25
    1cb0:	8a 1f       	adc	r24, r26
    1cb2:	91 1d       	adc	r25, r1
    1cb4:	a1 1d       	adc	r26, r1
    1cb6:	6a 0f       	add	r22, r26
    1cb8:	71 1d       	adc	r23, r1
    1cba:	81 1d       	adc	r24, r1
    1cbc:	91 1d       	adc	r25, r1
    1cbe:	a1 1d       	adc	r26, r1
    1cc0:	20 d0       	rcall	.+64     	; 0x1d02 <__ultoa_invert+0x84>
    1cc2:	09 f4       	brne	.+2      	; 0x1cc6 <__ultoa_invert+0x48>
    1cc4:	68 94       	set
    1cc6:	3f 91       	pop	r19
    1cc8:	2a e0       	ldi	r18, 0x0A	; 10
    1cca:	26 9f       	mul	r18, r22
    1ccc:	11 24       	eor	r1, r1
    1cce:	30 19       	sub	r19, r0
    1cd0:	30 5d       	subi	r19, 0xD0	; 208
    1cd2:	31 93       	st	Z+, r19
    1cd4:	de f6       	brtc	.-74     	; 0x1c8c <__ultoa_invert+0xe>
    1cd6:	cf 01       	movw	r24, r30
    1cd8:	08 95       	ret
    1cda:	46 2f       	mov	r20, r22
    1cdc:	47 70       	andi	r20, 0x07	; 7
    1cde:	40 5d       	subi	r20, 0xD0	; 208
    1ce0:	41 93       	st	Z+, r20
    1ce2:	b3 e0       	ldi	r27, 0x03	; 3
    1ce4:	0f d0       	rcall	.+30     	; 0x1d04 <__ultoa_invert+0x86>
    1ce6:	c9 f7       	brne	.-14     	; 0x1cda <__ultoa_invert+0x5c>
    1ce8:	f6 cf       	rjmp	.-20     	; 0x1cd6 <__ultoa_invert+0x58>
    1cea:	46 2f       	mov	r20, r22
    1cec:	4f 70       	andi	r20, 0x0F	; 15
    1cee:	40 5d       	subi	r20, 0xD0	; 208
    1cf0:	4a 33       	cpi	r20, 0x3A	; 58
    1cf2:	18 f0       	brcs	.+6      	; 0x1cfa <__ultoa_invert+0x7c>
    1cf4:	49 5d       	subi	r20, 0xD9	; 217
    1cf6:	31 fd       	sbrc	r19, 1
    1cf8:	40 52       	subi	r20, 0x20	; 32
    1cfa:	41 93       	st	Z+, r20
    1cfc:	02 d0       	rcall	.+4      	; 0x1d02 <__ultoa_invert+0x84>
    1cfe:	a9 f7       	brne	.-22     	; 0x1cea <__ultoa_invert+0x6c>
    1d00:	ea cf       	rjmp	.-44     	; 0x1cd6 <__ultoa_invert+0x58>
    1d02:	b4 e0       	ldi	r27, 0x04	; 4
    1d04:	a6 95       	lsr	r26
    1d06:	97 95       	ror	r25
    1d08:	87 95       	ror	r24
    1d0a:	77 95       	ror	r23
    1d0c:	67 95       	ror	r22
    1d0e:	ba 95       	dec	r27
    1d10:	c9 f7       	brne	.-14     	; 0x1d04 <__ultoa_invert+0x86>
    1d12:	00 97       	sbiw	r24, 0x00	; 0
    1d14:	61 05       	cpc	r22, r1
    1d16:	71 05       	cpc	r23, r1
    1d18:	08 95       	ret
    1d1a:	9b 01       	movw	r18, r22
    1d1c:	ac 01       	movw	r20, r24
    1d1e:	0a 2e       	mov	r0, r26
    1d20:	06 94       	lsr	r0
    1d22:	57 95       	ror	r21
    1d24:	47 95       	ror	r20
    1d26:	37 95       	ror	r19
    1d28:	27 95       	ror	r18
    1d2a:	ba 95       	dec	r27
    1d2c:	c9 f7       	brne	.-14     	; 0x1d20 <__ultoa_invert+0xa2>
    1d2e:	62 0f       	add	r22, r18
    1d30:	73 1f       	adc	r23, r19
    1d32:	84 1f       	adc	r24, r20
    1d34:	95 1f       	adc	r25, r21
    1d36:	a0 1d       	adc	r26, r0
    1d38:	08 95       	ret

00001d3a <_exit>:
    1d3a:	f8 94       	cli

00001d3c <__stop_program>:
    1d3c:	ff cf       	rjmp	.-2      	; 0x1d3c <__stop_program>
