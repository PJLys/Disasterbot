
LinebotTemplate1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00001e9e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000074  00802000  00001e9e  00001f32  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000015  00802074  00802074  00001fa6  2**0
                  ALLOC
  3 .comment      0000008c  00000000  00000000  00001fa6  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00002034  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000208  00000000  00000000  00002074  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00004d86  00000000  00000000  0000227c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000318a  00000000  00000000  00007002  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001673  00000000  00000000  0000a18c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000005f0  00000000  00000000  0000b800  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00002a0c  00000000  00000000  0000bdf0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000b23  00000000  00000000  0000e7fc  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000168  00000000  00000000  0000f31f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 83 01 	jmp	0x306	; 0x306 <__ctors_end>
       4:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
       8:	0c 94 dc 03 	jmp	0x7b8	; 0x7b8 <__vector_2>
       c:	0c 94 44 04 	jmp	0x888	; 0x888 <__vector_3>
      10:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      14:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      18:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      1c:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      20:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      24:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      28:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      2c:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      30:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      34:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      38:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      3c:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      40:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      44:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      48:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      4c:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      50:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      54:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      58:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      5c:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      60:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      64:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      68:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      6c:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      70:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      74:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      78:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      7c:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      80:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      84:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      88:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      8c:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      90:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      94:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      98:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      9c:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      a0:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      a4:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      a8:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      ac:	0c 94 ac 04 	jmp	0x958	; 0x958 <__vector_43>
      b0:	0c 94 14 05 	jmp	0xa28	; 0xa28 <__vector_44>
      b4:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      b8:	0c 94 0f 07 	jmp	0xe1e	; 0xe1e <__vector_46>
      bc:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      c0:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      c4:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      c8:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      cc:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      d0:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      d4:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      d8:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      dc:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      e0:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      e4:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      e8:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      ec:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      f0:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      f4:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      f8:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      fc:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     100:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     104:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     108:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     10c:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     110:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     114:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     118:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     11c:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     120:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     124:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     128:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     12c:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     130:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     134:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     138:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     13c:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     140:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     144:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     148:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     14c:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     150:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     154:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     158:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     15c:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     160:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     164:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     168:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     16c:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     170:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     174:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     178:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     17c:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     180:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     184:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     188:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     18c:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     190:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     194:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     198:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     19c:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     1a0:	0c 94 ce 02 	jmp	0x59c	; 0x59c <__vector_104>
     1a4:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     1a8:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     1ac:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     1b0:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     1b4:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     1b8:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     1bc:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     1c0:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     1c4:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     1c8:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     1cc:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     1d0:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     1d4:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     1d8:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     1dc:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     1e0:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     1e4:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     1e8:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     1ec:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     1f0:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     1f4:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     1f8:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>

000001fc <__trampolines_start>:
     1fc:	0c 94 a3 07 	jmp	0xf46	; 0xf46 <stdio_putchar>
     200:	0c 94 c8 07 	jmp	0xf90	; 0xf90 <stdio_getchar>

00000204 <__trampolines_end>:
     204:	6e 61       	ori	r22, 0x1E	; 30
     206:	6e 00       	.word	0x006e	; ????

00000208 <__c.2332>:
     208:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
     218:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
     228:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
     238:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
     248:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
     258:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
     268:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
     278:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
     288:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
     298:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     2a8:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     2b8:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     2c8:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     2d8:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     2e8:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     2f8:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

00000306 <__ctors_end>:
     306:	11 24       	eor	r1, r1
     308:	1f be       	out	0x3f, r1	; 63
     30a:	cf ef       	ldi	r28, 0xFF	; 255
     30c:	cd bf       	out	0x3d, r28	; 61
     30e:	df e9       	ldi	r29, 0x9F	; 159
     310:	de bf       	out	0x3e, r29	; 62
     312:	00 e0       	ldi	r16, 0x00	; 0
     314:	0c bf       	out	0x3c, r16	; 60

00000316 <__do_copy_data>:
     316:	10 e2       	ldi	r17, 0x20	; 32
     318:	a0 e0       	ldi	r26, 0x00	; 0
     31a:	b0 e2       	ldi	r27, 0x20	; 32
     31c:	ee e9       	ldi	r30, 0x9E	; 158
     31e:	fe e1       	ldi	r31, 0x1E	; 30
     320:	00 e0       	ldi	r16, 0x00	; 0
     322:	0b bf       	out	0x3b, r16	; 59
     324:	02 c0       	rjmp	.+4      	; 0x32a <__do_copy_data+0x14>
     326:	07 90       	elpm	r0, Z+
     328:	0d 92       	st	X+, r0
     32a:	a4 37       	cpi	r26, 0x74	; 116
     32c:	b1 07       	cpc	r27, r17
     32e:	d9 f7       	brne	.-10     	; 0x326 <__do_copy_data+0x10>

00000330 <__do_clear_bss>:
     330:	20 e2       	ldi	r18, 0x20	; 32
     332:	a4 e7       	ldi	r26, 0x74	; 116
     334:	b0 e2       	ldi	r27, 0x20	; 32
     336:	01 c0       	rjmp	.+2      	; 0x33a <.do_clear_bss_start>

00000338 <.do_clear_bss_loop>:
     338:	1d 92       	st	X+, r1

0000033a <.do_clear_bss_start>:
     33a:	a9 38       	cpi	r26, 0x89	; 137
     33c:	b2 07       	cpc	r27, r18
     33e:	e1 f7       	brne	.-8      	; 0x338 <.do_clear_bss_loop>
     340:	0e 94 e2 07 	call	0xfc4	; 0xfc4 <main>
     344:	0c 94 4d 0f 	jmp	0x1e9a	; 0x1e9a <_exit>

00000348 <__bad_interrupt>:
     348:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000034c <DriverAdcInit>:
     34c:	cf 93       	push	r28
     34e:	df 93       	push	r29
     350:	cd b7       	in	r28, 0x3d	; 61
     352:	de b7       	in	r29, 0x3e	; 62
     354:	00 00       	nop
     356:	df 91       	pop	r29
     358:	cf 91       	pop	r28
     35a:	08 95       	ret

0000035c <DriverAdps9960Init>:

#define REG_ID 0x92
#define ID 146 //Enigste dat ik heb moeten aanpassen, anders ID readback fail

void DriverAdps9960Init(void)
{
     35c:	0f 93       	push	r16
     35e:	cf 93       	push	r28
     360:	df 93       	push	r29
     362:	00 d0       	rcall	.+0      	; 0x364 <DriverAdps9960Init+0x8>
     364:	cd b7       	in	r28, 0x3d	; 61
     366:	de b7       	in	r29, 0x3e	; 62
	uint8_t res;
	uint8_t Buffer[2];
	Buffer[0]=REG_ENABLE;
     368:	80 e8       	ldi	r24, 0x80	; 128
     36a:	8a 83       	std	Y+2, r24	; 0x02
	Buffer[1]=(1<<REG_ENABLE_PON);
     36c:	81 e0       	ldi	r24, 0x01	; 1
     36e:	8b 83       	std	Y+3, r24	; 0x03
	res=TWIMWrite(ADPS9960_ADDR,Buffer,2);
     370:	ce 01       	movw	r24, r28
     372:	02 96       	adiw	r24, 0x02	; 2
     374:	42 e0       	ldi	r20, 0x02	; 2
     376:	bc 01       	movw	r22, r24
     378:	89 e3       	ldi	r24, 0x39	; 57
     37a:	0e 94 ba 05 	call	0xb74	; 0xb74 <TWIMWrite>
     37e:	89 83       	std	Y+1, r24	; 0x01
	printf ("TwimWrite:%d\r\n",res);
     380:	89 81       	ldd	r24, Y+1	; 0x01
     382:	88 2f       	mov	r24, r24
     384:	90 e0       	ldi	r25, 0x00	; 0
     386:	29 2f       	mov	r18, r25
     388:	2f 93       	push	r18
     38a:	8f 93       	push	r24
     38c:	8f e0       	ldi	r24, 0x0F	; 15
     38e:	90 e2       	ldi	r25, 0x20	; 32
     390:	89 2f       	mov	r24, r25
     392:	8f 93       	push	r24
     394:	8f e0       	ldi	r24, 0x0F	; 15
     396:	90 e2       	ldi	r25, 0x20	; 32
     398:	8f 93       	push	r24
     39a:	0e 94 db 0e 	call	0x1db6	; 0x1db6 <printf>
     39e:	0f 90       	pop	r0
     3a0:	0f 90       	pop	r0
     3a2:	0f 90       	pop	r0
     3a4:	0f 90       	pop	r0
	
	Buffer[0]=REG_ID;
     3a6:	82 e9       	ldi	r24, 0x92	; 146
     3a8:	8a 83       	std	Y+2, r24	; 0x02
	res=TWIMWriteRead(ADPS9960_ADDR,Buffer,1,Buffer,1);
     3aa:	9e 01       	movw	r18, r28
     3ac:	2e 5f       	subi	r18, 0xFE	; 254
     3ae:	3f 4f       	sbci	r19, 0xFF	; 255
     3b0:	ce 01       	movw	r24, r28
     3b2:	02 96       	adiw	r24, 0x02	; 2
     3b4:	01 e0       	ldi	r16, 0x01	; 1
     3b6:	41 e0       	ldi	r20, 0x01	; 1
     3b8:	bc 01       	movw	r22, r24
     3ba:	89 e3       	ldi	r24, 0x39	; 57
     3bc:	0e 94 d9 05 	call	0xbb2	; 0xbb2 <TWIMWriteRead>
     3c0:	89 83       	std	Y+1, r24	; 0x01
	if (Buffer[0]!=ID)
     3c2:	8a 81       	ldd	r24, Y+2	; 0x02
     3c4:	82 39       	cpi	r24, 0x92	; 146
     3c6:	99 f0       	breq	.+38     	; 0x3ee <DriverAdps9960Init+0x92>
		printf ("ADPS9960 ID readback fail: %d read\r\n",Buffer[0]);
     3c8:	8a 81       	ldd	r24, Y+2	; 0x02
     3ca:	88 2f       	mov	r24, r24
     3cc:	90 e0       	ldi	r25, 0x00	; 0
     3ce:	29 2f       	mov	r18, r25
     3d0:	2f 93       	push	r18
     3d2:	8f 93       	push	r24
     3d4:	8e e1       	ldi	r24, 0x1E	; 30
     3d6:	90 e2       	ldi	r25, 0x20	; 32
     3d8:	89 2f       	mov	r24, r25
     3da:	8f 93       	push	r24
     3dc:	8e e1       	ldi	r24, 0x1E	; 30
     3de:	90 e2       	ldi	r25, 0x20	; 32
     3e0:	8f 93       	push	r24
     3e2:	0e 94 db 0e 	call	0x1db6	; 0x1db6 <printf>
     3e6:	0f 90       	pop	r0
     3e8:	0f 90       	pop	r0
     3ea:	0f 90       	pop	r0
     3ec:	0f 90       	pop	r0

	Buffer[0]=REG_ATIME;
     3ee:	81 e8       	ldi	r24, 0x81	; 129
     3f0:	8a 83       	std	Y+2, r24	; 0x02
	Buffer[1]=219; //100ms integration time
     3f2:	8b ed       	ldi	r24, 0xDB	; 219
     3f4:	8b 83       	std	Y+3, r24	; 0x03
	res=TWIMWrite(ADPS9960_ADDR,Buffer,2);
     3f6:	ce 01       	movw	r24, r28
     3f8:	02 96       	adiw	r24, 0x02	; 2
     3fa:	42 e0       	ldi	r20, 0x02	; 2
     3fc:	bc 01       	movw	r22, r24
     3fe:	89 e3       	ldi	r24, 0x39	; 57
     400:	0e 94 ba 05 	call	0xb74	; 0xb74 <TWIMWrite>
     404:	89 83       	std	Y+1, r24	; 0x01

	Buffer[0]=REG_CTRL1;
     406:	8f e8       	ldi	r24, 0x8F	; 143
     408:	8a 83       	std	Y+2, r24	; 0x02
	Buffer[1]=0b11<<REG_CTRL1_AGAIN; //max gain
     40a:	83 e0       	ldi	r24, 0x03	; 3
     40c:	8b 83       	std	Y+3, r24	; 0x03
	res=TWIMWrite(ADPS9960_ADDR,Buffer,2);
     40e:	ce 01       	movw	r24, r28
     410:	02 96       	adiw	r24, 0x02	; 2
     412:	42 e0       	ldi	r20, 0x02	; 2
     414:	bc 01       	movw	r22, r24
     416:	89 e3       	ldi	r24, 0x39	; 57
     418:	0e 94 ba 05 	call	0xb74	; 0xb74 <TWIMWrite>
     41c:	89 83       	std	Y+1, r24	; 0x01

}
     41e:	00 00       	nop
     420:	23 96       	adiw	r28, 0x03	; 3
     422:	cd bf       	out	0x3d, r28	; 61
     424:	de bf       	out	0x3e, r29	; 62
     426:	df 91       	pop	r29
     428:	cf 91       	pop	r28
     42a:	0f 91       	pop	r16
     42c:	08 95       	ret

0000042e <DriverAdps9960Get>:

void DriverAdps9960Get(uint16_t *Clear,uint16_t *Red,uint16_t *Green, uint16_t *Blue)
{
     42e:	0f 93       	push	r16
     430:	cf 93       	push	r28
     432:	df 93       	push	r29
     434:	cd b7       	in	r28, 0x3d	; 61
     436:	de b7       	in	r29, 0x3e	; 62
     438:	6c 97       	sbiw	r28, 0x1c	; 28
     43a:	cd bf       	out	0x3d, r28	; 61
     43c:	de bf       	out	0x3e, r29	; 62
     43e:	8d 8b       	std	Y+21, r24	; 0x15
     440:	9e 8b       	std	Y+22, r25	; 0x16
     442:	6f 8b       	std	Y+23, r22	; 0x17
     444:	78 8f       	std	Y+24, r23	; 0x18
     446:	49 8f       	std	Y+25, r20	; 0x19
     448:	5a 8f       	std	Y+26, r21	; 0x1a
     44a:	2b 8f       	std	Y+27, r18	; 0x1b
     44c:	3c 8f       	std	Y+28, r19	; 0x1c
	uint8_t res;
	uint8_t Buffer[9];
	uint16_t *C=(uint16_t *) &(Buffer[0]),*R=(uint16_t *) &(Buffer[2]),*G=(uint16_t *) &(Buffer[4]),*B=(uint16_t *) &(Buffer[6]);
     44e:	ce 01       	movw	r24, r28
     450:	0c 96       	adiw	r24, 0x0c	; 12
     452:	89 83       	std	Y+1, r24	; 0x01
     454:	9a 83       	std	Y+2, r25	; 0x02
     456:	ce 01       	movw	r24, r28
     458:	0c 96       	adiw	r24, 0x0c	; 12
     45a:	02 96       	adiw	r24, 0x02	; 2
     45c:	8b 83       	std	Y+3, r24	; 0x03
     45e:	9c 83       	std	Y+4, r25	; 0x04
     460:	ce 01       	movw	r24, r28
     462:	0c 96       	adiw	r24, 0x0c	; 12
     464:	04 96       	adiw	r24, 0x04	; 4
     466:	8d 83       	std	Y+5, r24	; 0x05
     468:	9e 83       	std	Y+6, r25	; 0x06
     46a:	ce 01       	movw	r24, r28
     46c:	0c 96       	adiw	r24, 0x0c	; 12
     46e:	06 96       	adiw	r24, 0x06	; 6
     470:	8f 83       	std	Y+7, r24	; 0x07
     472:	98 87       	std	Y+8, r25	; 0x08
	uint8_t *Status=&(Buffer[0]);
     474:	ce 01       	movw	r24, r28
     476:	0c 96       	adiw	r24, 0x0c	; 12
     478:	89 87       	std	Y+9, r24	; 0x09
     47a:	9a 87       	std	Y+10, r25	; 0x0a


	Buffer[0]=REG_ENABLE;
     47c:	80 e8       	ldi	r24, 0x80	; 128
     47e:	8c 87       	std	Y+12, r24	; 0x0c
	Buffer[1]=(1<<REG_ENABLE_PON) | (1<<REG_ENABLE_AEN);
     480:	83 e0       	ldi	r24, 0x03	; 3
     482:	8d 87       	std	Y+13, r24	; 0x0d
	res=TWIMWrite(ADPS9960_ADDR,Buffer,2);
     484:	ce 01       	movw	r24, r28
     486:	0c 96       	adiw	r24, 0x0c	; 12
     488:	42 e0       	ldi	r20, 0x02	; 2
     48a:	bc 01       	movw	r22, r24
     48c:	89 e3       	ldi	r24, 0x39	; 57
     48e:	0e 94 ba 05 	call	0xb74	; 0xb74 <TWIMWrite>
     492:	8b 87       	std	Y+11, r24	; 0x0b


	do 
	{
		Buffer[0]=REG_STATUS;
     494:	83 e9       	ldi	r24, 0x93	; 147
     496:	8c 87       	std	Y+12, r24	; 0x0c
		res=TWIMWriteRead(ADPS9960_ADDR,Buffer,1,Buffer,1);
     498:	9e 01       	movw	r18, r28
     49a:	24 5f       	subi	r18, 0xF4	; 244
     49c:	3f 4f       	sbci	r19, 0xFF	; 255
     49e:	ce 01       	movw	r24, r28
     4a0:	0c 96       	adiw	r24, 0x0c	; 12
     4a2:	01 e0       	ldi	r16, 0x01	; 1
     4a4:	41 e0       	ldi	r20, 0x01	; 1
     4a6:	bc 01       	movw	r22, r24
     4a8:	89 e3       	ldi	r24, 0x39	; 57
     4aa:	0e 94 d9 05 	call	0xbb2	; 0xbb2 <TWIMWriteRead>
     4ae:	8b 87       	std	Y+11, r24	; 0x0b
		//printf ("STATUS:%d\r\n",Buffer[0]);
	} while (!(Buffer[0] & (1<<REG_STATUX_AVALID)) );
     4b0:	8c 85       	ldd	r24, Y+12	; 0x0c
     4b2:	88 2f       	mov	r24, r24
     4b4:	90 e0       	ldi	r25, 0x00	; 0
     4b6:	81 70       	andi	r24, 0x01	; 1
     4b8:	99 27       	eor	r25, r25
     4ba:	89 2b       	or	r24, r25
     4bc:	59 f3       	breq	.-42     	; 0x494 <DriverAdps9960Get+0x66>


	Buffer[0]=REG_CDATA;
     4be:	84 e9       	ldi	r24, 0x94	; 148
     4c0:	8c 87       	std	Y+12, r24	; 0x0c
	res=TWIMWriteRead(ADPS9960_ADDR,Buffer,1,Buffer,8);
     4c2:	9e 01       	movw	r18, r28
     4c4:	24 5f       	subi	r18, 0xF4	; 244
     4c6:	3f 4f       	sbci	r19, 0xFF	; 255
     4c8:	ce 01       	movw	r24, r28
     4ca:	0c 96       	adiw	r24, 0x0c	; 12
     4cc:	08 e0       	ldi	r16, 0x08	; 8
     4ce:	41 e0       	ldi	r20, 0x01	; 1
     4d0:	bc 01       	movw	r22, r24
     4d2:	89 e3       	ldi	r24, 0x39	; 57
     4d4:	0e 94 d9 05 	call	0xbb2	; 0xbb2 <TWIMWriteRead>
     4d8:	8b 87       	std	Y+11, r24	; 0x0b
	//printf ("TwimWriteRead:%d\r\n",res);

	if (Clear!=NULL) *Clear=*C;	
     4da:	8d 89       	ldd	r24, Y+21	; 0x15
     4dc:	9e 89       	ldd	r25, Y+22	; 0x16
     4de:	89 2b       	or	r24, r25
     4e0:	51 f0       	breq	.+20     	; 0x4f6 <DriverAdps9960Get+0xc8>
     4e2:	89 81       	ldd	r24, Y+1	; 0x01
     4e4:	9a 81       	ldd	r25, Y+2	; 0x02
     4e6:	fc 01       	movw	r30, r24
     4e8:	20 81       	ld	r18, Z
     4ea:	31 81       	ldd	r19, Z+1	; 0x01
     4ec:	8d 89       	ldd	r24, Y+21	; 0x15
     4ee:	9e 89       	ldd	r25, Y+22	; 0x16
     4f0:	fc 01       	movw	r30, r24
     4f2:	20 83       	st	Z, r18
     4f4:	31 83       	std	Z+1, r19	; 0x01
	if (Red!=NULL) *Red=*R;
     4f6:	8f 89       	ldd	r24, Y+23	; 0x17
     4f8:	98 8d       	ldd	r25, Y+24	; 0x18
     4fa:	89 2b       	or	r24, r25
     4fc:	51 f0       	breq	.+20     	; 0x512 <DriverAdps9960Get+0xe4>
     4fe:	8b 81       	ldd	r24, Y+3	; 0x03
     500:	9c 81       	ldd	r25, Y+4	; 0x04
     502:	fc 01       	movw	r30, r24
     504:	20 81       	ld	r18, Z
     506:	31 81       	ldd	r19, Z+1	; 0x01
     508:	8f 89       	ldd	r24, Y+23	; 0x17
     50a:	98 8d       	ldd	r25, Y+24	; 0x18
     50c:	fc 01       	movw	r30, r24
     50e:	20 83       	st	Z, r18
     510:	31 83       	std	Z+1, r19	; 0x01
	if (Green!=NULL) *Green=*G;
     512:	89 8d       	ldd	r24, Y+25	; 0x19
     514:	9a 8d       	ldd	r25, Y+26	; 0x1a
     516:	89 2b       	or	r24, r25
     518:	51 f0       	breq	.+20     	; 0x52e <DriverAdps9960Get+0x100>
     51a:	8d 81       	ldd	r24, Y+5	; 0x05
     51c:	9e 81       	ldd	r25, Y+6	; 0x06
     51e:	fc 01       	movw	r30, r24
     520:	20 81       	ld	r18, Z
     522:	31 81       	ldd	r19, Z+1	; 0x01
     524:	89 8d       	ldd	r24, Y+25	; 0x19
     526:	9a 8d       	ldd	r25, Y+26	; 0x1a
     528:	fc 01       	movw	r30, r24
     52a:	20 83       	st	Z, r18
     52c:	31 83       	std	Z+1, r19	; 0x01
	if (Blue!=NULL) *Blue=*B;
     52e:	8b 8d       	ldd	r24, Y+27	; 0x1b
     530:	9c 8d       	ldd	r25, Y+28	; 0x1c
     532:	89 2b       	or	r24, r25
     534:	51 f0       	breq	.+20     	; 0x54a <DriverAdps9960Get+0x11c>
     536:	8f 81       	ldd	r24, Y+7	; 0x07
     538:	98 85       	ldd	r25, Y+8	; 0x08
     53a:	fc 01       	movw	r30, r24
     53c:	20 81       	ld	r18, Z
     53e:	31 81       	ldd	r19, Z+1	; 0x01
     540:	8b 8d       	ldd	r24, Y+27	; 0x1b
     542:	9c 8d       	ldd	r25, Y+28	; 0x1c
     544:	fc 01       	movw	r30, r24
     546:	20 83       	st	Z, r18
     548:	31 83       	std	Z+1, r19	; 0x01

     54a:	00 00       	nop
     54c:	6c 96       	adiw	r28, 0x1c	; 28
     54e:	cd bf       	out	0x3d, r28	; 61
     550:	de bf       	out	0x3e, r29	; 62
     552:	df 91       	pop	r29
     554:	cf 91       	pop	r28
     556:	0f 91       	pop	r16
     558:	08 95       	ret

0000055a <InitInterrupts>:
 *
 * Created: 24/10/2023 14:49:33
 *  Author: pjlys
 */ 

void InitInterrupts(void) {
     55a:	cf 93       	push	r28
     55c:	df 93       	push	r29
     55e:	cd b7       	in	r28, 0x3d	; 61
     560:	de b7       	in	r29, 0x3e	; 62
	// Wake up
	PORTF.INTCTRL = 0b0010; //Medium level interrupts on INT0
     562:	80 ea       	ldi	r24, 0xA0	; 160
     564:	96 e0       	ldi	r25, 0x06	; 6
     566:	22 e0       	ldi	r18, 0x02	; 2
     568:	fc 01       	movw	r30, r24
     56a:	21 87       	std	Z+9, r18	; 0x09
	PORTF.INT0MASK = 0b10000000; //Set interrupt on SWC (pin7)
     56c:	80 ea       	ldi	r24, 0xA0	; 160
     56e:	96 e0       	ldi	r25, 0x06	; 6
     570:	20 e8       	ldi	r18, 0x80	; 128
     572:	fc 01       	movw	r30, r24
     574:	22 87       	std	Z+10, r18	; 0x0a
	PORTF.PIN7CTRL = 0b00000001; //No inv; Totem; Rising
     576:	80 ea       	ldi	r24, 0xA0	; 160
     578:	96 e0       	ldi	r25, 0x06	; 6
     57a:	21 e0       	ldi	r18, 0x01	; 1
     57c:	fc 01       	movw	r30, r24
     57e:	27 8b       	std	Z+23, r18	; 0x17
	//Interrupt handling
	PMIC.CTRL = 0b10000111;			//round robin scheduling + all interrupts enabled
     580:	80 ea       	ldi	r24, 0xA0	; 160
     582:	90 e0       	ldi	r25, 0x00	; 0
     584:	27 e8       	ldi	r18, 0x87	; 135
     586:	fc 01       	movw	r30, r24
     588:	22 83       	std	Z+2, r18	; 0x02
	SREG = 0b10000000;				//enable global interrupt
     58a:	8f e3       	ldi	r24, 0x3F	; 63
     58c:	90 e0       	ldi	r25, 0x00	; 0
     58e:	20 e8       	ldi	r18, 0x80	; 128
     590:	fc 01       	movw	r30, r24
     592:	20 83       	st	Z, r18
}
     594:	00 00       	nop
     596:	df 91       	pop	r29
     598:	cf 91       	pop	r28
     59a:	08 95       	ret

0000059c <__vector_104>:

ISR(PORTF_INT0_vect){
     59c:	1f 92       	push	r1
     59e:	0f 92       	push	r0
     5a0:	00 90 3f 00 	lds	r0, 0x003F	; 0x80003f <__TEXT_REGION_LENGTH__+0x70003f>
     5a4:	0f 92       	push	r0
     5a6:	11 24       	eor	r1, r1
     5a8:	cf 93       	push	r28
     5aa:	df 93       	push	r29
     5ac:	cd b7       	in	r28, 0x3d	; 61
     5ae:	de b7       	in	r29, 0x3e	; 62
	
}
     5b0:	00 00       	nop
     5b2:	df 91       	pop	r29
     5b4:	cf 91       	pop	r28
     5b6:	0f 90       	pop	r0
     5b8:	00 92 3f 00 	sts	0x003F, r0	; 0x80003f <__TEXT_REGION_LENGTH__+0x70003f>
     5bc:	0f 90       	pop	r0
     5be:	1f 90       	pop	r1
     5c0:	18 95       	reti

000005c2 <DriverLedInit>:
     5c2:	cf 93       	push	r28
     5c4:	df 93       	push	r29
     5c6:	cd b7       	in	r28, 0x3d	; 61
     5c8:	de b7       	in	r29, 0x3e	; 62
     5ca:	80 e2       	ldi	r24, 0x20	; 32
     5cc:	96 e0       	ldi	r25, 0x06	; 6
     5ce:	27 e0       	ldi	r18, 0x07	; 7
     5d0:	fc 01       	movw	r30, r24
     5d2:	21 83       	std	Z+1, r18	; 0x01
     5d4:	80 e2       	ldi	r24, 0x20	; 32
     5d6:	96 e0       	ldi	r25, 0x06	; 6
     5d8:	28 e5       	ldi	r18, 0x58	; 88
     5da:	fc 01       	movw	r30, r24
     5dc:	20 8b       	std	Z+16, r18	; 0x10
     5de:	80 e2       	ldi	r24, 0x20	; 32
     5e0:	96 e0       	ldi	r25, 0x06	; 6
     5e2:	28 e5       	ldi	r18, 0x58	; 88
     5e4:	fc 01       	movw	r30, r24
     5e6:	21 8b       	std	Z+17, r18	; 0x11
     5e8:	80 e2       	ldi	r24, 0x20	; 32
     5ea:	96 e0       	ldi	r25, 0x06	; 6
     5ec:	28 e5       	ldi	r18, 0x58	; 88
     5ee:	fc 01       	movw	r30, r24
     5f0:	22 8b       	std	Z+18, r18	; 0x12
     5f2:	80 e0       	ldi	r24, 0x00	; 0
     5f4:	96 e0       	ldi	r25, 0x06	; 6
     5f6:	20 e8       	ldi	r18, 0x80	; 128
     5f8:	fc 01       	movw	r30, r24
     5fa:	21 83       	std	Z+1, r18	; 0x01
     5fc:	80 e0       	ldi	r24, 0x00	; 0
     5fe:	96 e0       	ldi	r25, 0x06	; 6
     600:	28 e5       	ldi	r18, 0x58	; 88
     602:	fc 01       	movw	r30, r24
     604:	27 8b       	std	Z+23, r18	; 0x17
     606:	00 00       	nop
     608:	df 91       	pop	r29
     60a:	cf 91       	pop	r28
     60c:	08 95       	ret

0000060e <DriverLedWrite>:
     60e:	cf 93       	push	r28
     610:	df 93       	push	r29
     612:	1f 92       	push	r1
     614:	cd b7       	in	r28, 0x3d	; 61
     616:	de b7       	in	r29, 0x3e	; 62
     618:	89 83       	std	Y+1, r24	; 0x01
     61a:	80 e2       	ldi	r24, 0x20	; 32
     61c:	96 e0       	ldi	r25, 0x06	; 6
     61e:	29 81       	ldd	r18, Y+1	; 0x01
     620:	27 70       	andi	r18, 0x07	; 7
     622:	fc 01       	movw	r30, r24
     624:	24 83       	std	Z+4, r18	; 0x04
     626:	80 e0       	ldi	r24, 0x00	; 0
     628:	96 e0       	ldi	r25, 0x06	; 6
     62a:	29 81       	ldd	r18, Y+1	; 0x01
     62c:	28 70       	andi	r18, 0x08	; 8
     62e:	22 95       	swap	r18
     630:	20 7f       	andi	r18, 0xF0	; 240
     632:	fc 01       	movw	r30, r24
     634:	24 83       	std	Z+4, r18	; 0x04
     636:	00 00       	nop
     638:	0f 90       	pop	r0
     63a:	df 91       	pop	r29
     63c:	cf 91       	pop	r28
     63e:	08 95       	ret

00000640 <DriverMotorInit>:
EncoderStruct DriverMotorGetEncoder(void){
	EncoderStruct st;
	st.Cnt1 = motor1Pos;
	st.Cnt2 = motor2Pos;
	return st;
}
     640:	cf 93       	push	r28
     642:	df 93       	push	r29
     644:	cd b7       	in	r28, 0x3d	; 61
     646:	de b7       	in	r29, 0x3e	; 62
     648:	80 ea       	ldi	r24, 0xA0	; 160
     64a:	96 e0       	ldi	r25, 0x06	; 6
     64c:	2f e3       	ldi	r18, 0x3F	; 63
     64e:	fc 01       	movw	r30, r24
     650:	21 83       	std	Z+1, r18	; 0x01
     652:	80 ea       	ldi	r24, 0xA0	; 160
     654:	96 e0       	ldi	r25, 0x06	; 6
     656:	28 e5       	ldi	r18, 0x58	; 88
     658:	fc 01       	movw	r30, r24
     65a:	25 8b       	std	Z+21, r18	; 0x15
     65c:	80 ea       	ldi	r24, 0xA0	; 160
     65e:	96 e0       	ldi	r25, 0x06	; 6
     660:	28 e5       	ldi	r18, 0x58	; 88
     662:	fc 01       	movw	r30, r24
     664:	24 8b       	std	Z+20, r18	; 0x14
     666:	80 ea       	ldi	r24, 0xA0	; 160
     668:	96 e0       	ldi	r25, 0x06	; 6
     66a:	20 e1       	ldi	r18, 0x10	; 16
     66c:	fc 01       	movw	r30, r24
     66e:	23 8b       	std	Z+19, r18	; 0x13
     670:	80 ea       	ldi	r24, 0xA0	; 160
     672:	96 e0       	ldi	r25, 0x06	; 6
     674:	20 e1       	ldi	r18, 0x10	; 16
     676:	fc 01       	movw	r30, r24
     678:	22 8b       	std	Z+18, r18	; 0x12
     67a:	80 ea       	ldi	r24, 0xA0	; 160
     67c:	96 e0       	ldi	r25, 0x06	; 6
     67e:	20 e1       	ldi	r18, 0x10	; 16
     680:	fc 01       	movw	r30, r24
     682:	21 8b       	std	Z+17, r18	; 0x11
     684:	80 ea       	ldi	r24, 0xA0	; 160
     686:	96 e0       	ldi	r25, 0x06	; 6
     688:	20 e1       	ldi	r18, 0x10	; 16
     68a:	fc 01       	movw	r30, r24
     68c:	20 8b       	std	Z+16, r18	; 0x10
     68e:	80 e0       	ldi	r24, 0x00	; 0
     690:	9b e0       	ldi	r25, 0x0B	; 11
     692:	27 e0       	ldi	r18, 0x07	; 7
     694:	fc 01       	movw	r30, r24
     696:	20 83       	st	Z, r18
     698:	80 e0       	ldi	r24, 0x00	; 0
     69a:	9b e0       	ldi	r25, 0x0B	; 11
     69c:	23 ef       	ldi	r18, 0xF3	; 243
     69e:	fc 01       	movw	r30, r24
     6a0:	21 83       	std	Z+1, r18	; 0x01
     6a2:	80 e0       	ldi	r24, 0x00	; 0
     6a4:	9b e0       	ldi	r25, 0x0B	; 11
     6a6:	2f ef       	ldi	r18, 0xFF	; 255
     6a8:	3f e0       	ldi	r19, 0x0F	; 15
     6aa:	fc 01       	movw	r30, r24
     6ac:	26 a3       	std	Z+38, r18	; 0x26
     6ae:	37 a3       	std	Z+39, r19	; 0x27
     6b0:	80 e4       	ldi	r24, 0x40	; 64
     6b2:	96 e0       	ldi	r25, 0x06	; 6
     6b4:	25 e0       	ldi	r18, 0x05	; 5
     6b6:	fc 01       	movw	r30, r24
     6b8:	21 87       	std	Z+9, r18	; 0x09
     6ba:	80 e4       	ldi	r24, 0x40	; 64
     6bc:	96 e0       	ldi	r25, 0x06	; 6
     6be:	20 e8       	ldi	r18, 0x80	; 128
     6c0:	fc 01       	movw	r30, r24
     6c2:	22 87       	std	Z+10, r18	; 0x0a
     6c4:	80 e4       	ldi	r24, 0x40	; 64
     6c6:	96 e0       	ldi	r25, 0x06	; 6
     6c8:	20 e4       	ldi	r18, 0x40	; 64
     6ca:	fc 01       	movw	r30, r24
     6cc:	23 87       	std	Z+11, r18	; 0x0b
     6ce:	80 e4       	ldi	r24, 0x40	; 64
     6d0:	96 e0       	ldi	r25, 0x06	; 6
     6d2:	fc 01       	movw	r30, r24
     6d4:	17 8a       	std	Z+23, r1	; 0x17
     6d6:	80 e4       	ldi	r24, 0x40	; 64
     6d8:	96 e0       	ldi	r25, 0x06	; 6
     6da:	fc 01       	movw	r30, r24
     6dc:	16 8a       	std	Z+22, r1	; 0x16
     6de:	80 e8       	ldi	r24, 0x80	; 128
     6e0:	96 e0       	ldi	r25, 0x06	; 6
     6e2:	25 e0       	ldi	r18, 0x05	; 5
     6e4:	fc 01       	movw	r30, r24
     6e6:	21 87       	std	Z+9, r18	; 0x09
     6e8:	80 e8       	ldi	r24, 0x80	; 128
     6ea:	96 e0       	ldi	r25, 0x06	; 6
     6ec:	20 e8       	ldi	r18, 0x80	; 128
     6ee:	fc 01       	movw	r30, r24
     6f0:	22 87       	std	Z+10, r18	; 0x0a
     6f2:	80 e8       	ldi	r24, 0x80	; 128
     6f4:	96 e0       	ldi	r25, 0x06	; 6
     6f6:	20 e4       	ldi	r18, 0x40	; 64
     6f8:	fc 01       	movw	r30, r24
     6fa:	23 87       	std	Z+11, r18	; 0x0b
     6fc:	80 e8       	ldi	r24, 0x80	; 128
     6fe:	96 e0       	ldi	r25, 0x06	; 6
     700:	fc 01       	movw	r30, r24
     702:	17 8a       	std	Z+23, r1	; 0x17
     704:	80 e8       	ldi	r24, 0x80	; 128
     706:	96 e0       	ldi	r25, 0x06	; 6
     708:	fc 01       	movw	r30, r24
     70a:	16 8a       	std	Z+22, r1	; 0x16
     70c:	00 00       	nop
     70e:	df 91       	pop	r29
     710:	cf 91       	pop	r28
     712:	08 95       	ret

00000714 <DriverMotorSet>:
     714:	cf 93       	push	r28
     716:	df 93       	push	r29
     718:	00 d0       	rcall	.+0      	; 0x71a <DriverMotorSet+0x6>
     71a:	1f 92       	push	r1
     71c:	cd b7       	in	r28, 0x3d	; 61
     71e:	de b7       	in	r29, 0x3e	; 62
     720:	89 83       	std	Y+1, r24	; 0x01
     722:	9a 83       	std	Y+2, r25	; 0x02
     724:	6b 83       	std	Y+3, r22	; 0x03
     726:	7c 83       	std	Y+4, r23	; 0x04
     728:	89 81       	ldd	r24, Y+1	; 0x01
     72a:	9a 81       	ldd	r25, Y+2	; 0x02
     72c:	99 23       	and	r25, r25
     72e:	84 f4       	brge	.+32     	; 0x750 <DriverMotorSet+0x3c>
     730:	80 e0       	ldi	r24, 0x00	; 0
     732:	9b e0       	ldi	r25, 0x0B	; 11
     734:	29 81       	ldd	r18, Y+1	; 0x01
     736:	3a 81       	ldd	r19, Y+2	; 0x02
     738:	31 95       	neg	r19
     73a:	21 95       	neg	r18
     73c:	31 09       	sbc	r19, r1
     73e:	fc 01       	movw	r30, r24
     740:	20 a7       	std	Z+40, r18	; 0x28
     742:	31 a7       	std	Z+41, r19	; 0x29
     744:	80 e0       	ldi	r24, 0x00	; 0
     746:	9b e0       	ldi	r25, 0x0B	; 11
     748:	fc 01       	movw	r30, r24
     74a:	12 a6       	std	Z+42, r1	; 0x2a
     74c:	13 a6       	std	Z+43, r1	; 0x2b
     74e:	0c c0       	rjmp	.+24     	; 0x768 <DriverMotorSet+0x54>
     750:	80 e0       	ldi	r24, 0x00	; 0
     752:	9b e0       	ldi	r25, 0x0B	; 11
     754:	fc 01       	movw	r30, r24
     756:	10 a6       	std	Z+40, r1	; 0x28
     758:	11 a6       	std	Z+41, r1	; 0x29
     75a:	80 e0       	ldi	r24, 0x00	; 0
     75c:	9b e0       	ldi	r25, 0x0B	; 11
     75e:	29 81       	ldd	r18, Y+1	; 0x01
     760:	3a 81       	ldd	r19, Y+2	; 0x02
     762:	fc 01       	movw	r30, r24
     764:	22 a7       	std	Z+42, r18	; 0x2a
     766:	33 a7       	std	Z+43, r19	; 0x2b
     768:	8b 81       	ldd	r24, Y+3	; 0x03
     76a:	9c 81       	ldd	r25, Y+4	; 0x04
     76c:	18 16       	cp	r1, r24
     76e:	19 06       	cpc	r1, r25
     770:	6c f4       	brge	.+26     	; 0x78c <DriverMotorSet+0x78>
     772:	80 e0       	ldi	r24, 0x00	; 0
     774:	9b e0       	ldi	r25, 0x0B	; 11
     776:	2b 81       	ldd	r18, Y+3	; 0x03
     778:	3c 81       	ldd	r19, Y+4	; 0x04
     77a:	fc 01       	movw	r30, r24
     77c:	24 a7       	std	Z+44, r18	; 0x2c
     77e:	35 a7       	std	Z+45, r19	; 0x2d
     780:	80 e0       	ldi	r24, 0x00	; 0
     782:	9b e0       	ldi	r25, 0x0B	; 11
     784:	fc 01       	movw	r30, r24
     786:	16 a6       	std	Z+46, r1	; 0x2e
     788:	17 a6       	std	Z+47, r1	; 0x2f
     78a:	0f c0       	rjmp	.+30     	; 0x7aa <DriverMotorSet+0x96>
     78c:	80 e0       	ldi	r24, 0x00	; 0
     78e:	9b e0       	ldi	r25, 0x0B	; 11
     790:	fc 01       	movw	r30, r24
     792:	14 a6       	std	Z+44, r1	; 0x2c
     794:	15 a6       	std	Z+45, r1	; 0x2d
     796:	80 e0       	ldi	r24, 0x00	; 0
     798:	9b e0       	ldi	r25, 0x0B	; 11
     79a:	2b 81       	ldd	r18, Y+3	; 0x03
     79c:	3c 81       	ldd	r19, Y+4	; 0x04
     79e:	31 95       	neg	r19
     7a0:	21 95       	neg	r18
     7a2:	31 09       	sbc	r19, r1
     7a4:	fc 01       	movw	r30, r24
     7a6:	26 a7       	std	Z+46, r18	; 0x2e
     7a8:	37 a7       	std	Z+47, r19	; 0x2f
     7aa:	00 00       	nop
     7ac:	24 96       	adiw	r28, 0x04	; 4
     7ae:	cd bf       	out	0x3d, r28	; 61
     7b0:	de bf       	out	0x3e, r29	; 62
     7b2:	df 91       	pop	r29
     7b4:	cf 91       	pop	r28
     7b6:	08 95       	ret

000007b8 <__vector_2>:


//###ISRs###
ISR(PORTC_INT0_vect){ //interrupt op pin C7
     7b8:	1f 92       	push	r1
     7ba:	0f 92       	push	r0
     7bc:	00 90 3f 00 	lds	r0, 0x003F	; 0x80003f <__TEXT_REGION_LENGTH__+0x70003f>
     7c0:	0f 92       	push	r0
     7c2:	11 24       	eor	r1, r1
     7c4:	00 90 3b 00 	lds	r0, 0x003B	; 0x80003b <__TEXT_REGION_LENGTH__+0x70003b>
     7c8:	0f 92       	push	r0
     7ca:	8f 93       	push	r24
     7cc:	9f 93       	push	r25
     7ce:	ef 93       	push	r30
     7d0:	ff 93       	push	r31
     7d2:	cf 93       	push	r28
     7d4:	df 93       	push	r29
     7d6:	1f 92       	push	r1
     7d8:	cd b7       	in	r28, 0x3d	; 61
     7da:	de b7       	in	r29, 0x3e	; 62
	char input = PORTC.IN>>6;
     7dc:	80 e4       	ldi	r24, 0x40	; 64
     7de:	96 e0       	ldi	r25, 0x06	; 6
     7e0:	fc 01       	movw	r30, r24
     7e2:	80 85       	ldd	r24, Z+8	; 0x08
     7e4:	82 95       	swap	r24
     7e6:	86 95       	lsr	r24
     7e8:	86 95       	lsr	r24
     7ea:	83 70       	andi	r24, 0x03	; 3
     7ec:	89 83       	std	Y+1, r24	; 0x01
	if (input&0b1)				//als pin 6 hoog is
     7ee:	89 81       	ldd	r24, Y+1	; 0x01
     7f0:	88 2f       	mov	r24, r24
     7f2:	90 e0       	ldi	r25, 0x00	; 0
     7f4:	81 70       	andi	r24, 0x01	; 1
     7f6:	99 27       	eor	r25, r25
     7f8:	89 2b       	or	r24, r25
     7fa:	d9 f0       	breq	.+54     	; 0x832 <__vector_2+0x7a>
	{
		if (input&0b10)				//als rising edge op pin 7
     7fc:	89 81       	ldd	r24, Y+1	; 0x01
     7fe:	88 2f       	mov	r24, r24
     800:	90 e0       	ldi	r25, 0x00	; 0
     802:	82 70       	andi	r24, 0x02	; 2
     804:	99 27       	eor	r25, r25
     806:	89 2b       	or	r24, r25
     808:	51 f0       	breq	.+20     	; 0x81e <__vector_2+0x66>
		{
			motor1Pos--;					//teller--
     80a:	80 91 7f 20 	lds	r24, 0x207F	; 0x80207f <motor1Pos>
     80e:	90 91 80 20 	lds	r25, 0x2080	; 0x802080 <motor1Pos+0x1>
     812:	01 97       	sbiw	r24, 0x01	; 1
     814:	80 93 7f 20 	sts	0x207F, r24	; 0x80207f <motor1Pos>
     818:	90 93 80 20 	sts	0x2080, r25	; 0x802080 <motor1Pos+0x1>
			motor1Pos++;					//teller++
			} else {					//als falling edge op pin7
			motor1Pos--;					//teller--
		}
	}
}
     81c:	24 c0       	rjmp	.+72     	; 0x866 <__vector_2+0xae>
	{
		if (input&0b10)				//als rising edge op pin 7
		{
			motor1Pos--;					//teller--
			} else{						//als falling edge op pin7
			motor1Pos++;					//teller++
     81e:	80 91 7f 20 	lds	r24, 0x207F	; 0x80207f <motor1Pos>
     822:	90 91 80 20 	lds	r25, 0x2080	; 0x802080 <motor1Pos+0x1>
     826:	01 96       	adiw	r24, 0x01	; 1
     828:	80 93 7f 20 	sts	0x207F, r24	; 0x80207f <motor1Pos>
     82c:	90 93 80 20 	sts	0x2080, r25	; 0x802080 <motor1Pos+0x1>
			motor1Pos++;					//teller++
			} else {					//als falling edge op pin7
			motor1Pos--;					//teller--
		}
	}
}
     830:	1a c0       	rjmp	.+52     	; 0x866 <__vector_2+0xae>
			motor1Pos--;					//teller--
			} else{						//als falling edge op pin7
			motor1Pos++;					//teller++
		}
		} else {					//als pin 6 laag is
		if (input&0b10)				//als rising edge op pin 7
     832:	89 81       	ldd	r24, Y+1	; 0x01
     834:	88 2f       	mov	r24, r24
     836:	90 e0       	ldi	r25, 0x00	; 0
     838:	82 70       	andi	r24, 0x02	; 2
     83a:	99 27       	eor	r25, r25
     83c:	89 2b       	or	r24, r25
     83e:	51 f0       	breq	.+20     	; 0x854 <__vector_2+0x9c>
		{
			motor1Pos++;					//teller++
     840:	80 91 7f 20 	lds	r24, 0x207F	; 0x80207f <motor1Pos>
     844:	90 91 80 20 	lds	r25, 0x2080	; 0x802080 <motor1Pos+0x1>
     848:	01 96       	adiw	r24, 0x01	; 1
     84a:	80 93 7f 20 	sts	0x207F, r24	; 0x80207f <motor1Pos>
     84e:	90 93 80 20 	sts	0x2080, r25	; 0x802080 <motor1Pos+0x1>
			} else {					//als falling edge op pin7
			motor1Pos--;					//teller--
		}
	}
}
     852:	09 c0       	rjmp	.+18     	; 0x866 <__vector_2+0xae>
		} else {					//als pin 6 laag is
		if (input&0b10)				//als rising edge op pin 7
		{
			motor1Pos++;					//teller++
			} else {					//als falling edge op pin7
			motor1Pos--;					//teller--
     854:	80 91 7f 20 	lds	r24, 0x207F	; 0x80207f <motor1Pos>
     858:	90 91 80 20 	lds	r25, 0x2080	; 0x802080 <motor1Pos+0x1>
     85c:	01 97       	sbiw	r24, 0x01	; 1
     85e:	80 93 7f 20 	sts	0x207F, r24	; 0x80207f <motor1Pos>
     862:	90 93 80 20 	sts	0x2080, r25	; 0x802080 <motor1Pos+0x1>
		}
	}
}
     866:	00 00       	nop
     868:	0f 90       	pop	r0
     86a:	df 91       	pop	r29
     86c:	cf 91       	pop	r28
     86e:	ff 91       	pop	r31
     870:	ef 91       	pop	r30
     872:	9f 91       	pop	r25
     874:	8f 91       	pop	r24
     876:	0f 90       	pop	r0
     878:	00 92 3b 00 	sts	0x003B, r0	; 0x80003b <__TEXT_REGION_LENGTH__+0x70003b>
     87c:	0f 90       	pop	r0
     87e:	00 92 3f 00 	sts	0x003F, r0	; 0x80003f <__TEXT_REGION_LENGTH__+0x70003f>
     882:	0f 90       	pop	r0
     884:	1f 90       	pop	r1
     886:	18 95       	reti

00000888 <__vector_3>:

ISR(PORTC_INT1_vect){	//interrupt op pin C6
     888:	1f 92       	push	r1
     88a:	0f 92       	push	r0
     88c:	00 90 3f 00 	lds	r0, 0x003F	; 0x80003f <__TEXT_REGION_LENGTH__+0x70003f>
     890:	0f 92       	push	r0
     892:	11 24       	eor	r1, r1
     894:	00 90 3b 00 	lds	r0, 0x003B	; 0x80003b <__TEXT_REGION_LENGTH__+0x70003b>
     898:	0f 92       	push	r0
     89a:	8f 93       	push	r24
     89c:	9f 93       	push	r25
     89e:	ef 93       	push	r30
     8a0:	ff 93       	push	r31
     8a2:	cf 93       	push	r28
     8a4:	df 93       	push	r29
     8a6:	1f 92       	push	r1
     8a8:	cd b7       	in	r28, 0x3d	; 61
     8aa:	de b7       	in	r29, 0x3e	; 62
	char input = PORTC.IN>>6;
     8ac:	80 e4       	ldi	r24, 0x40	; 64
     8ae:	96 e0       	ldi	r25, 0x06	; 6
     8b0:	fc 01       	movw	r30, r24
     8b2:	80 85       	ldd	r24, Z+8	; 0x08
     8b4:	82 95       	swap	r24
     8b6:	86 95       	lsr	r24
     8b8:	86 95       	lsr	r24
     8ba:	83 70       	andi	r24, 0x03	; 3
     8bc:	89 83       	std	Y+1, r24	; 0x01
	if (input&0b10)			//als C7 hoog is
     8be:	89 81       	ldd	r24, Y+1	; 0x01
     8c0:	88 2f       	mov	r24, r24
     8c2:	90 e0       	ldi	r25, 0x00	; 0
     8c4:	82 70       	andi	r24, 0x02	; 2
     8c6:	99 27       	eor	r25, r25
     8c8:	89 2b       	or	r24, r25
     8ca:	d9 f0       	breq	.+54     	; 0x902 <__vector_3+0x7a>
	{
		if (input&0b1)			//als RE C6	
     8cc:	89 81       	ldd	r24, Y+1	; 0x01
     8ce:	88 2f       	mov	r24, r24
     8d0:	90 e0       	ldi	r25, 0x00	; 0
     8d2:	81 70       	andi	r24, 0x01	; 1
     8d4:	99 27       	eor	r25, r25
     8d6:	89 2b       	or	r24, r25
     8d8:	51 f0       	breq	.+20     	; 0x8ee <__vector_3+0x66>
		{
			motor1Pos++;				//teller++
     8da:	80 91 7f 20 	lds	r24, 0x207F	; 0x80207f <motor1Pos>
     8de:	90 91 80 20 	lds	r25, 0x2080	; 0x802080 <motor1Pos+0x1>
     8e2:	01 96       	adiw	r24, 0x01	; 1
     8e4:	80 93 7f 20 	sts	0x207F, r24	; 0x80207f <motor1Pos>
     8e8:	90 93 80 20 	sts	0x2080, r25	; 0x802080 <motor1Pos+0x1>
			motor1Pos--;				//teller++
		} else {				//als FE C6
			motor1Pos++;				//teller--
		}
	}
}
     8ec:	24 c0       	rjmp	.+72     	; 0x936 <__vector_3+0xae>
	{
		if (input&0b1)			//als RE C6	
		{
			motor1Pos++;				//teller++
		} else {				//als FE C6
			motor1Pos--;				//teller--
     8ee:	80 91 7f 20 	lds	r24, 0x207F	; 0x80207f <motor1Pos>
     8f2:	90 91 80 20 	lds	r25, 0x2080	; 0x802080 <motor1Pos+0x1>
     8f6:	01 97       	sbiw	r24, 0x01	; 1
     8f8:	80 93 7f 20 	sts	0x207F, r24	; 0x80207f <motor1Pos>
     8fc:	90 93 80 20 	sts	0x2080, r25	; 0x802080 <motor1Pos+0x1>
			motor1Pos--;				//teller++
		} else {				//als FE C6
			motor1Pos++;				//teller--
		}
	}
}
     900:	1a c0       	rjmp	.+52     	; 0x936 <__vector_3+0xae>
			motor1Pos++;				//teller++
		} else {				//als FE C6
			motor1Pos--;				//teller--
		}
	} else {				//als C7 laag is
		if (input&0b10)			//als RE C6
     902:	89 81       	ldd	r24, Y+1	; 0x01
     904:	88 2f       	mov	r24, r24
     906:	90 e0       	ldi	r25, 0x00	; 0
     908:	82 70       	andi	r24, 0x02	; 2
     90a:	99 27       	eor	r25, r25
     90c:	89 2b       	or	r24, r25
     90e:	51 f0       	breq	.+20     	; 0x924 <__vector_3+0x9c>
		{					
			motor1Pos--;				//teller++
     910:	80 91 7f 20 	lds	r24, 0x207F	; 0x80207f <motor1Pos>
     914:	90 91 80 20 	lds	r25, 0x2080	; 0x802080 <motor1Pos+0x1>
     918:	01 97       	sbiw	r24, 0x01	; 1
     91a:	80 93 7f 20 	sts	0x207F, r24	; 0x80207f <motor1Pos>
     91e:	90 93 80 20 	sts	0x2080, r25	; 0x802080 <motor1Pos+0x1>
		} else {				//als FE C6
			motor1Pos++;				//teller--
		}
	}
}
     922:	09 c0       	rjmp	.+18     	; 0x936 <__vector_3+0xae>
	} else {				//als C7 laag is
		if (input&0b10)			//als RE C6
		{					
			motor1Pos--;				//teller++
		} else {				//als FE C6
			motor1Pos++;				//teller--
     924:	80 91 7f 20 	lds	r24, 0x207F	; 0x80207f <motor1Pos>
     928:	90 91 80 20 	lds	r25, 0x2080	; 0x802080 <motor1Pos+0x1>
     92c:	01 96       	adiw	r24, 0x01	; 1
     92e:	80 93 7f 20 	sts	0x207F, r24	; 0x80207f <motor1Pos>
     932:	90 93 80 20 	sts	0x2080, r25	; 0x802080 <motor1Pos+0x1>
		}
	}
}
     936:	00 00       	nop
     938:	0f 90       	pop	r0
     93a:	df 91       	pop	r29
     93c:	cf 91       	pop	r28
     93e:	ff 91       	pop	r31
     940:	ef 91       	pop	r30
     942:	9f 91       	pop	r25
     944:	8f 91       	pop	r24
     946:	0f 90       	pop	r0
     948:	00 92 3b 00 	sts	0x003B, r0	; 0x80003b <__TEXT_REGION_LENGTH__+0x70003b>
     94c:	0f 90       	pop	r0
     94e:	00 92 3f 00 	sts	0x003F, r0	; 0x80003f <__TEXT_REGION_LENGTH__+0x70003f>
     952:	0f 90       	pop	r0
     954:	1f 90       	pop	r1
     956:	18 95       	reti

00000958 <__vector_43>:

ISR(PORTE_INT0_vect){ //interrupt op pin E7
     958:	1f 92       	push	r1
     95a:	0f 92       	push	r0
     95c:	00 90 3f 00 	lds	r0, 0x003F	; 0x80003f <__TEXT_REGION_LENGTH__+0x70003f>
     960:	0f 92       	push	r0
     962:	11 24       	eor	r1, r1
     964:	00 90 3b 00 	lds	r0, 0x003B	; 0x80003b <__TEXT_REGION_LENGTH__+0x70003b>
     968:	0f 92       	push	r0
     96a:	8f 93       	push	r24
     96c:	9f 93       	push	r25
     96e:	ef 93       	push	r30
     970:	ff 93       	push	r31
     972:	cf 93       	push	r28
     974:	df 93       	push	r29
     976:	1f 92       	push	r1
     978:	cd b7       	in	r28, 0x3d	; 61
     97a:	de b7       	in	r29, 0x3e	; 62
	char input = PORTE.IN>>6;
     97c:	80 e8       	ldi	r24, 0x80	; 128
     97e:	96 e0       	ldi	r25, 0x06	; 6
     980:	fc 01       	movw	r30, r24
     982:	80 85       	ldd	r24, Z+8	; 0x08
     984:	82 95       	swap	r24
     986:	86 95       	lsr	r24
     988:	86 95       	lsr	r24
     98a:	83 70       	andi	r24, 0x03	; 3
     98c:	89 83       	std	Y+1, r24	; 0x01
	if (input&0b1)				//als pin 6 hoog is
     98e:	89 81       	ldd	r24, Y+1	; 0x01
     990:	88 2f       	mov	r24, r24
     992:	90 e0       	ldi	r25, 0x00	; 0
     994:	81 70       	andi	r24, 0x01	; 1
     996:	99 27       	eor	r25, r25
     998:	89 2b       	or	r24, r25
     99a:	d9 f0       	breq	.+54     	; 0x9d2 <__vector_43+0x7a>
	{
		if (input&0b10)				//als rising edge op pin 7
     99c:	89 81       	ldd	r24, Y+1	; 0x01
     99e:	88 2f       	mov	r24, r24
     9a0:	90 e0       	ldi	r25, 0x00	; 0
     9a2:	82 70       	andi	r24, 0x02	; 2
     9a4:	99 27       	eor	r25, r25
     9a6:	89 2b       	or	r24, r25
     9a8:	51 f0       	breq	.+20     	; 0x9be <__vector_43+0x66>
		{
			motor2Pos--;					//teller--
     9aa:	80 91 81 20 	lds	r24, 0x2081	; 0x802081 <motor2Pos>
     9ae:	90 91 82 20 	lds	r25, 0x2082	; 0x802082 <motor2Pos+0x1>
     9b2:	01 97       	sbiw	r24, 0x01	; 1
     9b4:	80 93 81 20 	sts	0x2081, r24	; 0x802081 <motor2Pos>
     9b8:	90 93 82 20 	sts	0x2082, r25	; 0x802082 <motor2Pos+0x1>
			motor2Pos++;					//teller++
			} else {					//als falling edge op pin7
			motor2Pos--;					//teller--
		}
	}
}
     9bc:	24 c0       	rjmp	.+72     	; 0xa06 <__vector_43+0xae>
	{
		if (input&0b10)				//als rising edge op pin 7
		{
			motor2Pos--;					//teller--
			} else{						//als falling edge op pin7
			motor2Pos++;					//teller++
     9be:	80 91 81 20 	lds	r24, 0x2081	; 0x802081 <motor2Pos>
     9c2:	90 91 82 20 	lds	r25, 0x2082	; 0x802082 <motor2Pos+0x1>
     9c6:	01 96       	adiw	r24, 0x01	; 1
     9c8:	80 93 81 20 	sts	0x2081, r24	; 0x802081 <motor2Pos>
     9cc:	90 93 82 20 	sts	0x2082, r25	; 0x802082 <motor2Pos+0x1>
			motor2Pos++;					//teller++
			} else {					//als falling edge op pin7
			motor2Pos--;					//teller--
		}
	}
}
     9d0:	1a c0       	rjmp	.+52     	; 0xa06 <__vector_43+0xae>
			motor2Pos--;					//teller--
			} else{						//als falling edge op pin7
			motor2Pos++;					//teller++
		}
		} else {				//als pin 6 laag is
		if (input&0b10)				//als rising edge op pin 7
     9d2:	89 81       	ldd	r24, Y+1	; 0x01
     9d4:	88 2f       	mov	r24, r24
     9d6:	90 e0       	ldi	r25, 0x00	; 0
     9d8:	82 70       	andi	r24, 0x02	; 2
     9da:	99 27       	eor	r25, r25
     9dc:	89 2b       	or	r24, r25
     9de:	51 f0       	breq	.+20     	; 0x9f4 <__vector_43+0x9c>
		{
			motor2Pos++;					//teller++
     9e0:	80 91 81 20 	lds	r24, 0x2081	; 0x802081 <motor2Pos>
     9e4:	90 91 82 20 	lds	r25, 0x2082	; 0x802082 <motor2Pos+0x1>
     9e8:	01 96       	adiw	r24, 0x01	; 1
     9ea:	80 93 81 20 	sts	0x2081, r24	; 0x802081 <motor2Pos>
     9ee:	90 93 82 20 	sts	0x2082, r25	; 0x802082 <motor2Pos+0x1>
			} else {					//als falling edge op pin7
			motor2Pos--;					//teller--
		}
	}
}
     9f2:	09 c0       	rjmp	.+18     	; 0xa06 <__vector_43+0xae>
		} else {				//als pin 6 laag is
		if (input&0b10)				//als rising edge op pin 7
		{
			motor2Pos++;					//teller++
			} else {					//als falling edge op pin7
			motor2Pos--;					//teller--
     9f4:	80 91 81 20 	lds	r24, 0x2081	; 0x802081 <motor2Pos>
     9f8:	90 91 82 20 	lds	r25, 0x2082	; 0x802082 <motor2Pos+0x1>
     9fc:	01 97       	sbiw	r24, 0x01	; 1
     9fe:	80 93 81 20 	sts	0x2081, r24	; 0x802081 <motor2Pos>
     a02:	90 93 82 20 	sts	0x2082, r25	; 0x802082 <motor2Pos+0x1>
		}
	}
}
     a06:	00 00       	nop
     a08:	0f 90       	pop	r0
     a0a:	df 91       	pop	r29
     a0c:	cf 91       	pop	r28
     a0e:	ff 91       	pop	r31
     a10:	ef 91       	pop	r30
     a12:	9f 91       	pop	r25
     a14:	8f 91       	pop	r24
     a16:	0f 90       	pop	r0
     a18:	00 92 3b 00 	sts	0x003B, r0	; 0x80003b <__TEXT_REGION_LENGTH__+0x70003b>
     a1c:	0f 90       	pop	r0
     a1e:	00 92 3f 00 	sts	0x003F, r0	; 0x80003f <__TEXT_REGION_LENGTH__+0x70003f>
     a22:	0f 90       	pop	r0
     a24:	1f 90       	pop	r1
     a26:	18 95       	reti

00000a28 <__vector_44>:

ISR(PORTE_INT1_vect){	//Interrupt op E6
     a28:	1f 92       	push	r1
     a2a:	0f 92       	push	r0
     a2c:	00 90 3f 00 	lds	r0, 0x003F	; 0x80003f <__TEXT_REGION_LENGTH__+0x70003f>
     a30:	0f 92       	push	r0
     a32:	11 24       	eor	r1, r1
     a34:	00 90 3b 00 	lds	r0, 0x003B	; 0x80003b <__TEXT_REGION_LENGTH__+0x70003b>
     a38:	0f 92       	push	r0
     a3a:	8f 93       	push	r24
     a3c:	9f 93       	push	r25
     a3e:	ef 93       	push	r30
     a40:	ff 93       	push	r31
     a42:	cf 93       	push	r28
     a44:	df 93       	push	r29
     a46:	1f 92       	push	r1
     a48:	cd b7       	in	r28, 0x3d	; 61
     a4a:	de b7       	in	r29, 0x3e	; 62
	char input = PORTE.IN>>6;
     a4c:	80 e8       	ldi	r24, 0x80	; 128
     a4e:	96 e0       	ldi	r25, 0x06	; 6
     a50:	fc 01       	movw	r30, r24
     a52:	80 85       	ldd	r24, Z+8	; 0x08
     a54:	82 95       	swap	r24
     a56:	86 95       	lsr	r24
     a58:	86 95       	lsr	r24
     a5a:	83 70       	andi	r24, 0x03	; 3
     a5c:	89 83       	std	Y+1, r24	; 0x01
	if (input&0b10)			//als E7 hoog is
     a5e:	89 81       	ldd	r24, Y+1	; 0x01
     a60:	88 2f       	mov	r24, r24
     a62:	90 e0       	ldi	r25, 0x00	; 0
     a64:	82 70       	andi	r24, 0x02	; 2
     a66:	99 27       	eor	r25, r25
     a68:	89 2b       	or	r24, r25
     a6a:	d9 f0       	breq	.+54     	; 0xaa2 <__vector_44+0x7a>
	{
		if (input&0b1)			//als RE E6
     a6c:	89 81       	ldd	r24, Y+1	; 0x01
     a6e:	88 2f       	mov	r24, r24
     a70:	90 e0       	ldi	r25, 0x00	; 0
     a72:	81 70       	andi	r24, 0x01	; 1
     a74:	99 27       	eor	r25, r25
     a76:	89 2b       	or	r24, r25
     a78:	51 f0       	breq	.+20     	; 0xa8e <__vector_44+0x66>
		{
			motor2Pos++;			//teller++
     a7a:	80 91 81 20 	lds	r24, 0x2081	; 0x802081 <motor2Pos>
     a7e:	90 91 82 20 	lds	r25, 0x2082	; 0x802082 <motor2Pos+0x1>
     a82:	01 96       	adiw	r24, 0x01	; 1
     a84:	80 93 81 20 	sts	0x2081, r24	; 0x802081 <motor2Pos>
     a88:	90 93 82 20 	sts	0x2082, r25	; 0x802082 <motor2Pos+0x1>
			motor2Pos--;			//teller++
			} else {			//als FE E6
			motor2Pos++;			//teller--
		}
	}
}
     a8c:	24 c0       	rjmp	.+72     	; 0xad6 <__vector_44+0xae>
	{
		if (input&0b1)			//als RE E6
		{
			motor2Pos++;			//teller++
			} else {			//als FE E6
			motor2Pos--;			//teller--
     a8e:	80 91 81 20 	lds	r24, 0x2081	; 0x802081 <motor2Pos>
     a92:	90 91 82 20 	lds	r25, 0x2082	; 0x802082 <motor2Pos+0x1>
     a96:	01 97       	sbiw	r24, 0x01	; 1
     a98:	80 93 81 20 	sts	0x2081, r24	; 0x802081 <motor2Pos>
     a9c:	90 93 82 20 	sts	0x2082, r25	; 0x802082 <motor2Pos+0x1>
			motor2Pos--;			//teller++
			} else {			//als FE E6
			motor2Pos++;			//teller--
		}
	}
}
     aa0:	1a c0       	rjmp	.+52     	; 0xad6 <__vector_44+0xae>
			motor2Pos++;			//teller++
			} else {			//als FE E6
			motor2Pos--;			//teller--
		}
		} else {			//als E7 laag is
		if (input&0b10)			//als RE E6
     aa2:	89 81       	ldd	r24, Y+1	; 0x01
     aa4:	88 2f       	mov	r24, r24
     aa6:	90 e0       	ldi	r25, 0x00	; 0
     aa8:	82 70       	andi	r24, 0x02	; 2
     aaa:	99 27       	eor	r25, r25
     aac:	89 2b       	or	r24, r25
     aae:	51 f0       	breq	.+20     	; 0xac4 <__vector_44+0x9c>
		{
			motor2Pos--;			//teller++
     ab0:	80 91 81 20 	lds	r24, 0x2081	; 0x802081 <motor2Pos>
     ab4:	90 91 82 20 	lds	r25, 0x2082	; 0x802082 <motor2Pos+0x1>
     ab8:	01 97       	sbiw	r24, 0x01	; 1
     aba:	80 93 81 20 	sts	0x2081, r24	; 0x802081 <motor2Pos>
     abe:	90 93 82 20 	sts	0x2082, r25	; 0x802082 <motor2Pos+0x1>
			} else {			//als FE E6
			motor2Pos++;			//teller--
		}
	}
}
     ac2:	09 c0       	rjmp	.+18     	; 0xad6 <__vector_44+0xae>
		} else {			//als E7 laag is
		if (input&0b10)			//als RE E6
		{
			motor2Pos--;			//teller++
			} else {			//als FE E6
			motor2Pos++;			//teller--
     ac4:	80 91 81 20 	lds	r24, 0x2081	; 0x802081 <motor2Pos>
     ac8:	90 91 82 20 	lds	r25, 0x2082	; 0x802082 <motor2Pos+0x1>
     acc:	01 96       	adiw	r24, 0x01	; 1
     ace:	80 93 81 20 	sts	0x2081, r24	; 0x802081 <motor2Pos>
     ad2:	90 93 82 20 	sts	0x2082, r25	; 0x802082 <motor2Pos+0x1>
		}
	}
}
     ad6:	00 00       	nop
     ad8:	0f 90       	pop	r0
     ada:	df 91       	pop	r29
     adc:	cf 91       	pop	r28
     ade:	ff 91       	pop	r31
     ae0:	ef 91       	pop	r30
     ae2:	9f 91       	pop	r25
     ae4:	8f 91       	pop	r24
     ae6:	0f 90       	pop	r0
     ae8:	00 92 3b 00 	sts	0x003B, r0	; 0x80003b <__TEXT_REGION_LENGTH__+0x70003b>
     aec:	0f 90       	pop	r0
     aee:	00 92 3f 00 	sts	0x003F, r0	; 0x80003f <__TEXT_REGION_LENGTH__+0x70003f>
     af2:	0f 90       	pop	r0
     af4:	1f 90       	pop	r1
     af6:	18 95       	reti

00000af8 <DriverSysClkXtalInit>:
     af8:	8b ec       	ldi	r24, 0xCB	; 203
     afa:	80 93 52 00 	sts	0x0052, r24	; 0x800052 <__TEXT_REGION_LENGTH__+0x700052>
     afe:	88 e0       	ldi	r24, 0x08	; 8
     b00:	80 93 50 00 	sts	0x0050, r24	; 0x800050 <__TEXT_REGION_LENGTH__+0x700050>
     b04:	80 91 51 00 	lds	r24, 0x0051	; 0x800051 <__TEXT_REGION_LENGTH__+0x700051>
     b08:	83 ff       	sbrs	r24, 3
     b0a:	fc cf       	rjmp	.-8      	; 0xb04 <DriverSysClkXtalInit+0xc>
     b0c:	82 ec       	ldi	r24, 0xC2	; 194
     b0e:	80 93 55 00 	sts	0x0055, r24	; 0x800055 <__TEXT_REGION_LENGTH__+0x700055>
     b12:	88 e1       	ldi	r24, 0x18	; 24
     b14:	80 93 50 00 	sts	0x0050, r24	; 0x800050 <__TEXT_REGION_LENGTH__+0x700050>
     b18:	80 91 51 00 	lds	r24, 0x0051	; 0x800051 <__TEXT_REGION_LENGTH__+0x700051>
     b1c:	84 ff       	sbrs	r24, 4
     b1e:	fc cf       	rjmp	.-8      	; 0xb18 <DriverSysClkXtalInit+0x20>
     b20:	88 ed       	ldi	r24, 0xD8	; 216
     b22:	84 bf       	out	0x34, r24	; 52
     b24:	84 e0       	ldi	r24, 0x04	; 4
     b26:	80 93 40 00 	sts	0x0040, r24	; 0x800040 <__TEXT_REGION_LENGTH__+0x700040>
     b2a:	80 e0       	ldi	r24, 0x00	; 0
     b2c:	08 95       	ret

00000b2e <DriverTWIMInit>:
     b2e:	cf 93       	push	r28
     b30:	df 93       	push	r29
     b32:	cd b7       	in	r28, 0x3d	; 61
     b34:	de b7       	in	r29, 0x3e	; 62
     b36:	10 92 7d 20 	sts	0x207D, r1	; 0x80207d <Twim_status>
     b3a:	80 e8       	ldi	r24, 0x80	; 128
     b3c:	96 e0       	ldi	r25, 0x06	; 6
     b3e:	28 e1       	ldi	r18, 0x18	; 24
     b40:	fc 01       	movw	r30, r24
     b42:	20 8b       	std	Z+16, r18	; 0x10
     b44:	80 e8       	ldi	r24, 0x80	; 128
     b46:	96 e0       	ldi	r25, 0x06	; 6
     b48:	28 e1       	ldi	r18, 0x18	; 24
     b4a:	fc 01       	movw	r30, r24
     b4c:	21 8b       	std	Z+17, r18	; 0x11
     b4e:	80 ea       	ldi	r24, 0xA0	; 160
     b50:	94 e0       	ldi	r25, 0x04	; 4
     b52:	28 e7       	ldi	r18, 0x78	; 120
     b54:	fc 01       	movw	r30, r24
     b56:	21 83       	std	Z+1, r18	; 0x01
     b58:	80 ea       	ldi	r24, 0xA0	; 160
     b5a:	94 e0       	ldi	r25, 0x04	; 4
     b5c:	23 e2       	ldi	r18, 0x23	; 35
     b5e:	fc 01       	movw	r30, r24
     b60:	25 83       	std	Z+5, r18	; 0x05
     b62:	80 ea       	ldi	r24, 0xA0	; 160
     b64:	94 e0       	ldi	r25, 0x04	; 4
     b66:	21 e0       	ldi	r18, 0x01	; 1
     b68:	fc 01       	movw	r30, r24
     b6a:	24 83       	std	Z+4, r18	; 0x04
     b6c:	00 00       	nop
     b6e:	df 91       	pop	r29
     b70:	cf 91       	pop	r28
     b72:	08 95       	ret

00000b74 <TWIMWrite>:
     b74:	0f 93       	push	r16
     b76:	cf 93       	push	r28
     b78:	df 93       	push	r29
     b7a:	cd b7       	in	r28, 0x3d	; 61
     b7c:	de b7       	in	r29, 0x3e	; 62
     b7e:	25 97       	sbiw	r28, 0x05	; 5
     b80:	cd bf       	out	0x3d, r28	; 61
     b82:	de bf       	out	0x3e, r29	; 62
     b84:	8a 83       	std	Y+2, r24	; 0x02
     b86:	6b 83       	std	Y+3, r22	; 0x03
     b88:	7c 83       	std	Y+4, r23	; 0x04
     b8a:	4d 83       	std	Y+5, r20	; 0x05
     b8c:	8b 81       	ldd	r24, Y+3	; 0x03
     b8e:	9c 81       	ldd	r25, Y+4	; 0x04
     b90:	00 e0       	ldi	r16, 0x00	; 0
     b92:	20 e0       	ldi	r18, 0x00	; 0
     b94:	30 e0       	ldi	r19, 0x00	; 0
     b96:	4d 81       	ldd	r20, Y+5	; 0x05
     b98:	bc 01       	movw	r22, r24
     b9a:	8a 81       	ldd	r24, Y+2	; 0x02
     b9c:	0e 94 d9 05 	call	0xbb2	; 0xbb2 <TWIMWriteRead>
     ba0:	89 83       	std	Y+1, r24	; 0x01
     ba2:	89 81       	ldd	r24, Y+1	; 0x01
     ba4:	25 96       	adiw	r28, 0x05	; 5
     ba6:	cd bf       	out	0x3d, r28	; 61
     ba8:	de bf       	out	0x3e, r29	; 62
     baa:	df 91       	pop	r29
     bac:	cf 91       	pop	r28
     bae:	0f 91       	pop	r16
     bb0:	08 95       	ret

00000bb2 <TWIMWriteRead>:
     bb2:	0f 93       	push	r16
     bb4:	cf 93       	push	r28
     bb6:	df 93       	push	r29
     bb8:	cd b7       	in	r28, 0x3d	; 61
     bba:	de b7       	in	r29, 0x3e	; 62
     bbc:	29 97       	sbiw	r28, 0x09	; 9
     bbe:	cd bf       	out	0x3d, r28	; 61
     bc0:	de bf       	out	0x3e, r29	; 62
     bc2:	8b 83       	std	Y+3, r24	; 0x03
     bc4:	6c 83       	std	Y+4, r22	; 0x04
     bc6:	7d 83       	std	Y+5, r23	; 0x05
     bc8:	4e 83       	std	Y+6, r20	; 0x06
     bca:	2f 83       	std	Y+7, r18	; 0x07
     bcc:	38 87       	std	Y+8, r19	; 0x08
     bce:	09 87       	std	Y+9, r16	; 0x09
     bd0:	8c 81       	ldd	r24, Y+4	; 0x04
     bd2:	9d 81       	ldd	r25, Y+5	; 0x05
     bd4:	80 93 75 20 	sts	0x2075, r24	; 0x802075 <Twim_writeData>
     bd8:	90 93 76 20 	sts	0x2076, r25	; 0x802076 <Twim_writeData+0x1>
     bdc:	8f 81       	ldd	r24, Y+7	; 0x07
     bde:	98 85       	ldd	r25, Y+8	; 0x08
     be0:	80 93 77 20 	sts	0x2077, r24	; 0x802077 <Twim_readData>
     be4:	90 93 78 20 	sts	0x2078, r25	; 0x802078 <Twim_readData+0x1>
     be8:	80 91 7d 20 	lds	r24, 0x207D	; 0x80207d <Twim_status>
     bec:	88 23       	and	r24, r24
     bee:	b9 f5       	brne	.+110    	; 0xc5e <TWIMWriteRead+0xac>
     bf0:	81 e0       	ldi	r24, 0x01	; 1
     bf2:	80 93 7d 20 	sts	0x207D, r24	; 0x80207d <Twim_status>
     bf6:	10 92 7e 20 	sts	0x207E, r1	; 0x80207e <Twim_result>
     bfa:	8b 81       	ldd	r24, Y+3	; 0x03
     bfc:	88 0f       	add	r24, r24
     bfe:	80 93 74 20 	sts	0x2074, r24	; 0x802074 <__data_end>
     c02:	8e 81       	ldd	r24, Y+6	; 0x06
     c04:	80 93 79 20 	sts	0x2079, r24	; 0x802079 <Twim_bytesToWrite>
     c08:	89 85       	ldd	r24, Y+9	; 0x09
     c0a:	80 93 7a 20 	sts	0x207A, r24	; 0x80207a <Twim_bytesToRead>
     c0e:	10 92 7b 20 	sts	0x207B, r1	; 0x80207b <Twim_bytesWritten>
     c12:	10 92 7c 20 	sts	0x207C, r1	; 0x80207c <Twim_bytesRead>
     c16:	80 91 79 20 	lds	r24, 0x2079	; 0x802079 <Twim_bytesToWrite>
     c1a:	88 23       	and	r24, r24
     c1c:	51 f0       	breq	.+20     	; 0xc32 <TWIMWriteRead+0x80>
     c1e:	80 91 74 20 	lds	r24, 0x2074	; 0x802074 <__data_end>
     c22:	8e 7f       	andi	r24, 0xFE	; 254
     c24:	89 83       	std	Y+1, r24	; 0x01
     c26:	80 ea       	ldi	r24, 0xA0	; 160
     c28:	94 e0       	ldi	r25, 0x04	; 4
     c2a:	29 81       	ldd	r18, Y+1	; 0x01
     c2c:	fc 01       	movw	r30, r24
     c2e:	26 83       	std	Z+6, r18	; 0x06
     c30:	10 c0       	rjmp	.+32     	; 0xc52 <TWIMWriteRead+0xa0>
     c32:	80 91 7a 20 	lds	r24, 0x207A	; 0x80207a <Twim_bytesToRead>
     c36:	88 23       	and	r24, r24
     c38:	61 f0       	breq	.+24     	; 0xc52 <TWIMWriteRead+0xa0>
     c3a:	80 91 74 20 	lds	r24, 0x2074	; 0x802074 <__data_end>
     c3e:	81 60       	ori	r24, 0x01	; 1
     c40:	8a 83       	std	Y+2, r24	; 0x02
     c42:	80 ea       	ldi	r24, 0xA0	; 160
     c44:	94 e0       	ldi	r25, 0x04	; 4
     c46:	2a 81       	ldd	r18, Y+2	; 0x02
     c48:	fc 01       	movw	r30, r24
     c4a:	26 83       	std	Z+6, r18	; 0x06
     c4c:	02 c0       	rjmp	.+4      	; 0xc52 <TWIMWriteRead+0xa0>
     c4e:	81 e0       	ldi	r24, 0x01	; 1
     c50:	08 c0       	rjmp	.+16     	; 0xc62 <TWIMWriteRead+0xb0>
     c52:	00 00       	nop
     c54:	80 91 7d 20 	lds	r24, 0x207D	; 0x80207d <Twim_status>
     c58:	88 23       	and	r24, r24
     c5a:	c9 f7       	brne	.-14     	; 0xc4e <TWIMWriteRead+0x9c>
     c5c:	02 c0       	rjmp	.+4      	; 0xc62 <TWIMWriteRead+0xb0>
     c5e:	80 e0       	ldi	r24, 0x00	; 0
     c60:	00 c0       	rjmp	.+0      	; 0xc62 <TWIMWriteRead+0xb0>
     c62:	29 96       	adiw	r28, 0x09	; 9
     c64:	cd bf       	out	0x3d, r28	; 61
     c66:	de bf       	out	0x3e, r29	; 62
     c68:	df 91       	pop	r29
     c6a:	cf 91       	pop	r28
     c6c:	0f 91       	pop	r16
     c6e:	08 95       	ret

00000c70 <TWIMArbitrationLostBusErrorHandler>:
     c70:	cf 93       	push	r28
     c72:	df 93       	push	r29
     c74:	1f 92       	push	r1
     c76:	cd b7       	in	r28, 0x3d	; 61
     c78:	de b7       	in	r29, 0x3e	; 62
     c7a:	80 ea       	ldi	r24, 0xA0	; 160
     c7c:	94 e0       	ldi	r25, 0x04	; 4
     c7e:	fc 01       	movw	r30, r24
     c80:	84 81       	ldd	r24, Z+4	; 0x04
     c82:	89 83       	std	Y+1, r24	; 0x01
     c84:	89 81       	ldd	r24, Y+1	; 0x01
     c86:	88 2f       	mov	r24, r24
     c88:	90 e0       	ldi	r25, 0x00	; 0
     c8a:	84 70       	andi	r24, 0x04	; 4
     c8c:	99 27       	eor	r25, r25
     c8e:	89 2b       	or	r24, r25
     c90:	21 f0       	breq	.+8      	; 0xc9a <TWIMArbitrationLostBusErrorHandler+0x2a>
     c92:	84 e0       	ldi	r24, 0x04	; 4
     c94:	80 93 7e 20 	sts	0x207E, r24	; 0x80207e <Twim_result>
     c98:	03 c0       	rjmp	.+6      	; 0xca0 <TWIMArbitrationLostBusErrorHandler+0x30>
     c9a:	83 e0       	ldi	r24, 0x03	; 3
     c9c:	80 93 7e 20 	sts	0x207E, r24	; 0x80207e <Twim_result>
     ca0:	80 ea       	ldi	r24, 0xA0	; 160
     ca2:	94 e0       	ldi	r25, 0x04	; 4
     ca4:	29 81       	ldd	r18, Y+1	; 0x01
     ca6:	28 60       	ori	r18, 0x08	; 8
     ca8:	fc 01       	movw	r30, r24
     caa:	24 83       	std	Z+4, r18	; 0x04
     cac:	10 92 7d 20 	sts	0x207D, r1	; 0x80207d <Twim_status>
     cb0:	00 00       	nop
     cb2:	0f 90       	pop	r0
     cb4:	df 91       	pop	r29
     cb6:	cf 91       	pop	r28
     cb8:	08 95       	ret

00000cba <TWIMWriteHandler>:
     cba:	cf 93       	push	r28
     cbc:	df 93       	push	r29
     cbe:	00 d0       	rcall	.+0      	; 0xcc0 <TWIMWriteHandler+0x6>
     cc0:	1f 92       	push	r1
     cc2:	cd b7       	in	r28, 0x3d	; 61
     cc4:	de b7       	in	r29, 0x3e	; 62
     cc6:	80 91 79 20 	lds	r24, 0x2079	; 0x802079 <Twim_bytesToWrite>
     cca:	89 83       	std	Y+1, r24	; 0x01
     ccc:	80 91 7a 20 	lds	r24, 0x207A	; 0x80207a <Twim_bytesToRead>
     cd0:	8a 83       	std	Y+2, r24	; 0x02
     cd2:	80 ea       	ldi	r24, 0xA0	; 160
     cd4:	94 e0       	ldi	r25, 0x04	; 4
     cd6:	fc 01       	movw	r30, r24
     cd8:	84 81       	ldd	r24, Z+4	; 0x04
     cda:	88 2f       	mov	r24, r24
     cdc:	90 e0       	ldi	r25, 0x00	; 0
     cde:	80 71       	andi	r24, 0x10	; 16
     ce0:	99 27       	eor	r25, r25
     ce2:	89 2b       	or	r24, r25
     ce4:	59 f0       	breq	.+22     	; 0xcfc <TWIMWriteHandler+0x42>
     ce6:	80 ea       	ldi	r24, 0xA0	; 160
     ce8:	94 e0       	ldi	r25, 0x04	; 4
     cea:	23 e0       	ldi	r18, 0x03	; 3
     cec:	fc 01       	movw	r30, r24
     cee:	23 83       	std	Z+3, r18	; 0x03
     cf0:	85 e0       	ldi	r24, 0x05	; 5
     cf2:	80 93 7e 20 	sts	0x207E, r24	; 0x80207e <Twim_result>
     cf6:	10 92 7d 20 	sts	0x207D, r1	; 0x80207d <Twim_status>
     cfa:	34 c0       	rjmp	.+104    	; 0xd64 <TWIMWriteHandler+0xaa>
     cfc:	90 91 7b 20 	lds	r25, 0x207B	; 0x80207b <Twim_bytesWritten>
     d00:	89 81       	ldd	r24, Y+1	; 0x01
     d02:	98 17       	cp	r25, r24
     d04:	c0 f4       	brcc	.+48     	; 0xd36 <TWIMWriteHandler+0x7c>
     d06:	20 91 75 20 	lds	r18, 0x2075	; 0x802075 <Twim_writeData>
     d0a:	30 91 76 20 	lds	r19, 0x2076	; 0x802076 <Twim_writeData+0x1>
     d0e:	80 91 7b 20 	lds	r24, 0x207B	; 0x80207b <Twim_bytesWritten>
     d12:	88 2f       	mov	r24, r24
     d14:	90 e0       	ldi	r25, 0x00	; 0
     d16:	82 0f       	add	r24, r18
     d18:	93 1f       	adc	r25, r19
     d1a:	fc 01       	movw	r30, r24
     d1c:	80 81       	ld	r24, Z
     d1e:	8b 83       	std	Y+3, r24	; 0x03
     d20:	80 ea       	ldi	r24, 0xA0	; 160
     d22:	94 e0       	ldi	r25, 0x04	; 4
     d24:	2b 81       	ldd	r18, Y+3	; 0x03
     d26:	fc 01       	movw	r30, r24
     d28:	27 83       	std	Z+7, r18	; 0x07
     d2a:	80 91 7b 20 	lds	r24, 0x207B	; 0x80207b <Twim_bytesWritten>
     d2e:	8f 5f       	subi	r24, 0xFF	; 255
     d30:	80 93 7b 20 	sts	0x207B, r24	; 0x80207b <Twim_bytesWritten>
     d34:	17 c0       	rjmp	.+46     	; 0xd64 <TWIMWriteHandler+0xaa>
     d36:	90 91 7c 20 	lds	r25, 0x207C	; 0x80207c <Twim_bytesRead>
     d3a:	8a 81       	ldd	r24, Y+2	; 0x02
     d3c:	98 17       	cp	r25, r24
     d3e:	50 f4       	brcc	.+20     	; 0xd54 <TWIMWriteHandler+0x9a>
     d40:	80 91 74 20 	lds	r24, 0x2074	; 0x802074 <__data_end>
     d44:	81 60       	ori	r24, 0x01	; 1
     d46:	8c 83       	std	Y+4, r24	; 0x04
     d48:	80 ea       	ldi	r24, 0xA0	; 160
     d4a:	94 e0       	ldi	r25, 0x04	; 4
     d4c:	2c 81       	ldd	r18, Y+4	; 0x04
     d4e:	fc 01       	movw	r30, r24
     d50:	26 83       	std	Z+6, r18	; 0x06
     d52:	08 c0       	rjmp	.+16     	; 0xd64 <TWIMWriteHandler+0xaa>
     d54:	80 ea       	ldi	r24, 0xA0	; 160
     d56:	94 e0       	ldi	r25, 0x04	; 4
     d58:	23 e0       	ldi	r18, 0x03	; 3
     d5a:	fc 01       	movw	r30, r24
     d5c:	23 83       	std	Z+3, r18	; 0x03
     d5e:	81 e0       	ldi	r24, 0x01	; 1
     d60:	0e 94 ff 06 	call	0xdfe	; 0xdfe <TWIMTransactionFinished>
     d64:	00 00       	nop
     d66:	24 96       	adiw	r28, 0x04	; 4
     d68:	cd bf       	out	0x3d, r28	; 61
     d6a:	de bf       	out	0x3e, r29	; 62
     d6c:	df 91       	pop	r29
     d6e:	cf 91       	pop	r28
     d70:	08 95       	ret

00000d72 <TWIMReadHandler>:
     d72:	cf 93       	push	r28
     d74:	df 93       	push	r29
     d76:	1f 92       	push	r1
     d78:	1f 92       	push	r1
     d7a:	cd b7       	in	r28, 0x3d	; 61
     d7c:	de b7       	in	r29, 0x3e	; 62
     d7e:	80 91 7c 20 	lds	r24, 0x207C	; 0x80207c <Twim_bytesRead>
     d82:	80 32       	cpi	r24, 0x20	; 32
     d84:	c0 f4       	brcc	.+48     	; 0xdb6 <TWIMReadHandler+0x44>
     d86:	80 ea       	ldi	r24, 0xA0	; 160
     d88:	94 e0       	ldi	r25, 0x04	; 4
     d8a:	fc 01       	movw	r30, r24
     d8c:	87 81       	ldd	r24, Z+7	; 0x07
     d8e:	89 83       	std	Y+1, r24	; 0x01
     d90:	20 91 77 20 	lds	r18, 0x2077	; 0x802077 <Twim_readData>
     d94:	30 91 78 20 	lds	r19, 0x2078	; 0x802078 <Twim_readData+0x1>
     d98:	80 91 7c 20 	lds	r24, 0x207C	; 0x80207c <Twim_bytesRead>
     d9c:	88 2f       	mov	r24, r24
     d9e:	90 e0       	ldi	r25, 0x00	; 0
     da0:	82 0f       	add	r24, r18
     da2:	93 1f       	adc	r25, r19
     da4:	29 81       	ldd	r18, Y+1	; 0x01
     da6:	fc 01       	movw	r30, r24
     da8:	20 83       	st	Z, r18
     daa:	80 91 7c 20 	lds	r24, 0x207C	; 0x80207c <Twim_bytesRead>
     dae:	8f 5f       	subi	r24, 0xFF	; 255
     db0:	80 93 7c 20 	sts	0x207C, r24	; 0x80207c <Twim_bytesRead>
     db4:	08 c0       	rjmp	.+16     	; 0xdc6 <TWIMReadHandler+0x54>
     db6:	80 ea       	ldi	r24, 0xA0	; 160
     db8:	94 e0       	ldi	r25, 0x04	; 4
     dba:	23 e0       	ldi	r18, 0x03	; 3
     dbc:	fc 01       	movw	r30, r24
     dbe:	23 83       	std	Z+3, r18	; 0x03
     dc0:	82 e0       	ldi	r24, 0x02	; 2
     dc2:	0e 94 ff 06 	call	0xdfe	; 0xdfe <TWIMTransactionFinished>
     dc6:	80 91 7a 20 	lds	r24, 0x207A	; 0x80207a <Twim_bytesToRead>
     dca:	8a 83       	std	Y+2, r24	; 0x02
     dcc:	90 91 7c 20 	lds	r25, 0x207C	; 0x80207c <Twim_bytesRead>
     dd0:	8a 81       	ldd	r24, Y+2	; 0x02
     dd2:	98 17       	cp	r25, r24
     dd4:	30 f4       	brcc	.+12     	; 0xde2 <TWIMReadHandler+0x70>
     dd6:	80 ea       	ldi	r24, 0xA0	; 160
     dd8:	94 e0       	ldi	r25, 0x04	; 4
     dda:	22 e0       	ldi	r18, 0x02	; 2
     ddc:	fc 01       	movw	r30, r24
     dde:	23 83       	std	Z+3, r18	; 0x03
     de0:	08 c0       	rjmp	.+16     	; 0xdf2 <TWIMReadHandler+0x80>
     de2:	80 ea       	ldi	r24, 0xA0	; 160
     de4:	94 e0       	ldi	r25, 0x04	; 4
     de6:	27 e0       	ldi	r18, 0x07	; 7
     de8:	fc 01       	movw	r30, r24
     dea:	23 83       	std	Z+3, r18	; 0x03
     dec:	81 e0       	ldi	r24, 0x01	; 1
     dee:	0e 94 ff 06 	call	0xdfe	; 0xdfe <TWIMTransactionFinished>
     df2:	00 00       	nop
     df4:	0f 90       	pop	r0
     df6:	0f 90       	pop	r0
     df8:	df 91       	pop	r29
     dfa:	cf 91       	pop	r28
     dfc:	08 95       	ret

00000dfe <TWIMTransactionFinished>:
     dfe:	cf 93       	push	r28
     e00:	df 93       	push	r29
     e02:	1f 92       	push	r1
     e04:	cd b7       	in	r28, 0x3d	; 61
     e06:	de b7       	in	r29, 0x3e	; 62
     e08:	89 83       	std	Y+1, r24	; 0x01
     e0a:	89 81       	ldd	r24, Y+1	; 0x01
     e0c:	80 93 7e 20 	sts	0x207E, r24	; 0x80207e <Twim_result>
     e10:	10 92 7d 20 	sts	0x207D, r1	; 0x80207d <Twim_status>
     e14:	00 00       	nop
     e16:	0f 90       	pop	r0
     e18:	df 91       	pop	r29
     e1a:	cf 91       	pop	r28
     e1c:	08 95       	ret

00000e1e <__vector_46>:
     e1e:	1f 92       	push	r1
     e20:	0f 92       	push	r0
     e22:	00 90 3f 00 	lds	r0, 0x003F	; 0x80003f <__TEXT_REGION_LENGTH__+0x70003f>
     e26:	0f 92       	push	r0
     e28:	11 24       	eor	r1, r1
     e2a:	00 90 3b 00 	lds	r0, 0x003B	; 0x80003b <__TEXT_REGION_LENGTH__+0x70003b>
     e2e:	0f 92       	push	r0
     e30:	2f 93       	push	r18
     e32:	3f 93       	push	r19
     e34:	4f 93       	push	r20
     e36:	5f 93       	push	r21
     e38:	6f 93       	push	r22
     e3a:	7f 93       	push	r23
     e3c:	8f 93       	push	r24
     e3e:	9f 93       	push	r25
     e40:	af 93       	push	r26
     e42:	bf 93       	push	r27
     e44:	ef 93       	push	r30
     e46:	ff 93       	push	r31
     e48:	cf 93       	push	r28
     e4a:	df 93       	push	r29
     e4c:	1f 92       	push	r1
     e4e:	cd b7       	in	r28, 0x3d	; 61
     e50:	de b7       	in	r29, 0x3e	; 62
     e52:	80 ea       	ldi	r24, 0xA0	; 160
     e54:	94 e0       	ldi	r25, 0x04	; 4
     e56:	fc 01       	movw	r30, r24
     e58:	84 81       	ldd	r24, Z+4	; 0x04
     e5a:	89 83       	std	Y+1, r24	; 0x01
     e5c:	89 81       	ldd	r24, Y+1	; 0x01
     e5e:	88 2f       	mov	r24, r24
     e60:	90 e0       	ldi	r25, 0x00	; 0
     e62:	88 70       	andi	r24, 0x08	; 8
     e64:	99 27       	eor	r25, r25
     e66:	89 2b       	or	r24, r25
     e68:	39 f4       	brne	.+14     	; 0xe78 <__vector_46+0x5a>
     e6a:	89 81       	ldd	r24, Y+1	; 0x01
     e6c:	88 2f       	mov	r24, r24
     e6e:	90 e0       	ldi	r25, 0x00	; 0
     e70:	84 70       	andi	r24, 0x04	; 4
     e72:	99 27       	eor	r25, r25
     e74:	89 2b       	or	r24, r25
     e76:	19 f0       	breq	.+6      	; 0xe7e <__vector_46+0x60>
     e78:	0e 94 38 06 	call	0xc70	; 0xc70 <TWIMArbitrationLostBusErrorHandler>
     e7c:	13 c0       	rjmp	.+38     	; 0xea4 <__vector_46+0x86>
     e7e:	89 81       	ldd	r24, Y+1	; 0x01
     e80:	88 2f       	mov	r24, r24
     e82:	90 e0       	ldi	r25, 0x00	; 0
     e84:	80 74       	andi	r24, 0x40	; 64
     e86:	99 27       	eor	r25, r25
     e88:	89 2b       	or	r24, r25
     e8a:	19 f0       	breq	.+6      	; 0xe92 <__vector_46+0x74>
     e8c:	0e 94 5d 06 	call	0xcba	; 0xcba <TWIMWriteHandler>
     e90:	09 c0       	rjmp	.+18     	; 0xea4 <__vector_46+0x86>
     e92:	89 81       	ldd	r24, Y+1	; 0x01
     e94:	88 23       	and	r24, r24
     e96:	1c f4       	brge	.+6      	; 0xe9e <__vector_46+0x80>
     e98:	0e 94 b9 06 	call	0xd72	; 0xd72 <TWIMReadHandler>
     e9c:	03 c0       	rjmp	.+6      	; 0xea4 <__vector_46+0x86>
     e9e:	86 e0       	ldi	r24, 0x06	; 6
     ea0:	0e 94 ff 06 	call	0xdfe	; 0xdfe <TWIMTransactionFinished>
     ea4:	80 91 7d 20 	lds	r24, 0x207D	; 0x80207d <Twim_status>
     ea8:	00 00       	nop
     eaa:	0f 90       	pop	r0
     eac:	df 91       	pop	r29
     eae:	cf 91       	pop	r28
     eb0:	ff 91       	pop	r31
     eb2:	ef 91       	pop	r30
     eb4:	bf 91       	pop	r27
     eb6:	af 91       	pop	r26
     eb8:	9f 91       	pop	r25
     eba:	8f 91       	pop	r24
     ebc:	7f 91       	pop	r23
     ebe:	6f 91       	pop	r22
     ec0:	5f 91       	pop	r21
     ec2:	4f 91       	pop	r20
     ec4:	3f 91       	pop	r19
     ec6:	2f 91       	pop	r18
     ec8:	0f 90       	pop	r0
     eca:	00 92 3b 00 	sts	0x003B, r0	; 0x80003b <__TEXT_REGION_LENGTH__+0x70003b>
     ece:	0f 90       	pop	r0
     ed0:	00 92 3f 00 	sts	0x003F, r0	; 0x80003f <__TEXT_REGION_LENGTH__+0x70003f>
     ed4:	0f 90       	pop	r0
     ed6:	1f 90       	pop	r1
     ed8:	18 95       	reti

00000eda <DriverUSARTInit>:
     eda:	cf 93       	push	r28
     edc:	df 93       	push	r29
     ede:	cd b7       	in	r28, 0x3d	; 61
     ee0:	de b7       	in	r29, 0x3e	; 62
     ee2:	80 e8       	ldi	r24, 0x80	; 128
     ee4:	96 e0       	ldi	r25, 0x06	; 6
     ee6:	28 e0       	ldi	r18, 0x08	; 8
     ee8:	fc 01       	movw	r30, r24
     eea:	21 83       	std	Z+1, r18	; 0x01
     eec:	80 e8       	ldi	r24, 0x80	; 128
     eee:	96 e0       	ldi	r25, 0x06	; 6
     ef0:	24 e0       	ldi	r18, 0x04	; 4
     ef2:	fc 01       	movw	r30, r24
     ef4:	22 83       	std	Z+2, r18	; 0x02
     ef6:	80 ea       	ldi	r24, 0xA0	; 160
     ef8:	9a e0       	ldi	r25, 0x0A	; 10
     efa:	fc 01       	movw	r30, r24
     efc:	13 82       	std	Z+3, r1	; 0x03
     efe:	80 ea       	ldi	r24, 0xA0	; 160
     f00:	9a e0       	ldi	r25, 0x0A	; 10
     f02:	28 e1       	ldi	r18, 0x18	; 24
     f04:	fc 01       	movw	r30, r24
     f06:	24 83       	std	Z+4, r18	; 0x04
     f08:	80 ea       	ldi	r24, 0xA0	; 160
     f0a:	9a e0       	ldi	r25, 0x0A	; 10
     f0c:	23 e0       	ldi	r18, 0x03	; 3
     f0e:	fc 01       	movw	r30, r24
     f10:	25 83       	std	Z+5, r18	; 0x05
     f12:	80 ea       	ldi	r24, 0xA0	; 160
     f14:	9a e0       	ldi	r25, 0x0A	; 10
     f16:	25 ee       	ldi	r18, 0xE5	; 229
     f18:	fc 01       	movw	r30, r24
     f1a:	26 83       	std	Z+6, r18	; 0x06
     f1c:	80 ea       	ldi	r24, 0xA0	; 160
     f1e:	9a e0       	ldi	r25, 0x0A	; 10
     f20:	2c eb       	ldi	r18, 0xBC	; 188
     f22:	fc 01       	movw	r30, r24
     f24:	27 83       	std	Z+7, r18	; 0x07
     f26:	80 e0       	ldi	r24, 0x00	; 0
     f28:	90 e2       	ldi	r25, 0x20	; 32
     f2a:	80 93 85 20 	sts	0x2085, r24	; 0x802085 <__iob+0x2>
     f2e:	90 93 86 20 	sts	0x2086, r25	; 0x802086 <__iob+0x3>
     f32:	80 e0       	ldi	r24, 0x00	; 0
     f34:	90 e2       	ldi	r25, 0x20	; 32
     f36:	80 93 83 20 	sts	0x2083, r24	; 0x802083 <__iob>
     f3a:	90 93 84 20 	sts	0x2084, r25	; 0x802084 <__iob+0x1>
     f3e:	00 00       	nop
     f40:	df 91       	pop	r29
     f42:	cf 91       	pop	r28
     f44:	08 95       	ret

00000f46 <stdio_putchar>:
     f46:	cf 93       	push	r28
     f48:	df 93       	push	r29
     f4a:	00 d0       	rcall	.+0      	; 0xf4c <stdio_putchar+0x6>
     f4c:	cd b7       	in	r28, 0x3d	; 61
     f4e:	de b7       	in	r29, 0x3e	; 62
     f50:	89 83       	std	Y+1, r24	; 0x01
     f52:	6a 83       	std	Y+2, r22	; 0x02
     f54:	7b 83       	std	Y+3, r23	; 0x03
     f56:	80 ea       	ldi	r24, 0xA0	; 160
     f58:	9a e0       	ldi	r25, 0x0A	; 10
     f5a:	29 81       	ldd	r18, Y+1	; 0x01
     f5c:	fc 01       	movw	r30, r24
     f5e:	20 83       	st	Z, r18
     f60:	00 00       	nop
     f62:	80 ea       	ldi	r24, 0xA0	; 160
     f64:	9a e0       	ldi	r25, 0x0A	; 10
     f66:	fc 01       	movw	r30, r24
     f68:	81 81       	ldd	r24, Z+1	; 0x01
     f6a:	88 2f       	mov	r24, r24
     f6c:	90 e0       	ldi	r25, 0x00	; 0
     f6e:	80 74       	andi	r24, 0x40	; 64
     f70:	99 27       	eor	r25, r25
     f72:	89 2b       	or	r24, r25
     f74:	b1 f3       	breq	.-20     	; 0xf62 <stdio_putchar+0x1c>
     f76:	80 ea       	ldi	r24, 0xA0	; 160
     f78:	9a e0       	ldi	r25, 0x0A	; 10
     f7a:	20 e4       	ldi	r18, 0x40	; 64
     f7c:	fc 01       	movw	r30, r24
     f7e:	21 83       	std	Z+1, r18	; 0x01
     f80:	80 e0       	ldi	r24, 0x00	; 0
     f82:	90 e0       	ldi	r25, 0x00	; 0
     f84:	23 96       	adiw	r28, 0x03	; 3
     f86:	cd bf       	out	0x3d, r28	; 61
     f88:	de bf       	out	0x3e, r29	; 62
     f8a:	df 91       	pop	r29
     f8c:	cf 91       	pop	r28
     f8e:	08 95       	ret

00000f90 <stdio_getchar>:
     f90:	cf 93       	push	r28
     f92:	df 93       	push	r29
     f94:	1f 92       	push	r1
     f96:	1f 92       	push	r1
     f98:	cd b7       	in	r28, 0x3d	; 61
     f9a:	de b7       	in	r29, 0x3e	; 62
     f9c:	89 83       	std	Y+1, r24	; 0x01
     f9e:	9a 83       	std	Y+2, r25	; 0x02
     fa0:	00 00       	nop
     fa2:	80 ea       	ldi	r24, 0xA0	; 160
     fa4:	9a e0       	ldi	r25, 0x0A	; 10
     fa6:	fc 01       	movw	r30, r24
     fa8:	81 81       	ldd	r24, Z+1	; 0x01
     faa:	88 23       	and	r24, r24
     fac:	d4 f7       	brge	.-12     	; 0xfa2 <stdio_getchar+0x12>
     fae:	80 ea       	ldi	r24, 0xA0	; 160
     fb0:	9a e0       	ldi	r25, 0x0A	; 10
     fb2:	fc 01       	movw	r30, r24
     fb4:	80 81       	ld	r24, Z
     fb6:	88 2f       	mov	r24, r24
     fb8:	90 e0       	ldi	r25, 0x00	; 0
     fba:	0f 90       	pop	r0
     fbc:	0f 90       	pop	r0
     fbe:	df 91       	pop	r29
     fc0:	cf 91       	pop	r28
     fc2:	08 95       	ret

00000fc4 <main>:

char text[10];
char a = 0b111;

int main(void)
{
     fc4:	cf 93       	push	r28
     fc6:	df 93       	push	r29
     fc8:	cd b7       	in	r28, 0x3d	; 61
     fca:	de b7       	in	r29, 0x3e	; 62
     fcc:	6e 97       	sbiw	r28, 0x1e	; 30
     fce:	cd bf       	out	0x3d, r28	; 61
     fd0:	de bf       	out	0x3e, r29	; 62
	//###1###
	
	//Initialize drivers
	DriverSysClkXtalInit();					//Clock init
     fd2:	0e 94 7c 05 	call	0xaf8	; 0xaf8 <DriverSysClkXtalInit>
	DriverUSARTInit();						//USART init and link to stdio
     fd6:	0e 94 6d 07 	call	0xeda	; 0xeda <DriverUSARTInit>
	printf("Initialising Drivers\n\r");		//(Check if terminal is working)
     fda:	83 e4       	ldi	r24, 0x43	; 67
     fdc:	90 e2       	ldi	r25, 0x20	; 32
     fde:	89 2f       	mov	r24, r25
     fe0:	8f 93       	push	r24
     fe2:	83 e4       	ldi	r24, 0x43	; 67
     fe4:	90 e2       	ldi	r25, 0x20	; 32
     fe6:	8f 93       	push	r24
     fe8:	0e 94 db 0e 	call	0x1db6	; 0x1db6 <printf>
     fec:	0f 90       	pop	r0
     fee:	0f 90       	pop	r0
	DriverTWIMInit();						//Initialize TWI in master mode
     ff0:	0e 94 97 05 	call	0xb2e	; 0xb2e <DriverTWIMInit>
	DriverLedInit();						//Initialize LED's
     ff4:	0e 94 e1 02 	call	0x5c2	; 0x5c2 <DriverLedInit>
	DriverPowerInit();						//Initialize aux power driver
     ff8:	0e 94 03 0a 	call	0x1406	; 0x1406 <DriverPowerInit>
	DriverAdcInit();						//Initialize ADC driver
     ffc:	0e 94 a6 01 	call	0x34c	; 0x34c <DriverAdcInit>
	DriverMotorInit();						//Initialize motor driver
    1000:	0e 94 20 03 	call	0x640	; 0x640 <DriverMotorInit>
	InitInterrupts();						//Global interrupts and GPIO wake up
    1004:	0e 94 ad 02 	call	0x55a	; 0x55a <InitInterrupts>
	DriverPowerVccAuxSet(0);				//Enable Auxillary power line
    1008:	80 e0       	ldi	r24, 0x00	; 0
    100a:	0e 94 07 0a 	call	0x140e	; 0x140e <DriverPowerVccAuxSet>
	DriverAdps9960Init();					//Photo sensor
    100e:	0e 94 ae 01 	call	0x35c	; 0x35c <DriverAdps9960Init>

	
	//Enable sleep
	set_sleep_mode(SLEEP_MODE_PWR_DOWN);
    1012:	88 e4       	ldi	r24, 0x48	; 72
    1014:	90 e0       	ldi	r25, 0x00	; 0
    1016:	28 e4       	ldi	r18, 0x48	; 72
    1018:	30 e0       	ldi	r19, 0x00	; 0
    101a:	f9 01       	movw	r30, r18
    101c:	20 81       	ld	r18, Z
    101e:	21 7f       	andi	r18, 0xF1	; 241
    1020:	24 60       	ori	r18, 0x04	; 4
    1022:	fc 01       	movw	r30, r24
    1024:	20 83       	st	Z, r18
	sleep_enable();
    1026:	88 e4       	ldi	r24, 0x48	; 72
    1028:	90 e0       	ldi	r25, 0x00	; 0
    102a:	28 e4       	ldi	r18, 0x48	; 72
    102c:	30 e0       	ldi	r19, 0x00	; 0
    102e:	f9 01       	movw	r30, r18
    1030:	20 81       	ld	r18, Z
    1032:	21 60       	ori	r18, 0x01	; 1
    1034:	fc 01       	movw	r30, r24
    1036:	20 83       	st	Z, r18
	
	//DriverMotorSet(1500,1500);
	
	uint16_t clear, red, green, blue;
	uint16_t *cptr = &clear;
    1038:	ce 01       	movw	r24, r28
    103a:	47 96       	adiw	r24, 0x17	; 23
    103c:	89 83       	std	Y+1, r24	; 0x01
    103e:	9a 83       	std	Y+2, r25	; 0x02
	uint16_t *rptr = &red;
    1040:	ce 01       	movw	r24, r28
    1042:	49 96       	adiw	r24, 0x19	; 25
    1044:	8b 83       	std	Y+3, r24	; 0x03
    1046:	9c 83       	std	Y+4, r25	; 0x04
	uint16_t *gptr = &green;
    1048:	ce 01       	movw	r24, r28
    104a:	4b 96       	adiw	r24, 0x1b	; 27
    104c:	8d 83       	std	Y+5, r24	; 0x05
    104e:	9e 83       	std	Y+6, r25	; 0x06
	uint16_t *bptr = &blue;
    1050:	ce 01       	movw	r24, r28
    1052:	4d 96       	adiw	r24, 0x1d	; 29
    1054:	8f 83       	std	Y+7, r24	; 0x07
    1056:	98 87       	std	Y+8, r25	; 0x08
	
	DriverLedWrite(a); // White LEDs --> ON
    1058:	80 91 0e 20 	lds	r24, 0x200E	; 0x80200e <a>
    105c:	0e 94 07 03 	call	0x60e	; 0x60e <DriverLedWrite>
	a=1;
    1060:	81 e0       	ldi	r24, 0x01	; 1
    1062:	80 93 0e 20 	sts	0x200E, r24	; 0x80200e <a>
	while(1)
	{
		a = a<<1;
    1066:	80 91 0e 20 	lds	r24, 0x200E	; 0x80200e <a>
    106a:	88 0f       	add	r24, r24
    106c:	80 93 0e 20 	sts	0x200E, r24	; 0x80200e <a>
		if (!(a&0x0F))
    1070:	80 91 0e 20 	lds	r24, 0x200E	; 0x80200e <a>
    1074:	88 2f       	mov	r24, r24
    1076:	90 e0       	ldi	r25, 0x00	; 0
    1078:	8f 70       	andi	r24, 0x0F	; 15
    107a:	99 27       	eor	r25, r25
    107c:	89 2b       	or	r24, r25
    107e:	49 f4       	brne	.+18     	; 0x1092 <main+0xce>
		{
			DriverMotorSet(0,0);
    1080:	60 e0       	ldi	r22, 0x00	; 0
    1082:	70 e0       	ldi	r23, 0x00	; 0
    1084:	80 e0       	ldi	r24, 0x00	; 0
    1086:	90 e0       	ldi	r25, 0x00	; 0
    1088:	0e 94 8a 03 	call	0x714	; 0x714 <DriverMotorSet>
			a = 0b01;
    108c:	81 e0       	ldi	r24, 0x01	; 1
    108e:	80 93 0e 20 	sts	0x200E, r24	; 0x80200e <a>
		}
		DriverAdps9960Get(cptr, rptr, gptr, bptr);
    1092:	2f 81       	ldd	r18, Y+7	; 0x07
    1094:	38 85       	ldd	r19, Y+8	; 0x08
    1096:	4d 81       	ldd	r20, Y+5	; 0x05
    1098:	5e 81       	ldd	r21, Y+6	; 0x06
    109a:	6b 81       	ldd	r22, Y+3	; 0x03
    109c:	7c 81       	ldd	r23, Y+4	; 0x04
    109e:	89 81       	ldd	r24, Y+1	; 0x01
    10a0:	9a 81       	ldd	r25, Y+2	; 0x02
    10a2:	0e 94 17 02 	call	0x42e	; 0x42e <DriverAdps9960Get>
    10a6:	80 e0       	ldi	r24, 0x00	; 0
    10a8:	90 e0       	ldi	r25, 0x00	; 0
    10aa:	aa e7       	ldi	r26, 0x7A	; 122
    10ac:	b4 e4       	ldi	r27, 0x44	; 68
    10ae:	89 87       	std	Y+9, r24	; 0x09
    10b0:	9a 87       	std	Y+10, r25	; 0x0a
    10b2:	ab 87       	std	Y+11, r26	; 0x0b
    10b4:	bc 87       	std	Y+12, r27	; 0x0c

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    10b6:	20 e0       	ldi	r18, 0x00	; 0
    10b8:	30 e0       	ldi	r19, 0x00	; 0
    10ba:	4a ef       	ldi	r20, 0xFA	; 250
    10bc:	55 e4       	ldi	r21, 0x45	; 69
    10be:	69 85       	ldd	r22, Y+9	; 0x09
    10c0:	7a 85       	ldd	r23, Y+10	; 0x0a
    10c2:	8b 85       	ldd	r24, Y+11	; 0x0b
    10c4:	9c 85       	ldd	r25, Y+12	; 0x0c
    10c6:	0e 94 6e 09 	call	0x12dc	; 0x12dc <__mulsf3>
    10ca:	dc 01       	movw	r26, r24
    10cc:	cb 01       	movw	r24, r22
    10ce:	8d 87       	std	Y+13, r24	; 0x0d
    10d0:	9e 87       	std	Y+14, r25	; 0x0e
    10d2:	af 87       	std	Y+15, r26	; 0x0f
    10d4:	b8 8b       	std	Y+16, r27	; 0x10
	if (__tmp < 1.0)
    10d6:	20 e0       	ldi	r18, 0x00	; 0
    10d8:	30 e0       	ldi	r19, 0x00	; 0
    10da:	40 e8       	ldi	r20, 0x80	; 128
    10dc:	5f e3       	ldi	r21, 0x3F	; 63
    10de:	6d 85       	ldd	r22, Y+13	; 0x0d
    10e0:	7e 85       	ldd	r23, Y+14	; 0x0e
    10e2:	8f 85       	ldd	r24, Y+15	; 0x0f
    10e4:	98 89       	ldd	r25, Y+16	; 0x10
    10e6:	0e 94 e8 08 	call	0x11d0	; 0x11d0 <__cmpsf2>
    10ea:	88 23       	and	r24, r24
    10ec:	2c f4       	brge	.+10     	; 0x10f8 <main+0x134>
		__ticks = 1;
    10ee:	81 e0       	ldi	r24, 0x01	; 1
    10f0:	90 e0       	ldi	r25, 0x00	; 0
    10f2:	89 8b       	std	Y+17, r24	; 0x11
    10f4:	9a 8b       	std	Y+18, r25	; 0x12
    10f6:	3f c0       	rjmp	.+126    	; 0x1176 <main+0x1b2>
	else if (__tmp > 65535)
    10f8:	20 e0       	ldi	r18, 0x00	; 0
    10fa:	3f ef       	ldi	r19, 0xFF	; 255
    10fc:	4f e7       	ldi	r20, 0x7F	; 127
    10fe:	57 e4       	ldi	r21, 0x47	; 71
    1100:	6d 85       	ldd	r22, Y+13	; 0x0d
    1102:	7e 85       	ldd	r23, Y+14	; 0x0e
    1104:	8f 85       	ldd	r24, Y+15	; 0x0f
    1106:	98 89       	ldd	r25, Y+16	; 0x10
    1108:	0e 94 69 09 	call	0x12d2	; 0x12d2 <__gesf2>
    110c:	18 16       	cp	r1, r24
    110e:	4c f5       	brge	.+82     	; 0x1162 <main+0x19e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1110:	20 e0       	ldi	r18, 0x00	; 0
    1112:	30 e0       	ldi	r19, 0x00	; 0
    1114:	40 e2       	ldi	r20, 0x20	; 32
    1116:	51 e4       	ldi	r21, 0x41	; 65
    1118:	69 85       	ldd	r22, Y+9	; 0x09
    111a:	7a 85       	ldd	r23, Y+10	; 0x0a
    111c:	8b 85       	ldd	r24, Y+11	; 0x0b
    111e:	9c 85       	ldd	r25, Y+12	; 0x0c
    1120:	0e 94 6e 09 	call	0x12dc	; 0x12dc <__mulsf3>
    1124:	dc 01       	movw	r26, r24
    1126:	cb 01       	movw	r24, r22
    1128:	bc 01       	movw	r22, r24
    112a:	cd 01       	movw	r24, r26
    112c:	0e 94 ed 08 	call	0x11da	; 0x11da <__fixunssfsi>
    1130:	dc 01       	movw	r26, r24
    1132:	cb 01       	movw	r24, r22
    1134:	89 8b       	std	Y+17, r24	; 0x11
    1136:	9a 8b       	std	Y+18, r25	; 0x12
    1138:	0f c0       	rjmp	.+30     	; 0x1158 <main+0x194>
    113a:	80 e2       	ldi	r24, 0x20	; 32
    113c:	93 e0       	ldi	r25, 0x03	; 3
    113e:	8b 8b       	std	Y+19, r24	; 0x13
    1140:	9c 8b       	std	Y+20, r25	; 0x14
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    1142:	8b 89       	ldd	r24, Y+19	; 0x13
    1144:	9c 89       	ldd	r25, Y+20	; 0x14
    1146:	01 97       	sbiw	r24, 0x01	; 1
    1148:	f1 f7       	brne	.-4      	; 0x1146 <main+0x182>
    114a:	8b 8b       	std	Y+19, r24	; 0x13
    114c:	9c 8b       	std	Y+20, r25	; 0x14
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    114e:	89 89       	ldd	r24, Y+17	; 0x11
    1150:	9a 89       	ldd	r25, Y+18	; 0x12
    1152:	01 97       	sbiw	r24, 0x01	; 1
    1154:	89 8b       	std	Y+17, r24	; 0x11
    1156:	9a 8b       	std	Y+18, r25	; 0x12
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1158:	89 89       	ldd	r24, Y+17	; 0x11
    115a:	9a 89       	ldd	r25, Y+18	; 0x12
    115c:	89 2b       	or	r24, r25
    115e:	69 f7       	brne	.-38     	; 0x113a <main+0x176>
    1160:	14 c0       	rjmp	.+40     	; 0x118a <main+0x1c6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1162:	6d 85       	ldd	r22, Y+13	; 0x0d
    1164:	7e 85       	ldd	r23, Y+14	; 0x0e
    1166:	8f 85       	ldd	r24, Y+15	; 0x0f
    1168:	98 89       	ldd	r25, Y+16	; 0x10
    116a:	0e 94 ed 08 	call	0x11da	; 0x11da <__fixunssfsi>
    116e:	dc 01       	movw	r26, r24
    1170:	cb 01       	movw	r24, r22
    1172:	89 8b       	std	Y+17, r24	; 0x11
    1174:	9a 8b       	std	Y+18, r25	; 0x12
    1176:	89 89       	ldd	r24, Y+17	; 0x11
    1178:	9a 89       	ldd	r25, Y+18	; 0x12
    117a:	8d 8b       	std	Y+21, r24	; 0x15
    117c:	9e 8b       	std	Y+22, r25	; 0x16
    117e:	8d 89       	ldd	r24, Y+21	; 0x15
    1180:	9e 89       	ldd	r25, Y+22	; 0x16
    1182:	01 97       	sbiw	r24, 0x01	; 1
    1184:	f1 f7       	brne	.-4      	; 0x1182 <main+0x1be>
    1186:	8d 8b       	std	Y+21, r24	; 0x15
    1188:	9e 8b       	std	Y+22, r25	; 0x16
		_delay_ms(1000);
		printf ("C:%d\t R:%d\t G:%d\t B:%d\t\n\r", clear, red, green, blue);
    118a:	6d 8d       	ldd	r22, Y+29	; 0x1d
    118c:	7e 8d       	ldd	r23, Y+30	; 0x1e
    118e:	4b 8d       	ldd	r20, Y+27	; 0x1b
    1190:	5c 8d       	ldd	r21, Y+28	; 0x1c
    1192:	29 8d       	ldd	r18, Y+25	; 0x19
    1194:	3a 8d       	ldd	r19, Y+26	; 0x1a
    1196:	8f 89       	ldd	r24, Y+23	; 0x17
    1198:	98 8d       	ldd	r25, Y+24	; 0x18
    119a:	e7 2f       	mov	r30, r23
    119c:	ef 93       	push	r30
    119e:	6f 93       	push	r22
    11a0:	65 2f       	mov	r22, r21
    11a2:	6f 93       	push	r22
    11a4:	4f 93       	push	r20
    11a6:	43 2f       	mov	r20, r19
    11a8:	4f 93       	push	r20
    11aa:	2f 93       	push	r18
    11ac:	29 2f       	mov	r18, r25
    11ae:	2f 93       	push	r18
    11b0:	8f 93       	push	r24
    11b2:	8a e5       	ldi	r24, 0x5A	; 90
    11b4:	90 e2       	ldi	r25, 0x20	; 32
    11b6:	89 2f       	mov	r24, r25
    11b8:	8f 93       	push	r24
    11ba:	8a e5       	ldi	r24, 0x5A	; 90
    11bc:	90 e2       	ldi	r25, 0x20	; 32
    11be:	8f 93       	push	r24
    11c0:	0e 94 db 0e 	call	0x1db6	; 0x1db6 <printf>
    11c4:	8d b7       	in	r24, 0x3d	; 61
    11c6:	9e b7       	in	r25, 0x3e	; 62
    11c8:	0a 96       	adiw	r24, 0x0a	; 10
    11ca:	cd bf       	out	0x3d, r28	; 61
    11cc:	de bf       	out	0x3e, r29	; 62
	}
    11ce:	4b cf       	rjmp	.-362    	; 0x1066 <main+0xa2>

000011d0 <__cmpsf2>:
    11d0:	0e 94 1c 09 	call	0x1238	; 0x1238 <__fp_cmp>
    11d4:	08 f4       	brcc	.+2      	; 0x11d8 <__cmpsf2+0x8>
    11d6:	81 e0       	ldi	r24, 0x01	; 1
    11d8:	08 95       	ret

000011da <__fixunssfsi>:
    11da:	0e 94 48 09 	call	0x1290	; 0x1290 <__fp_splitA>
    11de:	88 f0       	brcs	.+34     	; 0x1202 <__fixunssfsi+0x28>
    11e0:	9f 57       	subi	r25, 0x7F	; 127
    11e2:	98 f0       	brcs	.+38     	; 0x120a <__fixunssfsi+0x30>
    11e4:	b9 2f       	mov	r27, r25
    11e6:	99 27       	eor	r25, r25
    11e8:	b7 51       	subi	r27, 0x17	; 23
    11ea:	b0 f0       	brcs	.+44     	; 0x1218 <__fixunssfsi+0x3e>
    11ec:	e1 f0       	breq	.+56     	; 0x1226 <__fixunssfsi+0x4c>
    11ee:	66 0f       	add	r22, r22
    11f0:	77 1f       	adc	r23, r23
    11f2:	88 1f       	adc	r24, r24
    11f4:	99 1f       	adc	r25, r25
    11f6:	1a f0       	brmi	.+6      	; 0x11fe <__fixunssfsi+0x24>
    11f8:	ba 95       	dec	r27
    11fa:	c9 f7       	brne	.-14     	; 0x11ee <__fixunssfsi+0x14>
    11fc:	14 c0       	rjmp	.+40     	; 0x1226 <__fixunssfsi+0x4c>
    11fe:	b1 30       	cpi	r27, 0x01	; 1
    1200:	91 f0       	breq	.+36     	; 0x1226 <__fixunssfsi+0x4c>
    1202:	0e 94 62 09 	call	0x12c4	; 0x12c4 <__fp_zero>
    1206:	b1 e0       	ldi	r27, 0x01	; 1
    1208:	08 95       	ret
    120a:	0c 94 62 09 	jmp	0x12c4	; 0x12c4 <__fp_zero>
    120e:	67 2f       	mov	r22, r23
    1210:	78 2f       	mov	r23, r24
    1212:	88 27       	eor	r24, r24
    1214:	b8 5f       	subi	r27, 0xF8	; 248
    1216:	39 f0       	breq	.+14     	; 0x1226 <__fixunssfsi+0x4c>
    1218:	b9 3f       	cpi	r27, 0xF9	; 249
    121a:	cc f3       	brlt	.-14     	; 0x120e <__fixunssfsi+0x34>
    121c:	86 95       	lsr	r24
    121e:	77 95       	ror	r23
    1220:	67 95       	ror	r22
    1222:	b3 95       	inc	r27
    1224:	d9 f7       	brne	.-10     	; 0x121c <__fixunssfsi+0x42>
    1226:	3e f4       	brtc	.+14     	; 0x1236 <__fixunssfsi+0x5c>
    1228:	90 95       	com	r25
    122a:	80 95       	com	r24
    122c:	70 95       	com	r23
    122e:	61 95       	neg	r22
    1230:	7f 4f       	sbci	r23, 0xFF	; 255
    1232:	8f 4f       	sbci	r24, 0xFF	; 255
    1234:	9f 4f       	sbci	r25, 0xFF	; 255
    1236:	08 95       	ret

00001238 <__fp_cmp>:
    1238:	99 0f       	add	r25, r25
    123a:	00 08       	sbc	r0, r0
    123c:	55 0f       	add	r21, r21
    123e:	aa 0b       	sbc	r26, r26
    1240:	e0 e8       	ldi	r30, 0x80	; 128
    1242:	fe ef       	ldi	r31, 0xFE	; 254
    1244:	16 16       	cp	r1, r22
    1246:	17 06       	cpc	r1, r23
    1248:	e8 07       	cpc	r30, r24
    124a:	f9 07       	cpc	r31, r25
    124c:	c0 f0       	brcs	.+48     	; 0x127e <__fp_cmp+0x46>
    124e:	12 16       	cp	r1, r18
    1250:	13 06       	cpc	r1, r19
    1252:	e4 07       	cpc	r30, r20
    1254:	f5 07       	cpc	r31, r21
    1256:	98 f0       	brcs	.+38     	; 0x127e <__fp_cmp+0x46>
    1258:	62 1b       	sub	r22, r18
    125a:	73 0b       	sbc	r23, r19
    125c:	84 0b       	sbc	r24, r20
    125e:	95 0b       	sbc	r25, r21
    1260:	39 f4       	brne	.+14     	; 0x1270 <__fp_cmp+0x38>
    1262:	0a 26       	eor	r0, r26
    1264:	61 f0       	breq	.+24     	; 0x127e <__fp_cmp+0x46>
    1266:	23 2b       	or	r18, r19
    1268:	24 2b       	or	r18, r20
    126a:	25 2b       	or	r18, r21
    126c:	21 f4       	brne	.+8      	; 0x1276 <__fp_cmp+0x3e>
    126e:	08 95       	ret
    1270:	0a 26       	eor	r0, r26
    1272:	09 f4       	brne	.+2      	; 0x1276 <__fp_cmp+0x3e>
    1274:	a1 40       	sbci	r26, 0x01	; 1
    1276:	a6 95       	lsr	r26
    1278:	8f ef       	ldi	r24, 0xFF	; 255
    127a:	81 1d       	adc	r24, r1
    127c:	81 1d       	adc	r24, r1
    127e:	08 95       	ret

00001280 <__fp_split3>:
    1280:	57 fd       	sbrc	r21, 7
    1282:	90 58       	subi	r25, 0x80	; 128
    1284:	44 0f       	add	r20, r20
    1286:	55 1f       	adc	r21, r21
    1288:	59 f0       	breq	.+22     	; 0x12a0 <__fp_splitA+0x10>
    128a:	5f 3f       	cpi	r21, 0xFF	; 255
    128c:	71 f0       	breq	.+28     	; 0x12aa <__fp_splitA+0x1a>
    128e:	47 95       	ror	r20

00001290 <__fp_splitA>:
    1290:	88 0f       	add	r24, r24
    1292:	97 fb       	bst	r25, 7
    1294:	99 1f       	adc	r25, r25
    1296:	61 f0       	breq	.+24     	; 0x12b0 <__fp_splitA+0x20>
    1298:	9f 3f       	cpi	r25, 0xFF	; 255
    129a:	79 f0       	breq	.+30     	; 0x12ba <__fp_splitA+0x2a>
    129c:	87 95       	ror	r24
    129e:	08 95       	ret
    12a0:	12 16       	cp	r1, r18
    12a2:	13 06       	cpc	r1, r19
    12a4:	14 06       	cpc	r1, r20
    12a6:	55 1f       	adc	r21, r21
    12a8:	f2 cf       	rjmp	.-28     	; 0x128e <__fp_split3+0xe>
    12aa:	46 95       	lsr	r20
    12ac:	f1 df       	rcall	.-30     	; 0x1290 <__fp_splitA>
    12ae:	08 c0       	rjmp	.+16     	; 0x12c0 <__fp_splitA+0x30>
    12b0:	16 16       	cp	r1, r22
    12b2:	17 06       	cpc	r1, r23
    12b4:	18 06       	cpc	r1, r24
    12b6:	99 1f       	adc	r25, r25
    12b8:	f1 cf       	rjmp	.-30     	; 0x129c <__fp_splitA+0xc>
    12ba:	86 95       	lsr	r24
    12bc:	71 05       	cpc	r23, r1
    12be:	61 05       	cpc	r22, r1
    12c0:	08 94       	sec
    12c2:	08 95       	ret

000012c4 <__fp_zero>:
    12c4:	e8 94       	clt

000012c6 <__fp_szero>:
    12c6:	bb 27       	eor	r27, r27
    12c8:	66 27       	eor	r22, r22
    12ca:	77 27       	eor	r23, r23
    12cc:	cb 01       	movw	r24, r22
    12ce:	97 f9       	bld	r25, 7
    12d0:	08 95       	ret

000012d2 <__gesf2>:
    12d2:	0e 94 1c 09 	call	0x1238	; 0x1238 <__fp_cmp>
    12d6:	08 f4       	brcc	.+2      	; 0x12da <__gesf2+0x8>
    12d8:	8f ef       	ldi	r24, 0xFF	; 255
    12da:	08 95       	ret

000012dc <__mulsf3>:
    12dc:	0e 94 81 09 	call	0x1302	; 0x1302 <__mulsf3x>
    12e0:	0c 94 f2 09 	jmp	0x13e4	; 0x13e4 <__fp_round>
    12e4:	0e 94 e4 09 	call	0x13c8	; 0x13c8 <__fp_pscA>
    12e8:	38 f0       	brcs	.+14     	; 0x12f8 <__mulsf3+0x1c>
    12ea:	0e 94 eb 09 	call	0x13d6	; 0x13d6 <__fp_pscB>
    12ee:	20 f0       	brcs	.+8      	; 0x12f8 <__mulsf3+0x1c>
    12f0:	95 23       	and	r25, r21
    12f2:	11 f0       	breq	.+4      	; 0x12f8 <__mulsf3+0x1c>
    12f4:	0c 94 db 09 	jmp	0x13b6	; 0x13b6 <__fp_inf>
    12f8:	0c 94 e1 09 	jmp	0x13c2	; 0x13c2 <__fp_nan>
    12fc:	11 24       	eor	r1, r1
    12fe:	0c 94 63 09 	jmp	0x12c6	; 0x12c6 <__fp_szero>

00001302 <__mulsf3x>:
    1302:	0e 94 40 09 	call	0x1280	; 0x1280 <__fp_split3>
    1306:	70 f3       	brcs	.-36     	; 0x12e4 <__mulsf3+0x8>

00001308 <__mulsf3_pse>:
    1308:	95 9f       	mul	r25, r21
    130a:	c1 f3       	breq	.-16     	; 0x12fc <__mulsf3+0x20>
    130c:	95 0f       	add	r25, r21
    130e:	50 e0       	ldi	r21, 0x00	; 0
    1310:	55 1f       	adc	r21, r21
    1312:	62 9f       	mul	r22, r18
    1314:	f0 01       	movw	r30, r0
    1316:	72 9f       	mul	r23, r18
    1318:	bb 27       	eor	r27, r27
    131a:	f0 0d       	add	r31, r0
    131c:	b1 1d       	adc	r27, r1
    131e:	63 9f       	mul	r22, r19
    1320:	aa 27       	eor	r26, r26
    1322:	f0 0d       	add	r31, r0
    1324:	b1 1d       	adc	r27, r1
    1326:	aa 1f       	adc	r26, r26
    1328:	64 9f       	mul	r22, r20
    132a:	66 27       	eor	r22, r22
    132c:	b0 0d       	add	r27, r0
    132e:	a1 1d       	adc	r26, r1
    1330:	66 1f       	adc	r22, r22
    1332:	82 9f       	mul	r24, r18
    1334:	22 27       	eor	r18, r18
    1336:	b0 0d       	add	r27, r0
    1338:	a1 1d       	adc	r26, r1
    133a:	62 1f       	adc	r22, r18
    133c:	73 9f       	mul	r23, r19
    133e:	b0 0d       	add	r27, r0
    1340:	a1 1d       	adc	r26, r1
    1342:	62 1f       	adc	r22, r18
    1344:	83 9f       	mul	r24, r19
    1346:	a0 0d       	add	r26, r0
    1348:	61 1d       	adc	r22, r1
    134a:	22 1f       	adc	r18, r18
    134c:	74 9f       	mul	r23, r20
    134e:	33 27       	eor	r19, r19
    1350:	a0 0d       	add	r26, r0
    1352:	61 1d       	adc	r22, r1
    1354:	23 1f       	adc	r18, r19
    1356:	84 9f       	mul	r24, r20
    1358:	60 0d       	add	r22, r0
    135a:	21 1d       	adc	r18, r1
    135c:	82 2f       	mov	r24, r18
    135e:	76 2f       	mov	r23, r22
    1360:	6a 2f       	mov	r22, r26
    1362:	11 24       	eor	r1, r1
    1364:	9f 57       	subi	r25, 0x7F	; 127
    1366:	50 40       	sbci	r21, 0x00	; 0
    1368:	9a f0       	brmi	.+38     	; 0x1390 <__mulsf3_pse+0x88>
    136a:	f1 f0       	breq	.+60     	; 0x13a8 <__mulsf3_pse+0xa0>
    136c:	88 23       	and	r24, r24
    136e:	4a f0       	brmi	.+18     	; 0x1382 <__mulsf3_pse+0x7a>
    1370:	ee 0f       	add	r30, r30
    1372:	ff 1f       	adc	r31, r31
    1374:	bb 1f       	adc	r27, r27
    1376:	66 1f       	adc	r22, r22
    1378:	77 1f       	adc	r23, r23
    137a:	88 1f       	adc	r24, r24
    137c:	91 50       	subi	r25, 0x01	; 1
    137e:	50 40       	sbci	r21, 0x00	; 0
    1380:	a9 f7       	brne	.-22     	; 0x136c <__mulsf3_pse+0x64>
    1382:	9e 3f       	cpi	r25, 0xFE	; 254
    1384:	51 05       	cpc	r21, r1
    1386:	80 f0       	brcs	.+32     	; 0x13a8 <__mulsf3_pse+0xa0>
    1388:	0c 94 db 09 	jmp	0x13b6	; 0x13b6 <__fp_inf>
    138c:	0c 94 63 09 	jmp	0x12c6	; 0x12c6 <__fp_szero>
    1390:	5f 3f       	cpi	r21, 0xFF	; 255
    1392:	e4 f3       	brlt	.-8      	; 0x138c <__mulsf3_pse+0x84>
    1394:	98 3e       	cpi	r25, 0xE8	; 232
    1396:	d4 f3       	brlt	.-12     	; 0x138c <__mulsf3_pse+0x84>
    1398:	86 95       	lsr	r24
    139a:	77 95       	ror	r23
    139c:	67 95       	ror	r22
    139e:	b7 95       	ror	r27
    13a0:	f7 95       	ror	r31
    13a2:	e7 95       	ror	r30
    13a4:	9f 5f       	subi	r25, 0xFF	; 255
    13a6:	c1 f7       	brne	.-16     	; 0x1398 <__mulsf3_pse+0x90>
    13a8:	fe 2b       	or	r31, r30
    13aa:	88 0f       	add	r24, r24
    13ac:	91 1d       	adc	r25, r1
    13ae:	96 95       	lsr	r25
    13b0:	87 95       	ror	r24
    13b2:	97 f9       	bld	r25, 7
    13b4:	08 95       	ret

000013b6 <__fp_inf>:
    13b6:	97 f9       	bld	r25, 7
    13b8:	9f 67       	ori	r25, 0x7F	; 127
    13ba:	80 e8       	ldi	r24, 0x80	; 128
    13bc:	70 e0       	ldi	r23, 0x00	; 0
    13be:	60 e0       	ldi	r22, 0x00	; 0
    13c0:	08 95       	ret

000013c2 <__fp_nan>:
    13c2:	9f ef       	ldi	r25, 0xFF	; 255
    13c4:	80 ec       	ldi	r24, 0xC0	; 192
    13c6:	08 95       	ret

000013c8 <__fp_pscA>:
    13c8:	00 24       	eor	r0, r0
    13ca:	0a 94       	dec	r0
    13cc:	16 16       	cp	r1, r22
    13ce:	17 06       	cpc	r1, r23
    13d0:	18 06       	cpc	r1, r24
    13d2:	09 06       	cpc	r0, r25
    13d4:	08 95       	ret

000013d6 <__fp_pscB>:
    13d6:	00 24       	eor	r0, r0
    13d8:	0a 94       	dec	r0
    13da:	12 16       	cp	r1, r18
    13dc:	13 06       	cpc	r1, r19
    13de:	14 06       	cpc	r1, r20
    13e0:	05 06       	cpc	r0, r21
    13e2:	08 95       	ret

000013e4 <__fp_round>:
    13e4:	09 2e       	mov	r0, r25
    13e6:	03 94       	inc	r0
    13e8:	00 0c       	add	r0, r0
    13ea:	11 f4       	brne	.+4      	; 0x13f0 <__fp_round+0xc>
    13ec:	88 23       	and	r24, r24
    13ee:	52 f0       	brmi	.+20     	; 0x1404 <__fp_round+0x20>
    13f0:	bb 0f       	add	r27, r27
    13f2:	40 f4       	brcc	.+16     	; 0x1404 <__fp_round+0x20>
    13f4:	bf 2b       	or	r27, r31
    13f6:	11 f4       	brne	.+4      	; 0x13fc <__fp_round+0x18>
    13f8:	60 ff       	sbrs	r22, 0
    13fa:	04 c0       	rjmp	.+8      	; 0x1404 <__fp_round+0x20>
    13fc:	6f 5f       	subi	r22, 0xFF	; 255
    13fe:	7f 4f       	sbci	r23, 0xFF	; 255
    1400:	8f 4f       	sbci	r24, 0xFF	; 255
    1402:	9f 4f       	sbci	r25, 0xFF	; 255
    1404:	08 95       	ret

00001406 <DriverPowerInit>:
    1406:	80 e2       	ldi	r24, 0x20	; 32
    1408:	80 93 41 06 	sts	0x0641, r24	; 0x800641 <__TEXT_REGION_LENGTH__+0x700641>
    140c:	08 95       	ret

0000140e <DriverPowerVccAuxSet>:
    140e:	81 11       	cpse	r24, r1
    1410:	04 c0       	rjmp	.+8      	; 0x141a <DriverPowerVccAuxSet+0xc>
    1412:	80 e2       	ldi	r24, 0x20	; 32
    1414:	80 93 46 06 	sts	0x0646, r24	; 0x800646 <__TEXT_REGION_LENGTH__+0x700646>
    1418:	08 95       	ret
    141a:	80 e2       	ldi	r24, 0x20	; 32
    141c:	80 93 45 06 	sts	0x0645, r24	; 0x800645 <__TEXT_REGION_LENGTH__+0x700645>
    1420:	08 95       	ret

00001422 <vfprintf>:
    1422:	2f 92       	push	r2
    1424:	3f 92       	push	r3
    1426:	4f 92       	push	r4
    1428:	5f 92       	push	r5
    142a:	6f 92       	push	r6
    142c:	7f 92       	push	r7
    142e:	8f 92       	push	r8
    1430:	9f 92       	push	r9
    1432:	af 92       	push	r10
    1434:	bf 92       	push	r11
    1436:	cf 92       	push	r12
    1438:	df 92       	push	r13
    143a:	ef 92       	push	r14
    143c:	ff 92       	push	r15
    143e:	0f 93       	push	r16
    1440:	1f 93       	push	r17
    1442:	cf 93       	push	r28
    1444:	df 93       	push	r29
    1446:	cd b7       	in	r28, 0x3d	; 61
    1448:	de b7       	in	r29, 0x3e	; 62
    144a:	60 97       	sbiw	r28, 0x10	; 16
    144c:	cd bf       	out	0x3d, r28	; 61
    144e:	de bf       	out	0x3e, r29	; 62
    1450:	7c 01       	movw	r14, r24
    1452:	1b 01       	movw	r2, r22
    1454:	6a 01       	movw	r12, r20
    1456:	fc 01       	movw	r30, r24
    1458:	16 82       	std	Z+6, r1	; 0x06
    145a:	17 82       	std	Z+7, r1	; 0x07
    145c:	83 81       	ldd	r24, Z+3	; 0x03
    145e:	81 ff       	sbrs	r24, 1
    1460:	44 c3       	rjmp	.+1672   	; 0x1aea <vfprintf+0x6c8>
    1462:	9e 01       	movw	r18, r28
    1464:	2f 5f       	subi	r18, 0xFF	; 255
    1466:	3f 4f       	sbci	r19, 0xFF	; 255
    1468:	39 01       	movw	r6, r18
    146a:	f7 01       	movw	r30, r14
    146c:	93 81       	ldd	r25, Z+3	; 0x03
    146e:	f1 01       	movw	r30, r2
    1470:	93 fd       	sbrc	r25, 3
    1472:	85 91       	lpm	r24, Z+
    1474:	93 ff       	sbrs	r25, 3
    1476:	81 91       	ld	r24, Z+
    1478:	1f 01       	movw	r2, r30
    147a:	88 23       	and	r24, r24
    147c:	09 f4       	brne	.+2      	; 0x1480 <vfprintf+0x5e>
    147e:	31 c3       	rjmp	.+1634   	; 0x1ae2 <vfprintf+0x6c0>
    1480:	85 32       	cpi	r24, 0x25	; 37
    1482:	39 f4       	brne	.+14     	; 0x1492 <vfprintf+0x70>
    1484:	93 fd       	sbrc	r25, 3
    1486:	85 91       	lpm	r24, Z+
    1488:	93 ff       	sbrs	r25, 3
    148a:	81 91       	ld	r24, Z+
    148c:	1f 01       	movw	r2, r30
    148e:	85 32       	cpi	r24, 0x25	; 37
    1490:	39 f4       	brne	.+14     	; 0x14a0 <vfprintf+0x7e>
    1492:	b7 01       	movw	r22, r14
    1494:	90 e0       	ldi	r25, 0x00	; 0
    1496:	0e 94 9f 0e 	call	0x1d3e	; 0x1d3e <fputc>
    149a:	56 01       	movw	r10, r12
    149c:	65 01       	movw	r12, r10
    149e:	e5 cf       	rjmp	.-54     	; 0x146a <vfprintf+0x48>
    14a0:	10 e0       	ldi	r17, 0x00	; 0
    14a2:	51 2c       	mov	r5, r1
    14a4:	91 2c       	mov	r9, r1
    14a6:	ff e1       	ldi	r31, 0x1F	; 31
    14a8:	f9 15       	cp	r31, r9
    14aa:	d8 f0       	brcs	.+54     	; 0x14e2 <vfprintf+0xc0>
    14ac:	8b 32       	cpi	r24, 0x2B	; 43
    14ae:	79 f0       	breq	.+30     	; 0x14ce <vfprintf+0xac>
    14b0:	38 f4       	brcc	.+14     	; 0x14c0 <vfprintf+0x9e>
    14b2:	80 32       	cpi	r24, 0x20	; 32
    14b4:	79 f0       	breq	.+30     	; 0x14d4 <vfprintf+0xb2>
    14b6:	83 32       	cpi	r24, 0x23	; 35
    14b8:	a1 f4       	brne	.+40     	; 0x14e2 <vfprintf+0xc0>
    14ba:	f9 2d       	mov	r31, r9
    14bc:	f0 61       	ori	r31, 0x10	; 16
    14be:	2e c0       	rjmp	.+92     	; 0x151c <vfprintf+0xfa>
    14c0:	8d 32       	cpi	r24, 0x2D	; 45
    14c2:	61 f0       	breq	.+24     	; 0x14dc <vfprintf+0xba>
    14c4:	80 33       	cpi	r24, 0x30	; 48
    14c6:	69 f4       	brne	.+26     	; 0x14e2 <vfprintf+0xc0>
    14c8:	29 2d       	mov	r18, r9
    14ca:	21 60       	ori	r18, 0x01	; 1
    14cc:	2d c0       	rjmp	.+90     	; 0x1528 <vfprintf+0x106>
    14ce:	39 2d       	mov	r19, r9
    14d0:	32 60       	ori	r19, 0x02	; 2
    14d2:	93 2e       	mov	r9, r19
    14d4:	89 2d       	mov	r24, r9
    14d6:	84 60       	ori	r24, 0x04	; 4
    14d8:	98 2e       	mov	r9, r24
    14da:	2a c0       	rjmp	.+84     	; 0x1530 <vfprintf+0x10e>
    14dc:	e9 2d       	mov	r30, r9
    14de:	e8 60       	ori	r30, 0x08	; 8
    14e0:	15 c0       	rjmp	.+42     	; 0x150c <vfprintf+0xea>
    14e2:	97 fc       	sbrc	r9, 7
    14e4:	2d c0       	rjmp	.+90     	; 0x1540 <vfprintf+0x11e>
    14e6:	20 ed       	ldi	r18, 0xD0	; 208
    14e8:	28 0f       	add	r18, r24
    14ea:	2a 30       	cpi	r18, 0x0A	; 10
    14ec:	88 f4       	brcc	.+34     	; 0x1510 <vfprintf+0xee>
    14ee:	96 fe       	sbrs	r9, 6
    14f0:	06 c0       	rjmp	.+12     	; 0x14fe <vfprintf+0xdc>
    14f2:	3a e0       	ldi	r19, 0x0A	; 10
    14f4:	13 9f       	mul	r17, r19
    14f6:	20 0d       	add	r18, r0
    14f8:	11 24       	eor	r1, r1
    14fa:	12 2f       	mov	r17, r18
    14fc:	19 c0       	rjmp	.+50     	; 0x1530 <vfprintf+0x10e>
    14fe:	8a e0       	ldi	r24, 0x0A	; 10
    1500:	58 9e       	mul	r5, r24
    1502:	20 0d       	add	r18, r0
    1504:	11 24       	eor	r1, r1
    1506:	52 2e       	mov	r5, r18
    1508:	e9 2d       	mov	r30, r9
    150a:	e0 62       	ori	r30, 0x20	; 32
    150c:	9e 2e       	mov	r9, r30
    150e:	10 c0       	rjmp	.+32     	; 0x1530 <vfprintf+0x10e>
    1510:	8e 32       	cpi	r24, 0x2E	; 46
    1512:	31 f4       	brne	.+12     	; 0x1520 <vfprintf+0xfe>
    1514:	96 fc       	sbrc	r9, 6
    1516:	e5 c2       	rjmp	.+1482   	; 0x1ae2 <vfprintf+0x6c0>
    1518:	f9 2d       	mov	r31, r9
    151a:	f0 64       	ori	r31, 0x40	; 64
    151c:	9f 2e       	mov	r9, r31
    151e:	08 c0       	rjmp	.+16     	; 0x1530 <vfprintf+0x10e>
    1520:	8c 36       	cpi	r24, 0x6C	; 108
    1522:	21 f4       	brne	.+8      	; 0x152c <vfprintf+0x10a>
    1524:	29 2d       	mov	r18, r9
    1526:	20 68       	ori	r18, 0x80	; 128
    1528:	92 2e       	mov	r9, r18
    152a:	02 c0       	rjmp	.+4      	; 0x1530 <vfprintf+0x10e>
    152c:	88 36       	cpi	r24, 0x68	; 104
    152e:	41 f4       	brne	.+16     	; 0x1540 <vfprintf+0x11e>
    1530:	f1 01       	movw	r30, r2
    1532:	93 fd       	sbrc	r25, 3
    1534:	85 91       	lpm	r24, Z+
    1536:	93 ff       	sbrs	r25, 3
    1538:	81 91       	ld	r24, Z+
    153a:	1f 01       	movw	r2, r30
    153c:	81 11       	cpse	r24, r1
    153e:	b3 cf       	rjmp	.-154    	; 0x14a6 <vfprintf+0x84>
    1540:	9b eb       	ldi	r25, 0xBB	; 187
    1542:	98 0f       	add	r25, r24
    1544:	93 30       	cpi	r25, 0x03	; 3
    1546:	20 f4       	brcc	.+8      	; 0x1550 <vfprintf+0x12e>
    1548:	99 2d       	mov	r25, r9
    154a:	90 61       	ori	r25, 0x10	; 16
    154c:	80 5e       	subi	r24, 0xE0	; 224
    154e:	07 c0       	rjmp	.+14     	; 0x155e <vfprintf+0x13c>
    1550:	9b e9       	ldi	r25, 0x9B	; 155
    1552:	98 0f       	add	r25, r24
    1554:	93 30       	cpi	r25, 0x03	; 3
    1556:	08 f0       	brcs	.+2      	; 0x155a <vfprintf+0x138>
    1558:	66 c1       	rjmp	.+716    	; 0x1826 <vfprintf+0x404>
    155a:	99 2d       	mov	r25, r9
    155c:	9f 7e       	andi	r25, 0xEF	; 239
    155e:	96 ff       	sbrs	r25, 6
    1560:	16 e0       	ldi	r17, 0x06	; 6
    1562:	9f 73       	andi	r25, 0x3F	; 63
    1564:	99 2e       	mov	r9, r25
    1566:	85 36       	cpi	r24, 0x65	; 101
    1568:	19 f4       	brne	.+6      	; 0x1570 <vfprintf+0x14e>
    156a:	90 64       	ori	r25, 0x40	; 64
    156c:	99 2e       	mov	r9, r25
    156e:	08 c0       	rjmp	.+16     	; 0x1580 <vfprintf+0x15e>
    1570:	86 36       	cpi	r24, 0x66	; 102
    1572:	21 f4       	brne	.+8      	; 0x157c <vfprintf+0x15a>
    1574:	39 2f       	mov	r19, r25
    1576:	30 68       	ori	r19, 0x80	; 128
    1578:	93 2e       	mov	r9, r19
    157a:	02 c0       	rjmp	.+4      	; 0x1580 <vfprintf+0x15e>
    157c:	11 11       	cpse	r17, r1
    157e:	11 50       	subi	r17, 0x01	; 1
    1580:	97 fe       	sbrs	r9, 7
    1582:	07 c0       	rjmp	.+14     	; 0x1592 <vfprintf+0x170>
    1584:	1c 33       	cpi	r17, 0x3C	; 60
    1586:	50 f4       	brcc	.+20     	; 0x159c <vfprintf+0x17a>
    1588:	44 24       	eor	r4, r4
    158a:	43 94       	inc	r4
    158c:	41 0e       	add	r4, r17
    158e:	27 e0       	ldi	r18, 0x07	; 7
    1590:	0b c0       	rjmp	.+22     	; 0x15a8 <vfprintf+0x186>
    1592:	18 30       	cpi	r17, 0x08	; 8
    1594:	38 f0       	brcs	.+14     	; 0x15a4 <vfprintf+0x182>
    1596:	27 e0       	ldi	r18, 0x07	; 7
    1598:	17 e0       	ldi	r17, 0x07	; 7
    159a:	05 c0       	rjmp	.+10     	; 0x15a6 <vfprintf+0x184>
    159c:	27 e0       	ldi	r18, 0x07	; 7
    159e:	9c e3       	ldi	r25, 0x3C	; 60
    15a0:	49 2e       	mov	r4, r25
    15a2:	02 c0       	rjmp	.+4      	; 0x15a8 <vfprintf+0x186>
    15a4:	21 2f       	mov	r18, r17
    15a6:	41 2c       	mov	r4, r1
    15a8:	56 01       	movw	r10, r12
    15aa:	84 e0       	ldi	r24, 0x04	; 4
    15ac:	a8 0e       	add	r10, r24
    15ae:	b1 1c       	adc	r11, r1
    15b0:	f6 01       	movw	r30, r12
    15b2:	60 81       	ld	r22, Z
    15b4:	71 81       	ldd	r23, Z+1	; 0x01
    15b6:	82 81       	ldd	r24, Z+2	; 0x02
    15b8:	93 81       	ldd	r25, Z+3	; 0x03
    15ba:	04 2d       	mov	r16, r4
    15bc:	a3 01       	movw	r20, r6
    15be:	0e 94 b1 0d 	call	0x1b62	; 0x1b62 <__ftoa_engine>
    15c2:	6c 01       	movw	r12, r24
    15c4:	f9 81       	ldd	r31, Y+1	; 0x01
    15c6:	fc 87       	std	Y+12, r31	; 0x0c
    15c8:	f0 ff       	sbrs	r31, 0
    15ca:	02 c0       	rjmp	.+4      	; 0x15d0 <vfprintf+0x1ae>
    15cc:	f3 ff       	sbrs	r31, 3
    15ce:	06 c0       	rjmp	.+12     	; 0x15dc <vfprintf+0x1ba>
    15d0:	91 fc       	sbrc	r9, 1
    15d2:	06 c0       	rjmp	.+12     	; 0x15e0 <vfprintf+0x1be>
    15d4:	92 fe       	sbrs	r9, 2
    15d6:	06 c0       	rjmp	.+12     	; 0x15e4 <vfprintf+0x1c2>
    15d8:	00 e2       	ldi	r16, 0x20	; 32
    15da:	05 c0       	rjmp	.+10     	; 0x15e6 <vfprintf+0x1c4>
    15dc:	0d e2       	ldi	r16, 0x2D	; 45
    15de:	03 c0       	rjmp	.+6      	; 0x15e6 <vfprintf+0x1c4>
    15e0:	0b e2       	ldi	r16, 0x2B	; 43
    15e2:	01 c0       	rjmp	.+2      	; 0x15e6 <vfprintf+0x1c4>
    15e4:	00 e0       	ldi	r16, 0x00	; 0
    15e6:	8c 85       	ldd	r24, Y+12	; 0x0c
    15e8:	8c 70       	andi	r24, 0x0C	; 12
    15ea:	19 f0       	breq	.+6      	; 0x15f2 <vfprintf+0x1d0>
    15ec:	01 11       	cpse	r16, r1
    15ee:	5a c2       	rjmp	.+1204   	; 0x1aa4 <vfprintf+0x682>
    15f0:	9b c2       	rjmp	.+1334   	; 0x1b28 <vfprintf+0x706>
    15f2:	97 fe       	sbrs	r9, 7
    15f4:	10 c0       	rjmp	.+32     	; 0x1616 <vfprintf+0x1f4>
    15f6:	4c 0c       	add	r4, r12
    15f8:	fc 85       	ldd	r31, Y+12	; 0x0c
    15fa:	f4 ff       	sbrs	r31, 4
    15fc:	04 c0       	rjmp	.+8      	; 0x1606 <vfprintf+0x1e4>
    15fe:	8a 81       	ldd	r24, Y+2	; 0x02
    1600:	81 33       	cpi	r24, 0x31	; 49
    1602:	09 f4       	brne	.+2      	; 0x1606 <vfprintf+0x1e4>
    1604:	4a 94       	dec	r4
    1606:	14 14       	cp	r1, r4
    1608:	74 f5       	brge	.+92     	; 0x1666 <vfprintf+0x244>
    160a:	28 e0       	ldi	r18, 0x08	; 8
    160c:	24 15       	cp	r18, r4
    160e:	78 f5       	brcc	.+94     	; 0x166e <vfprintf+0x24c>
    1610:	88 e0       	ldi	r24, 0x08	; 8
    1612:	48 2e       	mov	r4, r24
    1614:	2c c0       	rjmp	.+88     	; 0x166e <vfprintf+0x24c>
    1616:	96 fc       	sbrc	r9, 6
    1618:	2a c0       	rjmp	.+84     	; 0x166e <vfprintf+0x24c>
    161a:	81 2f       	mov	r24, r17
    161c:	90 e0       	ldi	r25, 0x00	; 0
    161e:	8c 15       	cp	r24, r12
    1620:	9d 05       	cpc	r25, r13
    1622:	9c f0       	brlt	.+38     	; 0x164a <vfprintf+0x228>
    1624:	3c ef       	ldi	r19, 0xFC	; 252
    1626:	c3 16       	cp	r12, r19
    1628:	3f ef       	ldi	r19, 0xFF	; 255
    162a:	d3 06       	cpc	r13, r19
    162c:	74 f0       	brlt	.+28     	; 0x164a <vfprintf+0x228>
    162e:	89 2d       	mov	r24, r9
    1630:	80 68       	ori	r24, 0x80	; 128
    1632:	98 2e       	mov	r9, r24
    1634:	0a c0       	rjmp	.+20     	; 0x164a <vfprintf+0x228>
    1636:	e2 e0       	ldi	r30, 0x02	; 2
    1638:	f0 e0       	ldi	r31, 0x00	; 0
    163a:	ec 0f       	add	r30, r28
    163c:	fd 1f       	adc	r31, r29
    163e:	e1 0f       	add	r30, r17
    1640:	f1 1d       	adc	r31, r1
    1642:	80 81       	ld	r24, Z
    1644:	80 33       	cpi	r24, 0x30	; 48
    1646:	19 f4       	brne	.+6      	; 0x164e <vfprintf+0x22c>
    1648:	11 50       	subi	r17, 0x01	; 1
    164a:	11 11       	cpse	r17, r1
    164c:	f4 cf       	rjmp	.-24     	; 0x1636 <vfprintf+0x214>
    164e:	97 fe       	sbrs	r9, 7
    1650:	0e c0       	rjmp	.+28     	; 0x166e <vfprintf+0x24c>
    1652:	44 24       	eor	r4, r4
    1654:	43 94       	inc	r4
    1656:	41 0e       	add	r4, r17
    1658:	81 2f       	mov	r24, r17
    165a:	90 e0       	ldi	r25, 0x00	; 0
    165c:	c8 16       	cp	r12, r24
    165e:	d9 06       	cpc	r13, r25
    1660:	2c f4       	brge	.+10     	; 0x166c <vfprintf+0x24a>
    1662:	1c 19       	sub	r17, r12
    1664:	04 c0       	rjmp	.+8      	; 0x166e <vfprintf+0x24c>
    1666:	44 24       	eor	r4, r4
    1668:	43 94       	inc	r4
    166a:	01 c0       	rjmp	.+2      	; 0x166e <vfprintf+0x24c>
    166c:	10 e0       	ldi	r17, 0x00	; 0
    166e:	97 fe       	sbrs	r9, 7
    1670:	06 c0       	rjmp	.+12     	; 0x167e <vfprintf+0x25c>
    1672:	1c 14       	cp	r1, r12
    1674:	1d 04       	cpc	r1, r13
    1676:	34 f4       	brge	.+12     	; 0x1684 <vfprintf+0x262>
    1678:	c6 01       	movw	r24, r12
    167a:	01 96       	adiw	r24, 0x01	; 1
    167c:	05 c0       	rjmp	.+10     	; 0x1688 <vfprintf+0x266>
    167e:	85 e0       	ldi	r24, 0x05	; 5
    1680:	90 e0       	ldi	r25, 0x00	; 0
    1682:	02 c0       	rjmp	.+4      	; 0x1688 <vfprintf+0x266>
    1684:	81 e0       	ldi	r24, 0x01	; 1
    1686:	90 e0       	ldi	r25, 0x00	; 0
    1688:	01 11       	cpse	r16, r1
    168a:	01 96       	adiw	r24, 0x01	; 1
    168c:	11 23       	and	r17, r17
    168e:	31 f0       	breq	.+12     	; 0x169c <vfprintf+0x27a>
    1690:	21 2f       	mov	r18, r17
    1692:	30 e0       	ldi	r19, 0x00	; 0
    1694:	2f 5f       	subi	r18, 0xFF	; 255
    1696:	3f 4f       	sbci	r19, 0xFF	; 255
    1698:	82 0f       	add	r24, r18
    169a:	93 1f       	adc	r25, r19
    169c:	25 2d       	mov	r18, r5
    169e:	30 e0       	ldi	r19, 0x00	; 0
    16a0:	82 17       	cp	r24, r18
    16a2:	93 07       	cpc	r25, r19
    16a4:	14 f4       	brge	.+4      	; 0x16aa <vfprintf+0x288>
    16a6:	58 1a       	sub	r5, r24
    16a8:	01 c0       	rjmp	.+2      	; 0x16ac <vfprintf+0x28a>
    16aa:	51 2c       	mov	r5, r1
    16ac:	89 2d       	mov	r24, r9
    16ae:	89 70       	andi	r24, 0x09	; 9
    16b0:	49 f4       	brne	.+18     	; 0x16c4 <vfprintf+0x2a2>
    16b2:	55 20       	and	r5, r5
    16b4:	39 f0       	breq	.+14     	; 0x16c4 <vfprintf+0x2a2>
    16b6:	b7 01       	movw	r22, r14
    16b8:	80 e2       	ldi	r24, 0x20	; 32
    16ba:	90 e0       	ldi	r25, 0x00	; 0
    16bc:	0e 94 9f 0e 	call	0x1d3e	; 0x1d3e <fputc>
    16c0:	5a 94       	dec	r5
    16c2:	f7 cf       	rjmp	.-18     	; 0x16b2 <vfprintf+0x290>
    16c4:	00 23       	and	r16, r16
    16c6:	29 f0       	breq	.+10     	; 0x16d2 <vfprintf+0x2b0>
    16c8:	b7 01       	movw	r22, r14
    16ca:	80 2f       	mov	r24, r16
    16cc:	90 e0       	ldi	r25, 0x00	; 0
    16ce:	0e 94 9f 0e 	call	0x1d3e	; 0x1d3e <fputc>
    16d2:	93 fc       	sbrc	r9, 3
    16d4:	09 c0       	rjmp	.+18     	; 0x16e8 <vfprintf+0x2c6>
    16d6:	55 20       	and	r5, r5
    16d8:	39 f0       	breq	.+14     	; 0x16e8 <vfprintf+0x2c6>
    16da:	b7 01       	movw	r22, r14
    16dc:	80 e3       	ldi	r24, 0x30	; 48
    16de:	90 e0       	ldi	r25, 0x00	; 0
    16e0:	0e 94 9f 0e 	call	0x1d3e	; 0x1d3e <fputc>
    16e4:	5a 94       	dec	r5
    16e6:	f7 cf       	rjmp	.-18     	; 0x16d6 <vfprintf+0x2b4>
    16e8:	97 fe       	sbrs	r9, 7
    16ea:	4c c0       	rjmp	.+152    	; 0x1784 <vfprintf+0x362>
    16ec:	46 01       	movw	r8, r12
    16ee:	d7 fe       	sbrs	r13, 7
    16f0:	02 c0       	rjmp	.+4      	; 0x16f6 <vfprintf+0x2d4>
    16f2:	81 2c       	mov	r8, r1
    16f4:	91 2c       	mov	r9, r1
    16f6:	c6 01       	movw	r24, r12
    16f8:	88 19       	sub	r24, r8
    16fa:	99 09       	sbc	r25, r9
    16fc:	f3 01       	movw	r30, r6
    16fe:	e8 0f       	add	r30, r24
    1700:	f9 1f       	adc	r31, r25
    1702:	ed 87       	std	Y+13, r30	; 0x0d
    1704:	fe 87       	std	Y+14, r31	; 0x0e
    1706:	96 01       	movw	r18, r12
    1708:	24 19       	sub	r18, r4
    170a:	31 09       	sbc	r19, r1
    170c:	2f 87       	std	Y+15, r18	; 0x0f
    170e:	38 8b       	std	Y+16, r19	; 0x10
    1710:	01 2f       	mov	r16, r17
    1712:	10 e0       	ldi	r17, 0x00	; 0
    1714:	11 95       	neg	r17
    1716:	01 95       	neg	r16
    1718:	11 09       	sbc	r17, r1
    171a:	3f ef       	ldi	r19, 0xFF	; 255
    171c:	83 16       	cp	r8, r19
    171e:	93 06       	cpc	r9, r19
    1720:	29 f4       	brne	.+10     	; 0x172c <vfprintf+0x30a>
    1722:	b7 01       	movw	r22, r14
    1724:	8e e2       	ldi	r24, 0x2E	; 46
    1726:	90 e0       	ldi	r25, 0x00	; 0
    1728:	0e 94 9f 0e 	call	0x1d3e	; 0x1d3e <fputc>
    172c:	c8 14       	cp	r12, r8
    172e:	d9 04       	cpc	r13, r9
    1730:	4c f0       	brlt	.+18     	; 0x1744 <vfprintf+0x322>
    1732:	8f 85       	ldd	r24, Y+15	; 0x0f
    1734:	98 89       	ldd	r25, Y+16	; 0x10
    1736:	88 15       	cp	r24, r8
    1738:	99 05       	cpc	r25, r9
    173a:	24 f4       	brge	.+8      	; 0x1744 <vfprintf+0x322>
    173c:	ed 85       	ldd	r30, Y+13	; 0x0d
    173e:	fe 85       	ldd	r31, Y+14	; 0x0e
    1740:	81 81       	ldd	r24, Z+1	; 0x01
    1742:	01 c0       	rjmp	.+2      	; 0x1746 <vfprintf+0x324>
    1744:	80 e3       	ldi	r24, 0x30	; 48
    1746:	f1 e0       	ldi	r31, 0x01	; 1
    1748:	8f 1a       	sub	r8, r31
    174a:	91 08       	sbc	r9, r1
    174c:	2d 85       	ldd	r18, Y+13	; 0x0d
    174e:	3e 85       	ldd	r19, Y+14	; 0x0e
    1750:	2f 5f       	subi	r18, 0xFF	; 255
    1752:	3f 4f       	sbci	r19, 0xFF	; 255
    1754:	2d 87       	std	Y+13, r18	; 0x0d
    1756:	3e 87       	std	Y+14, r19	; 0x0e
    1758:	80 16       	cp	r8, r16
    175a:	91 06       	cpc	r9, r17
    175c:	2c f0       	brlt	.+10     	; 0x1768 <vfprintf+0x346>
    175e:	b7 01       	movw	r22, r14
    1760:	90 e0       	ldi	r25, 0x00	; 0
    1762:	0e 94 9f 0e 	call	0x1d3e	; 0x1d3e <fputc>
    1766:	d9 cf       	rjmp	.-78     	; 0x171a <vfprintf+0x2f8>
    1768:	c8 14       	cp	r12, r8
    176a:	d9 04       	cpc	r13, r9
    176c:	41 f4       	brne	.+16     	; 0x177e <vfprintf+0x35c>
    176e:	9a 81       	ldd	r25, Y+2	; 0x02
    1770:	96 33       	cpi	r25, 0x36	; 54
    1772:	20 f4       	brcc	.+8      	; 0x177c <vfprintf+0x35a>
    1774:	95 33       	cpi	r25, 0x35	; 53
    1776:	19 f4       	brne	.+6      	; 0x177e <vfprintf+0x35c>
    1778:	3c 85       	ldd	r19, Y+12	; 0x0c
    177a:	34 ff       	sbrs	r19, 4
    177c:	81 e3       	ldi	r24, 0x31	; 49
    177e:	b7 01       	movw	r22, r14
    1780:	90 e0       	ldi	r25, 0x00	; 0
    1782:	4e c0       	rjmp	.+156    	; 0x1820 <vfprintf+0x3fe>
    1784:	8a 81       	ldd	r24, Y+2	; 0x02
    1786:	81 33       	cpi	r24, 0x31	; 49
    1788:	19 f0       	breq	.+6      	; 0x1790 <vfprintf+0x36e>
    178a:	9c 85       	ldd	r25, Y+12	; 0x0c
    178c:	9f 7e       	andi	r25, 0xEF	; 239
    178e:	9c 87       	std	Y+12, r25	; 0x0c
    1790:	b7 01       	movw	r22, r14
    1792:	90 e0       	ldi	r25, 0x00	; 0
    1794:	0e 94 9f 0e 	call	0x1d3e	; 0x1d3e <fputc>
    1798:	11 11       	cpse	r17, r1
    179a:	05 c0       	rjmp	.+10     	; 0x17a6 <vfprintf+0x384>
    179c:	94 fc       	sbrc	r9, 4
    179e:	18 c0       	rjmp	.+48     	; 0x17d0 <vfprintf+0x3ae>
    17a0:	85 e6       	ldi	r24, 0x65	; 101
    17a2:	90 e0       	ldi	r25, 0x00	; 0
    17a4:	17 c0       	rjmp	.+46     	; 0x17d4 <vfprintf+0x3b2>
    17a6:	b7 01       	movw	r22, r14
    17a8:	8e e2       	ldi	r24, 0x2E	; 46
    17aa:	90 e0       	ldi	r25, 0x00	; 0
    17ac:	0e 94 9f 0e 	call	0x1d3e	; 0x1d3e <fputc>
    17b0:	1e 5f       	subi	r17, 0xFE	; 254
    17b2:	82 e0       	ldi	r24, 0x02	; 2
    17b4:	01 e0       	ldi	r16, 0x01	; 1
    17b6:	08 0f       	add	r16, r24
    17b8:	f3 01       	movw	r30, r6
    17ba:	e8 0f       	add	r30, r24
    17bc:	f1 1d       	adc	r31, r1
    17be:	80 81       	ld	r24, Z
    17c0:	b7 01       	movw	r22, r14
    17c2:	90 e0       	ldi	r25, 0x00	; 0
    17c4:	0e 94 9f 0e 	call	0x1d3e	; 0x1d3e <fputc>
    17c8:	80 2f       	mov	r24, r16
    17ca:	01 13       	cpse	r16, r17
    17cc:	f3 cf       	rjmp	.-26     	; 0x17b4 <vfprintf+0x392>
    17ce:	e6 cf       	rjmp	.-52     	; 0x179c <vfprintf+0x37a>
    17d0:	85 e4       	ldi	r24, 0x45	; 69
    17d2:	90 e0       	ldi	r25, 0x00	; 0
    17d4:	b7 01       	movw	r22, r14
    17d6:	0e 94 9f 0e 	call	0x1d3e	; 0x1d3e <fputc>
    17da:	d7 fc       	sbrc	r13, 7
    17dc:	06 c0       	rjmp	.+12     	; 0x17ea <vfprintf+0x3c8>
    17de:	c1 14       	cp	r12, r1
    17e0:	d1 04       	cpc	r13, r1
    17e2:	41 f4       	brne	.+16     	; 0x17f4 <vfprintf+0x3d2>
    17e4:	ec 85       	ldd	r30, Y+12	; 0x0c
    17e6:	e4 ff       	sbrs	r30, 4
    17e8:	05 c0       	rjmp	.+10     	; 0x17f4 <vfprintf+0x3d2>
    17ea:	d1 94       	neg	r13
    17ec:	c1 94       	neg	r12
    17ee:	d1 08       	sbc	r13, r1
    17f0:	8d e2       	ldi	r24, 0x2D	; 45
    17f2:	01 c0       	rjmp	.+2      	; 0x17f6 <vfprintf+0x3d4>
    17f4:	8b e2       	ldi	r24, 0x2B	; 43
    17f6:	b7 01       	movw	r22, r14
    17f8:	90 e0       	ldi	r25, 0x00	; 0
    17fa:	0e 94 9f 0e 	call	0x1d3e	; 0x1d3e <fputc>
    17fe:	80 e3       	ldi	r24, 0x30	; 48
    1800:	2a e0       	ldi	r18, 0x0A	; 10
    1802:	c2 16       	cp	r12, r18
    1804:	d1 04       	cpc	r13, r1
    1806:	2c f0       	brlt	.+10     	; 0x1812 <vfprintf+0x3f0>
    1808:	8f 5f       	subi	r24, 0xFF	; 255
    180a:	fa e0       	ldi	r31, 0x0A	; 10
    180c:	cf 1a       	sub	r12, r31
    180e:	d1 08       	sbc	r13, r1
    1810:	f7 cf       	rjmp	.-18     	; 0x1800 <vfprintf+0x3de>
    1812:	b7 01       	movw	r22, r14
    1814:	90 e0       	ldi	r25, 0x00	; 0
    1816:	0e 94 9f 0e 	call	0x1d3e	; 0x1d3e <fputc>
    181a:	b7 01       	movw	r22, r14
    181c:	c6 01       	movw	r24, r12
    181e:	c0 96       	adiw	r24, 0x30	; 48
    1820:	0e 94 9f 0e 	call	0x1d3e	; 0x1d3e <fputc>
    1824:	54 c1       	rjmp	.+680    	; 0x1ace <vfprintf+0x6ac>
    1826:	83 36       	cpi	r24, 0x63	; 99
    1828:	31 f0       	breq	.+12     	; 0x1836 <vfprintf+0x414>
    182a:	83 37       	cpi	r24, 0x73	; 115
    182c:	79 f0       	breq	.+30     	; 0x184c <vfprintf+0x42a>
    182e:	83 35       	cpi	r24, 0x53	; 83
    1830:	09 f0       	breq	.+2      	; 0x1834 <vfprintf+0x412>
    1832:	56 c0       	rjmp	.+172    	; 0x18e0 <vfprintf+0x4be>
    1834:	20 c0       	rjmp	.+64     	; 0x1876 <vfprintf+0x454>
    1836:	56 01       	movw	r10, r12
    1838:	32 e0       	ldi	r19, 0x02	; 2
    183a:	a3 0e       	add	r10, r19
    183c:	b1 1c       	adc	r11, r1
    183e:	f6 01       	movw	r30, r12
    1840:	80 81       	ld	r24, Z
    1842:	89 83       	std	Y+1, r24	; 0x01
    1844:	01 e0       	ldi	r16, 0x01	; 1
    1846:	10 e0       	ldi	r17, 0x00	; 0
    1848:	63 01       	movw	r12, r6
    184a:	12 c0       	rjmp	.+36     	; 0x1870 <vfprintf+0x44e>
    184c:	56 01       	movw	r10, r12
    184e:	f2 e0       	ldi	r31, 0x02	; 2
    1850:	af 0e       	add	r10, r31
    1852:	b1 1c       	adc	r11, r1
    1854:	f6 01       	movw	r30, r12
    1856:	c0 80       	ld	r12, Z
    1858:	d1 80       	ldd	r13, Z+1	; 0x01
    185a:	96 fe       	sbrs	r9, 6
    185c:	03 c0       	rjmp	.+6      	; 0x1864 <vfprintf+0x442>
    185e:	61 2f       	mov	r22, r17
    1860:	70 e0       	ldi	r23, 0x00	; 0
    1862:	02 c0       	rjmp	.+4      	; 0x1868 <vfprintf+0x446>
    1864:	6f ef       	ldi	r22, 0xFF	; 255
    1866:	7f ef       	ldi	r23, 0xFF	; 255
    1868:	c6 01       	movw	r24, r12
    186a:	0e 94 94 0e 	call	0x1d28	; 0x1d28 <strnlen>
    186e:	8c 01       	movw	r16, r24
    1870:	f9 2d       	mov	r31, r9
    1872:	ff 77       	andi	r31, 0x7F	; 127
    1874:	14 c0       	rjmp	.+40     	; 0x189e <vfprintf+0x47c>
    1876:	56 01       	movw	r10, r12
    1878:	22 e0       	ldi	r18, 0x02	; 2
    187a:	a2 0e       	add	r10, r18
    187c:	b1 1c       	adc	r11, r1
    187e:	f6 01       	movw	r30, r12
    1880:	c0 80       	ld	r12, Z
    1882:	d1 80       	ldd	r13, Z+1	; 0x01
    1884:	96 fe       	sbrs	r9, 6
    1886:	03 c0       	rjmp	.+6      	; 0x188e <vfprintf+0x46c>
    1888:	61 2f       	mov	r22, r17
    188a:	70 e0       	ldi	r23, 0x00	; 0
    188c:	02 c0       	rjmp	.+4      	; 0x1892 <vfprintf+0x470>
    188e:	6f ef       	ldi	r22, 0xFF	; 255
    1890:	7f ef       	ldi	r23, 0xFF	; 255
    1892:	c6 01       	movw	r24, r12
    1894:	0e 94 89 0e 	call	0x1d12	; 0x1d12 <strnlen_P>
    1898:	8c 01       	movw	r16, r24
    189a:	f9 2d       	mov	r31, r9
    189c:	f0 68       	ori	r31, 0x80	; 128
    189e:	9f 2e       	mov	r9, r31
    18a0:	f3 fd       	sbrc	r31, 3
    18a2:	1a c0       	rjmp	.+52     	; 0x18d8 <vfprintf+0x4b6>
    18a4:	85 2d       	mov	r24, r5
    18a6:	90 e0       	ldi	r25, 0x00	; 0
    18a8:	08 17       	cp	r16, r24
    18aa:	19 07       	cpc	r17, r25
    18ac:	a8 f4       	brcc	.+42     	; 0x18d8 <vfprintf+0x4b6>
    18ae:	b7 01       	movw	r22, r14
    18b0:	80 e2       	ldi	r24, 0x20	; 32
    18b2:	90 e0       	ldi	r25, 0x00	; 0
    18b4:	0e 94 9f 0e 	call	0x1d3e	; 0x1d3e <fputc>
    18b8:	5a 94       	dec	r5
    18ba:	f4 cf       	rjmp	.-24     	; 0x18a4 <vfprintf+0x482>
    18bc:	f6 01       	movw	r30, r12
    18be:	97 fc       	sbrc	r9, 7
    18c0:	85 91       	lpm	r24, Z+
    18c2:	97 fe       	sbrs	r9, 7
    18c4:	81 91       	ld	r24, Z+
    18c6:	6f 01       	movw	r12, r30
    18c8:	b7 01       	movw	r22, r14
    18ca:	90 e0       	ldi	r25, 0x00	; 0
    18cc:	0e 94 9f 0e 	call	0x1d3e	; 0x1d3e <fputc>
    18d0:	51 10       	cpse	r5, r1
    18d2:	5a 94       	dec	r5
    18d4:	01 50       	subi	r16, 0x01	; 1
    18d6:	11 09       	sbc	r17, r1
    18d8:	01 15       	cp	r16, r1
    18da:	11 05       	cpc	r17, r1
    18dc:	79 f7       	brne	.-34     	; 0x18bc <vfprintf+0x49a>
    18de:	f7 c0       	rjmp	.+494    	; 0x1ace <vfprintf+0x6ac>
    18e0:	84 36       	cpi	r24, 0x64	; 100
    18e2:	11 f0       	breq	.+4      	; 0x18e8 <vfprintf+0x4c6>
    18e4:	89 36       	cpi	r24, 0x69	; 105
    18e6:	61 f5       	brne	.+88     	; 0x1940 <vfprintf+0x51e>
    18e8:	56 01       	movw	r10, r12
    18ea:	97 fe       	sbrs	r9, 7
    18ec:	09 c0       	rjmp	.+18     	; 0x1900 <vfprintf+0x4de>
    18ee:	24 e0       	ldi	r18, 0x04	; 4
    18f0:	a2 0e       	add	r10, r18
    18f2:	b1 1c       	adc	r11, r1
    18f4:	f6 01       	movw	r30, r12
    18f6:	60 81       	ld	r22, Z
    18f8:	71 81       	ldd	r23, Z+1	; 0x01
    18fa:	82 81       	ldd	r24, Z+2	; 0x02
    18fc:	93 81       	ldd	r25, Z+3	; 0x03
    18fe:	0a c0       	rjmp	.+20     	; 0x1914 <vfprintf+0x4f2>
    1900:	f2 e0       	ldi	r31, 0x02	; 2
    1902:	af 0e       	add	r10, r31
    1904:	b1 1c       	adc	r11, r1
    1906:	f6 01       	movw	r30, r12
    1908:	60 81       	ld	r22, Z
    190a:	71 81       	ldd	r23, Z+1	; 0x01
    190c:	07 2e       	mov	r0, r23
    190e:	00 0c       	add	r0, r0
    1910:	88 0b       	sbc	r24, r24
    1912:	99 0b       	sbc	r25, r25
    1914:	f9 2d       	mov	r31, r9
    1916:	ff 76       	andi	r31, 0x6F	; 111
    1918:	9f 2e       	mov	r9, r31
    191a:	97 ff       	sbrs	r25, 7
    191c:	09 c0       	rjmp	.+18     	; 0x1930 <vfprintf+0x50e>
    191e:	90 95       	com	r25
    1920:	80 95       	com	r24
    1922:	70 95       	com	r23
    1924:	61 95       	neg	r22
    1926:	7f 4f       	sbci	r23, 0xFF	; 255
    1928:	8f 4f       	sbci	r24, 0xFF	; 255
    192a:	9f 4f       	sbci	r25, 0xFF	; 255
    192c:	f0 68       	ori	r31, 0x80	; 128
    192e:	9f 2e       	mov	r9, r31
    1930:	2a e0       	ldi	r18, 0x0A	; 10
    1932:	30 e0       	ldi	r19, 0x00	; 0
    1934:	a3 01       	movw	r20, r6
    1936:	0e 94 ef 0e 	call	0x1dde	; 0x1dde <__ultoa_invert>
    193a:	c8 2e       	mov	r12, r24
    193c:	c6 18       	sub	r12, r6
    193e:	3f c0       	rjmp	.+126    	; 0x19be <vfprintf+0x59c>
    1940:	09 2d       	mov	r16, r9
    1942:	85 37       	cpi	r24, 0x75	; 117
    1944:	21 f4       	brne	.+8      	; 0x194e <vfprintf+0x52c>
    1946:	0f 7e       	andi	r16, 0xEF	; 239
    1948:	2a e0       	ldi	r18, 0x0A	; 10
    194a:	30 e0       	ldi	r19, 0x00	; 0
    194c:	1d c0       	rjmp	.+58     	; 0x1988 <vfprintf+0x566>
    194e:	09 7f       	andi	r16, 0xF9	; 249
    1950:	8f 36       	cpi	r24, 0x6F	; 111
    1952:	91 f0       	breq	.+36     	; 0x1978 <vfprintf+0x556>
    1954:	18 f4       	brcc	.+6      	; 0x195c <vfprintf+0x53a>
    1956:	88 35       	cpi	r24, 0x58	; 88
    1958:	59 f0       	breq	.+22     	; 0x1970 <vfprintf+0x54e>
    195a:	c3 c0       	rjmp	.+390    	; 0x1ae2 <vfprintf+0x6c0>
    195c:	80 37       	cpi	r24, 0x70	; 112
    195e:	19 f0       	breq	.+6      	; 0x1966 <vfprintf+0x544>
    1960:	88 37       	cpi	r24, 0x78	; 120
    1962:	11 f0       	breq	.+4      	; 0x1968 <vfprintf+0x546>
    1964:	be c0       	rjmp	.+380    	; 0x1ae2 <vfprintf+0x6c0>
    1966:	00 61       	ori	r16, 0x10	; 16
    1968:	04 ff       	sbrs	r16, 4
    196a:	09 c0       	rjmp	.+18     	; 0x197e <vfprintf+0x55c>
    196c:	04 60       	ori	r16, 0x04	; 4
    196e:	07 c0       	rjmp	.+14     	; 0x197e <vfprintf+0x55c>
    1970:	94 fe       	sbrs	r9, 4
    1972:	08 c0       	rjmp	.+16     	; 0x1984 <vfprintf+0x562>
    1974:	06 60       	ori	r16, 0x06	; 6
    1976:	06 c0       	rjmp	.+12     	; 0x1984 <vfprintf+0x562>
    1978:	28 e0       	ldi	r18, 0x08	; 8
    197a:	30 e0       	ldi	r19, 0x00	; 0
    197c:	05 c0       	rjmp	.+10     	; 0x1988 <vfprintf+0x566>
    197e:	20 e1       	ldi	r18, 0x10	; 16
    1980:	30 e0       	ldi	r19, 0x00	; 0
    1982:	02 c0       	rjmp	.+4      	; 0x1988 <vfprintf+0x566>
    1984:	20 e1       	ldi	r18, 0x10	; 16
    1986:	32 e0       	ldi	r19, 0x02	; 2
    1988:	56 01       	movw	r10, r12
    198a:	07 ff       	sbrs	r16, 7
    198c:	09 c0       	rjmp	.+18     	; 0x19a0 <vfprintf+0x57e>
    198e:	84 e0       	ldi	r24, 0x04	; 4
    1990:	a8 0e       	add	r10, r24
    1992:	b1 1c       	adc	r11, r1
    1994:	f6 01       	movw	r30, r12
    1996:	60 81       	ld	r22, Z
    1998:	71 81       	ldd	r23, Z+1	; 0x01
    199a:	82 81       	ldd	r24, Z+2	; 0x02
    199c:	93 81       	ldd	r25, Z+3	; 0x03
    199e:	08 c0       	rjmp	.+16     	; 0x19b0 <vfprintf+0x58e>
    19a0:	f2 e0       	ldi	r31, 0x02	; 2
    19a2:	af 0e       	add	r10, r31
    19a4:	b1 1c       	adc	r11, r1
    19a6:	f6 01       	movw	r30, r12
    19a8:	60 81       	ld	r22, Z
    19aa:	71 81       	ldd	r23, Z+1	; 0x01
    19ac:	80 e0       	ldi	r24, 0x00	; 0
    19ae:	90 e0       	ldi	r25, 0x00	; 0
    19b0:	a3 01       	movw	r20, r6
    19b2:	0e 94 ef 0e 	call	0x1dde	; 0x1dde <__ultoa_invert>
    19b6:	c8 2e       	mov	r12, r24
    19b8:	c6 18       	sub	r12, r6
    19ba:	0f 77       	andi	r16, 0x7F	; 127
    19bc:	90 2e       	mov	r9, r16
    19be:	96 fe       	sbrs	r9, 6
    19c0:	0b c0       	rjmp	.+22     	; 0x19d8 <vfprintf+0x5b6>
    19c2:	09 2d       	mov	r16, r9
    19c4:	0e 7f       	andi	r16, 0xFE	; 254
    19c6:	c1 16       	cp	r12, r17
    19c8:	50 f4       	brcc	.+20     	; 0x19de <vfprintf+0x5bc>
    19ca:	94 fe       	sbrs	r9, 4
    19cc:	0a c0       	rjmp	.+20     	; 0x19e2 <vfprintf+0x5c0>
    19ce:	92 fc       	sbrc	r9, 2
    19d0:	08 c0       	rjmp	.+16     	; 0x19e2 <vfprintf+0x5c0>
    19d2:	09 2d       	mov	r16, r9
    19d4:	0e 7e       	andi	r16, 0xEE	; 238
    19d6:	05 c0       	rjmp	.+10     	; 0x19e2 <vfprintf+0x5c0>
    19d8:	dc 2c       	mov	r13, r12
    19da:	09 2d       	mov	r16, r9
    19dc:	03 c0       	rjmp	.+6      	; 0x19e4 <vfprintf+0x5c2>
    19de:	dc 2c       	mov	r13, r12
    19e0:	01 c0       	rjmp	.+2      	; 0x19e4 <vfprintf+0x5c2>
    19e2:	d1 2e       	mov	r13, r17
    19e4:	04 ff       	sbrs	r16, 4
    19e6:	0d c0       	rjmp	.+26     	; 0x1a02 <vfprintf+0x5e0>
    19e8:	fe 01       	movw	r30, r28
    19ea:	ec 0d       	add	r30, r12
    19ec:	f1 1d       	adc	r31, r1
    19ee:	80 81       	ld	r24, Z
    19f0:	80 33       	cpi	r24, 0x30	; 48
    19f2:	11 f4       	brne	.+4      	; 0x19f8 <vfprintf+0x5d6>
    19f4:	09 7e       	andi	r16, 0xE9	; 233
    19f6:	09 c0       	rjmp	.+18     	; 0x1a0a <vfprintf+0x5e8>
    19f8:	02 ff       	sbrs	r16, 2
    19fa:	06 c0       	rjmp	.+12     	; 0x1a08 <vfprintf+0x5e6>
    19fc:	d3 94       	inc	r13
    19fe:	d3 94       	inc	r13
    1a00:	04 c0       	rjmp	.+8      	; 0x1a0a <vfprintf+0x5e8>
    1a02:	80 2f       	mov	r24, r16
    1a04:	86 78       	andi	r24, 0x86	; 134
    1a06:	09 f0       	breq	.+2      	; 0x1a0a <vfprintf+0x5e8>
    1a08:	d3 94       	inc	r13
    1a0a:	03 fd       	sbrc	r16, 3
    1a0c:	11 c0       	rjmp	.+34     	; 0x1a30 <vfprintf+0x60e>
    1a0e:	00 ff       	sbrs	r16, 0
    1a10:	06 c0       	rjmp	.+12     	; 0x1a1e <vfprintf+0x5fc>
    1a12:	1c 2d       	mov	r17, r12
    1a14:	d5 14       	cp	r13, r5
    1a16:	80 f4       	brcc	.+32     	; 0x1a38 <vfprintf+0x616>
    1a18:	15 0d       	add	r17, r5
    1a1a:	1d 19       	sub	r17, r13
    1a1c:	0d c0       	rjmp	.+26     	; 0x1a38 <vfprintf+0x616>
    1a1e:	d5 14       	cp	r13, r5
    1a20:	58 f4       	brcc	.+22     	; 0x1a38 <vfprintf+0x616>
    1a22:	b7 01       	movw	r22, r14
    1a24:	80 e2       	ldi	r24, 0x20	; 32
    1a26:	90 e0       	ldi	r25, 0x00	; 0
    1a28:	0e 94 9f 0e 	call	0x1d3e	; 0x1d3e <fputc>
    1a2c:	d3 94       	inc	r13
    1a2e:	f7 cf       	rjmp	.-18     	; 0x1a1e <vfprintf+0x5fc>
    1a30:	d5 14       	cp	r13, r5
    1a32:	10 f4       	brcc	.+4      	; 0x1a38 <vfprintf+0x616>
    1a34:	5d 18       	sub	r5, r13
    1a36:	01 c0       	rjmp	.+2      	; 0x1a3a <vfprintf+0x618>
    1a38:	51 2c       	mov	r5, r1
    1a3a:	04 ff       	sbrs	r16, 4
    1a3c:	10 c0       	rjmp	.+32     	; 0x1a5e <vfprintf+0x63c>
    1a3e:	b7 01       	movw	r22, r14
    1a40:	80 e3       	ldi	r24, 0x30	; 48
    1a42:	90 e0       	ldi	r25, 0x00	; 0
    1a44:	0e 94 9f 0e 	call	0x1d3e	; 0x1d3e <fputc>
    1a48:	02 ff       	sbrs	r16, 2
    1a4a:	17 c0       	rjmp	.+46     	; 0x1a7a <vfprintf+0x658>
    1a4c:	01 fd       	sbrc	r16, 1
    1a4e:	03 c0       	rjmp	.+6      	; 0x1a56 <vfprintf+0x634>
    1a50:	88 e7       	ldi	r24, 0x78	; 120
    1a52:	90 e0       	ldi	r25, 0x00	; 0
    1a54:	02 c0       	rjmp	.+4      	; 0x1a5a <vfprintf+0x638>
    1a56:	88 e5       	ldi	r24, 0x58	; 88
    1a58:	90 e0       	ldi	r25, 0x00	; 0
    1a5a:	b7 01       	movw	r22, r14
    1a5c:	0c c0       	rjmp	.+24     	; 0x1a76 <vfprintf+0x654>
    1a5e:	80 2f       	mov	r24, r16
    1a60:	86 78       	andi	r24, 0x86	; 134
    1a62:	59 f0       	breq	.+22     	; 0x1a7a <vfprintf+0x658>
    1a64:	01 ff       	sbrs	r16, 1
    1a66:	02 c0       	rjmp	.+4      	; 0x1a6c <vfprintf+0x64a>
    1a68:	8b e2       	ldi	r24, 0x2B	; 43
    1a6a:	01 c0       	rjmp	.+2      	; 0x1a6e <vfprintf+0x64c>
    1a6c:	80 e2       	ldi	r24, 0x20	; 32
    1a6e:	07 fd       	sbrc	r16, 7
    1a70:	8d e2       	ldi	r24, 0x2D	; 45
    1a72:	b7 01       	movw	r22, r14
    1a74:	90 e0       	ldi	r25, 0x00	; 0
    1a76:	0e 94 9f 0e 	call	0x1d3e	; 0x1d3e <fputc>
    1a7a:	c1 16       	cp	r12, r17
    1a7c:	38 f4       	brcc	.+14     	; 0x1a8c <vfprintf+0x66a>
    1a7e:	b7 01       	movw	r22, r14
    1a80:	80 e3       	ldi	r24, 0x30	; 48
    1a82:	90 e0       	ldi	r25, 0x00	; 0
    1a84:	0e 94 9f 0e 	call	0x1d3e	; 0x1d3e <fputc>
    1a88:	11 50       	subi	r17, 0x01	; 1
    1a8a:	f7 cf       	rjmp	.-18     	; 0x1a7a <vfprintf+0x658>
    1a8c:	ca 94       	dec	r12
    1a8e:	f3 01       	movw	r30, r6
    1a90:	ec 0d       	add	r30, r12
    1a92:	f1 1d       	adc	r31, r1
    1a94:	80 81       	ld	r24, Z
    1a96:	b7 01       	movw	r22, r14
    1a98:	90 e0       	ldi	r25, 0x00	; 0
    1a9a:	0e 94 9f 0e 	call	0x1d3e	; 0x1d3e <fputc>
    1a9e:	c1 10       	cpse	r12, r1
    1aa0:	f5 cf       	rjmp	.-22     	; 0x1a8c <vfprintf+0x66a>
    1aa2:	15 c0       	rjmp	.+42     	; 0x1ace <vfprintf+0x6ac>
    1aa4:	f4 e0       	ldi	r31, 0x04	; 4
    1aa6:	f5 15       	cp	r31, r5
    1aa8:	60 f5       	brcc	.+88     	; 0x1b02 <vfprintf+0x6e0>
    1aaa:	84 e0       	ldi	r24, 0x04	; 4
    1aac:	58 1a       	sub	r5, r24
    1aae:	93 fe       	sbrs	r9, 3
    1ab0:	1f c0       	rjmp	.+62     	; 0x1af0 <vfprintf+0x6ce>
    1ab2:	01 11       	cpse	r16, r1
    1ab4:	27 c0       	rjmp	.+78     	; 0x1b04 <vfprintf+0x6e2>
    1ab6:	2c 85       	ldd	r18, Y+12	; 0x0c
    1ab8:	23 ff       	sbrs	r18, 3
    1aba:	2a c0       	rjmp	.+84     	; 0x1b10 <vfprintf+0x6ee>
    1abc:	04 e0       	ldi	r16, 0x04	; 4
    1abe:	12 e0       	ldi	r17, 0x02	; 2
    1ac0:	39 2d       	mov	r19, r9
    1ac2:	30 71       	andi	r19, 0x10	; 16
    1ac4:	93 2e       	mov	r9, r19
    1ac6:	f8 01       	movw	r30, r16
    1ac8:	84 91       	lpm	r24, Z
    1aca:	81 11       	cpse	r24, r1
    1acc:	24 c0       	rjmp	.+72     	; 0x1b16 <vfprintf+0x6f4>
    1ace:	55 20       	and	r5, r5
    1ad0:	09 f4       	brne	.+2      	; 0x1ad4 <vfprintf+0x6b2>
    1ad2:	e4 cc       	rjmp	.-1592   	; 0x149c <vfprintf+0x7a>
    1ad4:	b7 01       	movw	r22, r14
    1ad6:	80 e2       	ldi	r24, 0x20	; 32
    1ad8:	90 e0       	ldi	r25, 0x00	; 0
    1ada:	0e 94 9f 0e 	call	0x1d3e	; 0x1d3e <fputc>
    1ade:	5a 94       	dec	r5
    1ae0:	f6 cf       	rjmp	.-20     	; 0x1ace <vfprintf+0x6ac>
    1ae2:	f7 01       	movw	r30, r14
    1ae4:	86 81       	ldd	r24, Z+6	; 0x06
    1ae6:	97 81       	ldd	r25, Z+7	; 0x07
    1ae8:	26 c0       	rjmp	.+76     	; 0x1b36 <vfprintf+0x714>
    1aea:	8f ef       	ldi	r24, 0xFF	; 255
    1aec:	9f ef       	ldi	r25, 0xFF	; 255
    1aee:	23 c0       	rjmp	.+70     	; 0x1b36 <vfprintf+0x714>
    1af0:	b7 01       	movw	r22, r14
    1af2:	80 e2       	ldi	r24, 0x20	; 32
    1af4:	90 e0       	ldi	r25, 0x00	; 0
    1af6:	0e 94 9f 0e 	call	0x1d3e	; 0x1d3e <fputc>
    1afa:	5a 94       	dec	r5
    1afc:	51 10       	cpse	r5, r1
    1afe:	f8 cf       	rjmp	.-16     	; 0x1af0 <vfprintf+0x6ce>
    1b00:	d8 cf       	rjmp	.-80     	; 0x1ab2 <vfprintf+0x690>
    1b02:	51 2c       	mov	r5, r1
    1b04:	b7 01       	movw	r22, r14
    1b06:	80 2f       	mov	r24, r16
    1b08:	90 e0       	ldi	r25, 0x00	; 0
    1b0a:	0e 94 9f 0e 	call	0x1d3e	; 0x1d3e <fputc>
    1b0e:	d3 cf       	rjmp	.-90     	; 0x1ab6 <vfprintf+0x694>
    1b10:	08 e0       	ldi	r16, 0x08	; 8
    1b12:	12 e0       	ldi	r17, 0x02	; 2
    1b14:	d5 cf       	rjmp	.-86     	; 0x1ac0 <vfprintf+0x69e>
    1b16:	91 10       	cpse	r9, r1
    1b18:	80 52       	subi	r24, 0x20	; 32
    1b1a:	b7 01       	movw	r22, r14
    1b1c:	90 e0       	ldi	r25, 0x00	; 0
    1b1e:	0e 94 9f 0e 	call	0x1d3e	; 0x1d3e <fputc>
    1b22:	0f 5f       	subi	r16, 0xFF	; 255
    1b24:	1f 4f       	sbci	r17, 0xFF	; 255
    1b26:	cf cf       	rjmp	.-98     	; 0x1ac6 <vfprintf+0x6a4>
    1b28:	23 e0       	ldi	r18, 0x03	; 3
    1b2a:	25 15       	cp	r18, r5
    1b2c:	10 f4       	brcc	.+4      	; 0x1b32 <vfprintf+0x710>
    1b2e:	83 e0       	ldi	r24, 0x03	; 3
    1b30:	bd cf       	rjmp	.-134    	; 0x1aac <vfprintf+0x68a>
    1b32:	51 2c       	mov	r5, r1
    1b34:	c0 cf       	rjmp	.-128    	; 0x1ab6 <vfprintf+0x694>
    1b36:	60 96       	adiw	r28, 0x10	; 16
    1b38:	cd bf       	out	0x3d, r28	; 61
    1b3a:	de bf       	out	0x3e, r29	; 62
    1b3c:	df 91       	pop	r29
    1b3e:	cf 91       	pop	r28
    1b40:	1f 91       	pop	r17
    1b42:	0f 91       	pop	r16
    1b44:	ff 90       	pop	r15
    1b46:	ef 90       	pop	r14
    1b48:	df 90       	pop	r13
    1b4a:	cf 90       	pop	r12
    1b4c:	bf 90       	pop	r11
    1b4e:	af 90       	pop	r10
    1b50:	9f 90       	pop	r9
    1b52:	8f 90       	pop	r8
    1b54:	7f 90       	pop	r7
    1b56:	6f 90       	pop	r6
    1b58:	5f 90       	pop	r5
    1b5a:	4f 90       	pop	r4
    1b5c:	3f 90       	pop	r3
    1b5e:	2f 90       	pop	r2
    1b60:	08 95       	ret

00001b62 <__ftoa_engine>:
    1b62:	28 30       	cpi	r18, 0x08	; 8
    1b64:	08 f0       	brcs	.+2      	; 0x1b68 <__ftoa_engine+0x6>
    1b66:	27 e0       	ldi	r18, 0x07	; 7
    1b68:	33 27       	eor	r19, r19
    1b6a:	da 01       	movw	r26, r20
    1b6c:	99 0f       	add	r25, r25
    1b6e:	31 1d       	adc	r19, r1
    1b70:	87 fd       	sbrc	r24, 7
    1b72:	91 60       	ori	r25, 0x01	; 1
    1b74:	00 96       	adiw	r24, 0x00	; 0
    1b76:	61 05       	cpc	r22, r1
    1b78:	71 05       	cpc	r23, r1
    1b7a:	39 f4       	brne	.+14     	; 0x1b8a <__ftoa_engine+0x28>
    1b7c:	32 60       	ori	r19, 0x02	; 2
    1b7e:	2e 5f       	subi	r18, 0xFE	; 254
    1b80:	3d 93       	st	X+, r19
    1b82:	30 e3       	ldi	r19, 0x30	; 48
    1b84:	2a 95       	dec	r18
    1b86:	e1 f7       	brne	.-8      	; 0x1b80 <__ftoa_engine+0x1e>
    1b88:	08 95       	ret
    1b8a:	9f 3f       	cpi	r25, 0xFF	; 255
    1b8c:	30 f0       	brcs	.+12     	; 0x1b9a <__ftoa_engine+0x38>
    1b8e:	80 38       	cpi	r24, 0x80	; 128
    1b90:	71 05       	cpc	r23, r1
    1b92:	61 05       	cpc	r22, r1
    1b94:	09 f0       	breq	.+2      	; 0x1b98 <__ftoa_engine+0x36>
    1b96:	3c 5f       	subi	r19, 0xFC	; 252
    1b98:	3c 5f       	subi	r19, 0xFC	; 252
    1b9a:	3d 93       	st	X+, r19
    1b9c:	91 30       	cpi	r25, 0x01	; 1
    1b9e:	08 f0       	brcs	.+2      	; 0x1ba2 <__ftoa_engine+0x40>
    1ba0:	80 68       	ori	r24, 0x80	; 128
    1ba2:	91 1d       	adc	r25, r1
    1ba4:	df 93       	push	r29
    1ba6:	cf 93       	push	r28
    1ba8:	1f 93       	push	r17
    1baa:	0f 93       	push	r16
    1bac:	ff 92       	push	r15
    1bae:	ef 92       	push	r14
    1bb0:	19 2f       	mov	r17, r25
    1bb2:	98 7f       	andi	r25, 0xF8	; 248
    1bb4:	96 95       	lsr	r25
    1bb6:	e9 2f       	mov	r30, r25
    1bb8:	96 95       	lsr	r25
    1bba:	96 95       	lsr	r25
    1bbc:	e9 0f       	add	r30, r25
    1bbe:	ff 27       	eor	r31, r31
    1bc0:	ea 59       	subi	r30, 0x9A	; 154
    1bc2:	fd 4f       	sbci	r31, 0xFD	; 253
    1bc4:	99 27       	eor	r25, r25
    1bc6:	33 27       	eor	r19, r19
    1bc8:	ee 24       	eor	r14, r14
    1bca:	ff 24       	eor	r15, r15
    1bcc:	a7 01       	movw	r20, r14
    1bce:	e7 01       	movw	r28, r14
    1bd0:	05 90       	lpm	r0, Z+
    1bd2:	08 94       	sec
    1bd4:	07 94       	ror	r0
    1bd6:	28 f4       	brcc	.+10     	; 0x1be2 <__ftoa_engine+0x80>
    1bd8:	36 0f       	add	r19, r22
    1bda:	e7 1e       	adc	r14, r23
    1bdc:	f8 1e       	adc	r15, r24
    1bde:	49 1f       	adc	r20, r25
    1be0:	51 1d       	adc	r21, r1
    1be2:	66 0f       	add	r22, r22
    1be4:	77 1f       	adc	r23, r23
    1be6:	88 1f       	adc	r24, r24
    1be8:	99 1f       	adc	r25, r25
    1bea:	06 94       	lsr	r0
    1bec:	a1 f7       	brne	.-24     	; 0x1bd6 <__ftoa_engine+0x74>
    1bee:	05 90       	lpm	r0, Z+
    1bf0:	07 94       	ror	r0
    1bf2:	28 f4       	brcc	.+10     	; 0x1bfe <__ftoa_engine+0x9c>
    1bf4:	e7 0e       	add	r14, r23
    1bf6:	f8 1e       	adc	r15, r24
    1bf8:	49 1f       	adc	r20, r25
    1bfa:	56 1f       	adc	r21, r22
    1bfc:	c1 1d       	adc	r28, r1
    1bfe:	77 0f       	add	r23, r23
    1c00:	88 1f       	adc	r24, r24
    1c02:	99 1f       	adc	r25, r25
    1c04:	66 1f       	adc	r22, r22
    1c06:	06 94       	lsr	r0
    1c08:	a1 f7       	brne	.-24     	; 0x1bf2 <__ftoa_engine+0x90>
    1c0a:	05 90       	lpm	r0, Z+
    1c0c:	07 94       	ror	r0
    1c0e:	28 f4       	brcc	.+10     	; 0x1c1a <__ftoa_engine+0xb8>
    1c10:	f8 0e       	add	r15, r24
    1c12:	49 1f       	adc	r20, r25
    1c14:	56 1f       	adc	r21, r22
    1c16:	c7 1f       	adc	r28, r23
    1c18:	d1 1d       	adc	r29, r1
    1c1a:	88 0f       	add	r24, r24
    1c1c:	99 1f       	adc	r25, r25
    1c1e:	66 1f       	adc	r22, r22
    1c20:	77 1f       	adc	r23, r23
    1c22:	06 94       	lsr	r0
    1c24:	a1 f7       	brne	.-24     	; 0x1c0e <__ftoa_engine+0xac>
    1c26:	05 90       	lpm	r0, Z+
    1c28:	07 94       	ror	r0
    1c2a:	20 f4       	brcc	.+8      	; 0x1c34 <__ftoa_engine+0xd2>
    1c2c:	49 0f       	add	r20, r25
    1c2e:	56 1f       	adc	r21, r22
    1c30:	c7 1f       	adc	r28, r23
    1c32:	d8 1f       	adc	r29, r24
    1c34:	99 0f       	add	r25, r25
    1c36:	66 1f       	adc	r22, r22
    1c38:	77 1f       	adc	r23, r23
    1c3a:	88 1f       	adc	r24, r24
    1c3c:	06 94       	lsr	r0
    1c3e:	a9 f7       	brne	.-22     	; 0x1c2a <__ftoa_engine+0xc8>
    1c40:	84 91       	lpm	r24, Z
    1c42:	10 95       	com	r17
    1c44:	17 70       	andi	r17, 0x07	; 7
    1c46:	41 f0       	breq	.+16     	; 0x1c58 <__ftoa_engine+0xf6>
    1c48:	d6 95       	lsr	r29
    1c4a:	c7 95       	ror	r28
    1c4c:	57 95       	ror	r21
    1c4e:	47 95       	ror	r20
    1c50:	f7 94       	ror	r15
    1c52:	e7 94       	ror	r14
    1c54:	1a 95       	dec	r17
    1c56:	c1 f7       	brne	.-16     	; 0x1c48 <__ftoa_engine+0xe6>
    1c58:	ec e0       	ldi	r30, 0x0C	; 12
    1c5a:	f2 e0       	ldi	r31, 0x02	; 2
    1c5c:	68 94       	set
    1c5e:	15 90       	lpm	r1, Z+
    1c60:	15 91       	lpm	r17, Z+
    1c62:	35 91       	lpm	r19, Z+
    1c64:	65 91       	lpm	r22, Z+
    1c66:	95 91       	lpm	r25, Z+
    1c68:	05 90       	lpm	r0, Z+
    1c6a:	7f e2       	ldi	r23, 0x2F	; 47
    1c6c:	73 95       	inc	r23
    1c6e:	e1 18       	sub	r14, r1
    1c70:	f1 0a       	sbc	r15, r17
    1c72:	43 0b       	sbc	r20, r19
    1c74:	56 0b       	sbc	r21, r22
    1c76:	c9 0b       	sbc	r28, r25
    1c78:	d0 09       	sbc	r29, r0
    1c7a:	c0 f7       	brcc	.-16     	; 0x1c6c <__ftoa_engine+0x10a>
    1c7c:	e1 0c       	add	r14, r1
    1c7e:	f1 1e       	adc	r15, r17
    1c80:	43 1f       	adc	r20, r19
    1c82:	56 1f       	adc	r21, r22
    1c84:	c9 1f       	adc	r28, r25
    1c86:	d0 1d       	adc	r29, r0
    1c88:	7e f4       	brtc	.+30     	; 0x1ca8 <__ftoa_engine+0x146>
    1c8a:	70 33       	cpi	r23, 0x30	; 48
    1c8c:	11 f4       	brne	.+4      	; 0x1c92 <__ftoa_engine+0x130>
    1c8e:	8a 95       	dec	r24
    1c90:	e6 cf       	rjmp	.-52     	; 0x1c5e <__ftoa_engine+0xfc>
    1c92:	e8 94       	clt
    1c94:	01 50       	subi	r16, 0x01	; 1
    1c96:	30 f0       	brcs	.+12     	; 0x1ca4 <__ftoa_engine+0x142>
    1c98:	08 0f       	add	r16, r24
    1c9a:	0a f4       	brpl	.+2      	; 0x1c9e <__ftoa_engine+0x13c>
    1c9c:	00 27       	eor	r16, r16
    1c9e:	02 17       	cp	r16, r18
    1ca0:	08 f4       	brcc	.+2      	; 0x1ca4 <__ftoa_engine+0x142>
    1ca2:	20 2f       	mov	r18, r16
    1ca4:	23 95       	inc	r18
    1ca6:	02 2f       	mov	r16, r18
    1ca8:	7a 33       	cpi	r23, 0x3A	; 58
    1caa:	28 f0       	brcs	.+10     	; 0x1cb6 <__ftoa_engine+0x154>
    1cac:	79 e3       	ldi	r23, 0x39	; 57
    1cae:	7d 93       	st	X+, r23
    1cb0:	2a 95       	dec	r18
    1cb2:	e9 f7       	brne	.-6      	; 0x1cae <__ftoa_engine+0x14c>
    1cb4:	10 c0       	rjmp	.+32     	; 0x1cd6 <__ftoa_engine+0x174>
    1cb6:	7d 93       	st	X+, r23
    1cb8:	2a 95       	dec	r18
    1cba:	89 f6       	brne	.-94     	; 0x1c5e <__ftoa_engine+0xfc>
    1cbc:	06 94       	lsr	r0
    1cbe:	97 95       	ror	r25
    1cc0:	67 95       	ror	r22
    1cc2:	37 95       	ror	r19
    1cc4:	17 95       	ror	r17
    1cc6:	17 94       	ror	r1
    1cc8:	e1 18       	sub	r14, r1
    1cca:	f1 0a       	sbc	r15, r17
    1ccc:	43 0b       	sbc	r20, r19
    1cce:	56 0b       	sbc	r21, r22
    1cd0:	c9 0b       	sbc	r28, r25
    1cd2:	d0 09       	sbc	r29, r0
    1cd4:	98 f0       	brcs	.+38     	; 0x1cfc <__ftoa_engine+0x19a>
    1cd6:	23 95       	inc	r18
    1cd8:	7e 91       	ld	r23, -X
    1cda:	73 95       	inc	r23
    1cdc:	7a 33       	cpi	r23, 0x3A	; 58
    1cde:	08 f0       	brcs	.+2      	; 0x1ce2 <__ftoa_engine+0x180>
    1ce0:	70 e3       	ldi	r23, 0x30	; 48
    1ce2:	7c 93       	st	X, r23
    1ce4:	20 13       	cpse	r18, r16
    1ce6:	b8 f7       	brcc	.-18     	; 0x1cd6 <__ftoa_engine+0x174>
    1ce8:	7e 91       	ld	r23, -X
    1cea:	70 61       	ori	r23, 0x10	; 16
    1cec:	7d 93       	st	X+, r23
    1cee:	30 f0       	brcs	.+12     	; 0x1cfc <__ftoa_engine+0x19a>
    1cf0:	83 95       	inc	r24
    1cf2:	71 e3       	ldi	r23, 0x31	; 49
    1cf4:	7d 93       	st	X+, r23
    1cf6:	70 e3       	ldi	r23, 0x30	; 48
    1cf8:	2a 95       	dec	r18
    1cfa:	e1 f7       	brne	.-8      	; 0x1cf4 <__ftoa_engine+0x192>
    1cfc:	11 24       	eor	r1, r1
    1cfe:	ef 90       	pop	r14
    1d00:	ff 90       	pop	r15
    1d02:	0f 91       	pop	r16
    1d04:	1f 91       	pop	r17
    1d06:	cf 91       	pop	r28
    1d08:	df 91       	pop	r29
    1d0a:	99 27       	eor	r25, r25
    1d0c:	87 fd       	sbrc	r24, 7
    1d0e:	90 95       	com	r25
    1d10:	08 95       	ret

00001d12 <strnlen_P>:
    1d12:	fc 01       	movw	r30, r24
    1d14:	05 90       	lpm	r0, Z+
    1d16:	61 50       	subi	r22, 0x01	; 1
    1d18:	70 40       	sbci	r23, 0x00	; 0
    1d1a:	01 10       	cpse	r0, r1
    1d1c:	d8 f7       	brcc	.-10     	; 0x1d14 <strnlen_P+0x2>
    1d1e:	80 95       	com	r24
    1d20:	90 95       	com	r25
    1d22:	8e 0f       	add	r24, r30
    1d24:	9f 1f       	adc	r25, r31
    1d26:	08 95       	ret

00001d28 <strnlen>:
    1d28:	fc 01       	movw	r30, r24
    1d2a:	61 50       	subi	r22, 0x01	; 1
    1d2c:	70 40       	sbci	r23, 0x00	; 0
    1d2e:	01 90       	ld	r0, Z+
    1d30:	01 10       	cpse	r0, r1
    1d32:	d8 f7       	brcc	.-10     	; 0x1d2a <strnlen+0x2>
    1d34:	80 95       	com	r24
    1d36:	90 95       	com	r25
    1d38:	8e 0f       	add	r24, r30
    1d3a:	9f 1f       	adc	r25, r31
    1d3c:	08 95       	ret

00001d3e <fputc>:
    1d3e:	0f 93       	push	r16
    1d40:	1f 93       	push	r17
    1d42:	cf 93       	push	r28
    1d44:	df 93       	push	r29
    1d46:	fb 01       	movw	r30, r22
    1d48:	23 81       	ldd	r18, Z+3	; 0x03
    1d4a:	21 fd       	sbrc	r18, 1
    1d4c:	03 c0       	rjmp	.+6      	; 0x1d54 <fputc+0x16>
    1d4e:	8f ef       	ldi	r24, 0xFF	; 255
    1d50:	9f ef       	ldi	r25, 0xFF	; 255
    1d52:	2c c0       	rjmp	.+88     	; 0x1dac <fputc+0x6e>
    1d54:	22 ff       	sbrs	r18, 2
    1d56:	16 c0       	rjmp	.+44     	; 0x1d84 <fputc+0x46>
    1d58:	46 81       	ldd	r20, Z+6	; 0x06
    1d5a:	57 81       	ldd	r21, Z+7	; 0x07
    1d5c:	24 81       	ldd	r18, Z+4	; 0x04
    1d5e:	35 81       	ldd	r19, Z+5	; 0x05
    1d60:	42 17       	cp	r20, r18
    1d62:	53 07       	cpc	r21, r19
    1d64:	44 f4       	brge	.+16     	; 0x1d76 <fputc+0x38>
    1d66:	a0 81       	ld	r26, Z
    1d68:	b1 81       	ldd	r27, Z+1	; 0x01
    1d6a:	9d 01       	movw	r18, r26
    1d6c:	2f 5f       	subi	r18, 0xFF	; 255
    1d6e:	3f 4f       	sbci	r19, 0xFF	; 255
    1d70:	20 83       	st	Z, r18
    1d72:	31 83       	std	Z+1, r19	; 0x01
    1d74:	8c 93       	st	X, r24
    1d76:	26 81       	ldd	r18, Z+6	; 0x06
    1d78:	37 81       	ldd	r19, Z+7	; 0x07
    1d7a:	2f 5f       	subi	r18, 0xFF	; 255
    1d7c:	3f 4f       	sbci	r19, 0xFF	; 255
    1d7e:	26 83       	std	Z+6, r18	; 0x06
    1d80:	37 83       	std	Z+7, r19	; 0x07
    1d82:	14 c0       	rjmp	.+40     	; 0x1dac <fputc+0x6e>
    1d84:	8b 01       	movw	r16, r22
    1d86:	ec 01       	movw	r28, r24
    1d88:	fb 01       	movw	r30, r22
    1d8a:	00 84       	ldd	r0, Z+8	; 0x08
    1d8c:	f1 85       	ldd	r31, Z+9	; 0x09
    1d8e:	e0 2d       	mov	r30, r0
    1d90:	19 95       	eicall
    1d92:	89 2b       	or	r24, r25
    1d94:	e1 f6       	brne	.-72     	; 0x1d4e <fputc+0x10>
    1d96:	d8 01       	movw	r26, r16
    1d98:	16 96       	adiw	r26, 0x06	; 6
    1d9a:	8d 91       	ld	r24, X+
    1d9c:	9c 91       	ld	r25, X
    1d9e:	17 97       	sbiw	r26, 0x07	; 7
    1da0:	01 96       	adiw	r24, 0x01	; 1
    1da2:	16 96       	adiw	r26, 0x06	; 6
    1da4:	8d 93       	st	X+, r24
    1da6:	9c 93       	st	X, r25
    1da8:	17 97       	sbiw	r26, 0x07	; 7
    1daa:	ce 01       	movw	r24, r28
    1dac:	df 91       	pop	r29
    1dae:	cf 91       	pop	r28
    1db0:	1f 91       	pop	r17
    1db2:	0f 91       	pop	r16
    1db4:	08 95       	ret

00001db6 <printf>:
    1db6:	cf 93       	push	r28
    1db8:	df 93       	push	r29
    1dba:	cd b7       	in	r28, 0x3d	; 61
    1dbc:	de b7       	in	r29, 0x3e	; 62
    1dbe:	ae 01       	movw	r20, r28
    1dc0:	4a 5f       	subi	r20, 0xFA	; 250
    1dc2:	5f 4f       	sbci	r21, 0xFF	; 255
    1dc4:	fa 01       	movw	r30, r20
    1dc6:	61 91       	ld	r22, Z+
    1dc8:	71 91       	ld	r23, Z+
    1dca:	af 01       	movw	r20, r30
    1dcc:	80 91 85 20 	lds	r24, 0x2085	; 0x802085 <__iob+0x2>
    1dd0:	90 91 86 20 	lds	r25, 0x2086	; 0x802086 <__iob+0x3>
    1dd4:	0e 94 11 0a 	call	0x1422	; 0x1422 <vfprintf>
    1dd8:	df 91       	pop	r29
    1dda:	cf 91       	pop	r28
    1ddc:	08 95       	ret

00001dde <__ultoa_invert>:
    1dde:	fa 01       	movw	r30, r20
    1de0:	aa 27       	eor	r26, r26
    1de2:	28 30       	cpi	r18, 0x08	; 8
    1de4:	51 f1       	breq	.+84     	; 0x1e3a <__ultoa_invert+0x5c>
    1de6:	20 31       	cpi	r18, 0x10	; 16
    1de8:	81 f1       	breq	.+96     	; 0x1e4a <__ultoa_invert+0x6c>
    1dea:	e8 94       	clt
    1dec:	6f 93       	push	r22
    1dee:	6e 7f       	andi	r22, 0xFE	; 254
    1df0:	6e 5f       	subi	r22, 0xFE	; 254
    1df2:	7f 4f       	sbci	r23, 0xFF	; 255
    1df4:	8f 4f       	sbci	r24, 0xFF	; 255
    1df6:	9f 4f       	sbci	r25, 0xFF	; 255
    1df8:	af 4f       	sbci	r26, 0xFF	; 255
    1dfa:	b1 e0       	ldi	r27, 0x01	; 1
    1dfc:	3e d0       	rcall	.+124    	; 0x1e7a <__ultoa_invert+0x9c>
    1dfe:	b4 e0       	ldi	r27, 0x04	; 4
    1e00:	3c d0       	rcall	.+120    	; 0x1e7a <__ultoa_invert+0x9c>
    1e02:	67 0f       	add	r22, r23
    1e04:	78 1f       	adc	r23, r24
    1e06:	89 1f       	adc	r24, r25
    1e08:	9a 1f       	adc	r25, r26
    1e0a:	a1 1d       	adc	r26, r1
    1e0c:	68 0f       	add	r22, r24
    1e0e:	79 1f       	adc	r23, r25
    1e10:	8a 1f       	adc	r24, r26
    1e12:	91 1d       	adc	r25, r1
    1e14:	a1 1d       	adc	r26, r1
    1e16:	6a 0f       	add	r22, r26
    1e18:	71 1d       	adc	r23, r1
    1e1a:	81 1d       	adc	r24, r1
    1e1c:	91 1d       	adc	r25, r1
    1e1e:	a1 1d       	adc	r26, r1
    1e20:	20 d0       	rcall	.+64     	; 0x1e62 <__ultoa_invert+0x84>
    1e22:	09 f4       	brne	.+2      	; 0x1e26 <__ultoa_invert+0x48>
    1e24:	68 94       	set
    1e26:	3f 91       	pop	r19
    1e28:	2a e0       	ldi	r18, 0x0A	; 10
    1e2a:	26 9f       	mul	r18, r22
    1e2c:	11 24       	eor	r1, r1
    1e2e:	30 19       	sub	r19, r0
    1e30:	30 5d       	subi	r19, 0xD0	; 208
    1e32:	31 93       	st	Z+, r19
    1e34:	de f6       	brtc	.-74     	; 0x1dec <__ultoa_invert+0xe>
    1e36:	cf 01       	movw	r24, r30
    1e38:	08 95       	ret
    1e3a:	46 2f       	mov	r20, r22
    1e3c:	47 70       	andi	r20, 0x07	; 7
    1e3e:	40 5d       	subi	r20, 0xD0	; 208
    1e40:	41 93       	st	Z+, r20
    1e42:	b3 e0       	ldi	r27, 0x03	; 3
    1e44:	0f d0       	rcall	.+30     	; 0x1e64 <__ultoa_invert+0x86>
    1e46:	c9 f7       	brne	.-14     	; 0x1e3a <__ultoa_invert+0x5c>
    1e48:	f6 cf       	rjmp	.-20     	; 0x1e36 <__ultoa_invert+0x58>
    1e4a:	46 2f       	mov	r20, r22
    1e4c:	4f 70       	andi	r20, 0x0F	; 15
    1e4e:	40 5d       	subi	r20, 0xD0	; 208
    1e50:	4a 33       	cpi	r20, 0x3A	; 58
    1e52:	18 f0       	brcs	.+6      	; 0x1e5a <__ultoa_invert+0x7c>
    1e54:	49 5d       	subi	r20, 0xD9	; 217
    1e56:	31 fd       	sbrc	r19, 1
    1e58:	40 52       	subi	r20, 0x20	; 32
    1e5a:	41 93       	st	Z+, r20
    1e5c:	02 d0       	rcall	.+4      	; 0x1e62 <__ultoa_invert+0x84>
    1e5e:	a9 f7       	brne	.-22     	; 0x1e4a <__ultoa_invert+0x6c>
    1e60:	ea cf       	rjmp	.-44     	; 0x1e36 <__ultoa_invert+0x58>
    1e62:	b4 e0       	ldi	r27, 0x04	; 4
    1e64:	a6 95       	lsr	r26
    1e66:	97 95       	ror	r25
    1e68:	87 95       	ror	r24
    1e6a:	77 95       	ror	r23
    1e6c:	67 95       	ror	r22
    1e6e:	ba 95       	dec	r27
    1e70:	c9 f7       	brne	.-14     	; 0x1e64 <__ultoa_invert+0x86>
    1e72:	00 97       	sbiw	r24, 0x00	; 0
    1e74:	61 05       	cpc	r22, r1
    1e76:	71 05       	cpc	r23, r1
    1e78:	08 95       	ret
    1e7a:	9b 01       	movw	r18, r22
    1e7c:	ac 01       	movw	r20, r24
    1e7e:	0a 2e       	mov	r0, r26
    1e80:	06 94       	lsr	r0
    1e82:	57 95       	ror	r21
    1e84:	47 95       	ror	r20
    1e86:	37 95       	ror	r19
    1e88:	27 95       	ror	r18
    1e8a:	ba 95       	dec	r27
    1e8c:	c9 f7       	brne	.-14     	; 0x1e80 <__ultoa_invert+0xa2>
    1e8e:	62 0f       	add	r22, r18
    1e90:	73 1f       	adc	r23, r19
    1e92:	84 1f       	adc	r24, r20
    1e94:	95 1f       	adc	r25, r21
    1e96:	a0 1d       	adc	r26, r0
    1e98:	08 95       	ret

00001e9a <_exit>:
    1e9a:	f8 94       	cli

00001e9c <__stop_program>:
    1e9c:	ff cf       	rjmp	.-2      	; 0x1e9c <__stop_program>
