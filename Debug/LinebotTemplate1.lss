
LinebotTemplate1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00001ddc  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000006a  00802000  00001ddc  00001e70  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000015  0080206a  0080206a  00001eda  2**0
                  ALLOC
  3 .comment      0000008c  00000000  00000000  00001eda  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001f68  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001b0  00000000  00000000  00001fa8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00004a46  00000000  00000000  00002158  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00003062  00000000  00000000  00006b9e  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001426  00000000  00000000  00009c00  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000520  00000000  00000000  0000b028  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000295b  00000000  00000000  0000b548  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000009c8  00000000  00000000  0000dea3  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000130  00000000  00000000  0000e86b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 83 01 	jmp	0x306	; 0x306 <__ctors_end>
       4:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
       8:	0c 94 aa 03 	jmp	0x754	; 0x754 <__vector_2>
       c:	0c 94 12 04 	jmp	0x824	; 0x824 <__vector_3>
      10:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      14:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      18:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      1c:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      20:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      24:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      28:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      2c:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      30:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      34:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      38:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      3c:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      40:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      44:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      48:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      4c:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      50:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      54:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      58:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      5c:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      60:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      64:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      68:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      6c:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      70:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      74:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      78:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      7c:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      80:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      84:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      88:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      8c:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      90:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      94:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      98:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      9c:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      a0:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      a4:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      a8:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      ac:	0c 94 7a 04 	jmp	0x8f4	; 0x8f4 <__vector_43>
      b0:	0c 94 e2 04 	jmp	0x9c4	; 0x9c4 <__vector_44>
      b4:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      b8:	0c 94 dd 06 	jmp	0xdba	; 0xdba <__vector_46>
      bc:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      c0:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      c4:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      c8:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      cc:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      d0:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      d4:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      d8:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      dc:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      e0:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      e4:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      e8:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      ec:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      f0:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      f4:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      f8:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      fc:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     100:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     104:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     108:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     10c:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     110:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     114:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     118:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     11c:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     120:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     124:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     128:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     12c:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     130:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     134:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     138:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     13c:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     140:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     144:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     148:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     14c:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     150:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     154:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     158:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     15c:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     160:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     164:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     168:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     16c:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     170:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     174:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     178:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     17c:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     180:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     184:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     188:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     18c:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     190:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     194:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     198:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     19c:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     1a0:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     1a4:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     1a8:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     1ac:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     1b0:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     1b4:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     1b8:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     1bc:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     1c0:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     1c4:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     1c8:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     1cc:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     1d0:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     1d4:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     1d8:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     1dc:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     1e0:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     1e4:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     1e8:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     1ec:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     1f0:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     1f4:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     1f8:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>

000001fc <__trampolines_start>:
     1fc:	0c 94 96 07 	jmp	0xf2c	; 0xf2c <stdio_getchar>
     200:	0c 94 71 07 	jmp	0xee2	; 0xee2 <stdio_putchar>

00000204 <__trampolines_end>:
     204:	6e 61       	ori	r22, 0x1E	; 30
     206:	6e 00       	.word	0x006e	; ????

00000208 <__c.2332>:
     208:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
     218:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
     228:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
     238:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
     248:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
     258:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
     268:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
     278:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
     288:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
     298:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     2a8:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     2b8:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     2c8:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     2d8:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     2e8:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     2f8:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

00000306 <__ctors_end>:
     306:	11 24       	eor	r1, r1
     308:	1f be       	out	0x3f, r1	; 63
     30a:	cf ef       	ldi	r28, 0xFF	; 255
     30c:	cd bf       	out	0x3d, r28	; 61
     30e:	df e9       	ldi	r29, 0x9F	; 159
     310:	de bf       	out	0x3e, r29	; 62
     312:	00 e0       	ldi	r16, 0x00	; 0
     314:	0c bf       	out	0x3c, r16	; 60

00000316 <__do_copy_data>:
     316:	10 e2       	ldi	r17, 0x20	; 32
     318:	a0 e0       	ldi	r26, 0x00	; 0
     31a:	b0 e2       	ldi	r27, 0x20	; 32
     31c:	ec ed       	ldi	r30, 0xDC	; 220
     31e:	fd e1       	ldi	r31, 0x1D	; 29
     320:	00 e0       	ldi	r16, 0x00	; 0
     322:	0b bf       	out	0x3b, r16	; 59
     324:	02 c0       	rjmp	.+4      	; 0x32a <__do_copy_data+0x14>
     326:	07 90       	elpm	r0, Z+
     328:	0d 92       	st	X+, r0
     32a:	aa 36       	cpi	r26, 0x6A	; 106
     32c:	b1 07       	cpc	r27, r17
     32e:	d9 f7       	brne	.-10     	; 0x326 <__do_copy_data+0x10>

00000330 <__do_clear_bss>:
     330:	20 e2       	ldi	r18, 0x20	; 32
     332:	aa e6       	ldi	r26, 0x6A	; 106
     334:	b0 e2       	ldi	r27, 0x20	; 32
     336:	01 c0       	rjmp	.+2      	; 0x33a <.do_clear_bss_start>

00000338 <.do_clear_bss_loop>:
     338:	1d 92       	st	X+, r1

0000033a <.do_clear_bss_start>:
     33a:	af 37       	cpi	r26, 0x7F	; 127
     33c:	b2 07       	cpc	r27, r18
     33e:	e1 f7       	brne	.-8      	; 0x338 <.do_clear_bss_loop>
     340:	0e 94 b0 07 	call	0xf60	; 0xf60 <main>
     344:	0c 94 ec 0e 	jmp	0x1dd8	; 0x1dd8 <_exit>

00000348 <__bad_interrupt>:
     348:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000034c <DriverAdps9960Init>:

#define REG_ID 0x92
#define ID 146

void DriverAdps9960Init(void)
{
     34c:	0f 93       	push	r16
     34e:	cf 93       	push	r28
     350:	df 93       	push	r29
     352:	00 d0       	rcall	.+0      	; 0x354 <DriverAdps9960Init+0x8>
     354:	cd b7       	in	r28, 0x3d	; 61
     356:	de b7       	in	r29, 0x3e	; 62
	uint8_t res;
	uint8_t Buffer[2];
	Buffer[0]=REG_ENABLE;
     358:	80 e8       	ldi	r24, 0x80	; 128
     35a:	8a 83       	std	Y+2, r24	; 0x02
	Buffer[1]=(1<<REG_ENABLE_PON);
     35c:	81 e0       	ldi	r24, 0x01	; 1
     35e:	8b 83       	std	Y+3, r24	; 0x03
	res=TWIMWrite(ADPS9960_ADDR,Buffer,2);
     360:	ce 01       	movw	r24, r28
     362:	02 96       	adiw	r24, 0x02	; 2
     364:	42 e0       	ldi	r20, 0x02	; 2
     366:	bc 01       	movw	r22, r24
     368:	89 e3       	ldi	r24, 0x39	; 57
     36a:	0e 94 88 05 	call	0xb10	; 0xb10 <TWIMWrite>
     36e:	89 83       	std	Y+1, r24	; 0x01
	printf ("TwimWrite:%d\r\n",res);
     370:	89 81       	ldd	r24, Y+1	; 0x01
     372:	88 2f       	mov	r24, r24
     374:	90 e0       	ldi	r25, 0x00	; 0
     376:	29 2f       	mov	r18, r25
     378:	2f 93       	push	r18
     37a:	8f 93       	push	r24
     37c:	8f e0       	ldi	r24, 0x0F	; 15
     37e:	90 e2       	ldi	r25, 0x20	; 32
     380:	89 2f       	mov	r24, r25
     382:	8f 93       	push	r24
     384:	8f e0       	ldi	r24, 0x0F	; 15
     386:	90 e2       	ldi	r25, 0x20	; 32
     388:	8f 93       	push	r24
     38a:	0e 94 7a 0e 	call	0x1cf4	; 0x1cf4 <printf>
     38e:	0f 90       	pop	r0
     390:	0f 90       	pop	r0
     392:	0f 90       	pop	r0
     394:	0f 90       	pop	r0
	
	Buffer[0]=REG_ID;
     396:	82 e9       	ldi	r24, 0x92	; 146
     398:	8a 83       	std	Y+2, r24	; 0x02
	res=TWIMWriteRead(ADPS9960_ADDR,Buffer,1,Buffer,1);
     39a:	9e 01       	movw	r18, r28
     39c:	2e 5f       	subi	r18, 0xFE	; 254
     39e:	3f 4f       	sbci	r19, 0xFF	; 255
     3a0:	ce 01       	movw	r24, r28
     3a2:	02 96       	adiw	r24, 0x02	; 2
     3a4:	01 e0       	ldi	r16, 0x01	; 1
     3a6:	41 e0       	ldi	r20, 0x01	; 1
     3a8:	bc 01       	movw	r22, r24
     3aa:	89 e3       	ldi	r24, 0x39	; 57
     3ac:	0e 94 a7 05 	call	0xb4e	; 0xb4e <TWIMWriteRead>
     3b0:	89 83       	std	Y+1, r24	; 0x01
	if (Buffer[0]!=ID)
     3b2:	8a 81       	ldd	r24, Y+2	; 0x02
     3b4:	82 39       	cpi	r24, 0x92	; 146
     3b6:	99 f0       	breq	.+38     	; 0x3de <DriverAdps9960Init+0x92>
		printf ("ADPS9960 ID readback fail: %d read\r\n",Buffer[0]);
     3b8:	8a 81       	ldd	r24, Y+2	; 0x02
     3ba:	88 2f       	mov	r24, r24
     3bc:	90 e0       	ldi	r25, 0x00	; 0
     3be:	29 2f       	mov	r18, r25
     3c0:	2f 93       	push	r18
     3c2:	8f 93       	push	r24
     3c4:	8e e1       	ldi	r24, 0x1E	; 30
     3c6:	90 e2       	ldi	r25, 0x20	; 32
     3c8:	89 2f       	mov	r24, r25
     3ca:	8f 93       	push	r24
     3cc:	8e e1       	ldi	r24, 0x1E	; 30
     3ce:	90 e2       	ldi	r25, 0x20	; 32
     3d0:	8f 93       	push	r24
     3d2:	0e 94 7a 0e 	call	0x1cf4	; 0x1cf4 <printf>
     3d6:	0f 90       	pop	r0
     3d8:	0f 90       	pop	r0
     3da:	0f 90       	pop	r0
     3dc:	0f 90       	pop	r0

	Buffer[0]=REG_ATIME;
     3de:	81 e8       	ldi	r24, 0x81	; 129
     3e0:	8a 83       	std	Y+2, r24	; 0x02
	Buffer[1]=219; //100ms integration time
     3e2:	8b ed       	ldi	r24, 0xDB	; 219
     3e4:	8b 83       	std	Y+3, r24	; 0x03
	res=TWIMWrite(ADPS9960_ADDR,Buffer,2);
     3e6:	ce 01       	movw	r24, r28
     3e8:	02 96       	adiw	r24, 0x02	; 2
     3ea:	42 e0       	ldi	r20, 0x02	; 2
     3ec:	bc 01       	movw	r22, r24
     3ee:	89 e3       	ldi	r24, 0x39	; 57
     3f0:	0e 94 88 05 	call	0xb10	; 0xb10 <TWIMWrite>
     3f4:	89 83       	std	Y+1, r24	; 0x01

	Buffer[0]=REG_CTRL1;
     3f6:	8f e8       	ldi	r24, 0x8F	; 143
     3f8:	8a 83       	std	Y+2, r24	; 0x02
	Buffer[1]=0b11<<REG_CTRL1_AGAIN; //max gain
     3fa:	83 e0       	ldi	r24, 0x03	; 3
     3fc:	8b 83       	std	Y+3, r24	; 0x03
	res=TWIMWrite(ADPS9960_ADDR,Buffer,2);
     3fe:	ce 01       	movw	r24, r28
     400:	02 96       	adiw	r24, 0x02	; 2
     402:	42 e0       	ldi	r20, 0x02	; 2
     404:	bc 01       	movw	r22, r24
     406:	89 e3       	ldi	r24, 0x39	; 57
     408:	0e 94 88 05 	call	0xb10	; 0xb10 <TWIMWrite>
     40c:	89 83       	std	Y+1, r24	; 0x01

}
     40e:	00 00       	nop
     410:	23 96       	adiw	r28, 0x03	; 3
     412:	cd bf       	out	0x3d, r28	; 61
     414:	de bf       	out	0x3e, r29	; 62
     416:	df 91       	pop	r29
     418:	cf 91       	pop	r28
     41a:	0f 91       	pop	r16
     41c:	08 95       	ret

0000041e <DriverAdps9960Get>:

void DriverAdps9960Get(uint16_t *Clear,uint16_t *Red,uint16_t *Green, uint16_t *Blue)
{
     41e:	0f 93       	push	r16
     420:	cf 93       	push	r28
     422:	df 93       	push	r29
     424:	cd b7       	in	r28, 0x3d	; 61
     426:	de b7       	in	r29, 0x3e	; 62
     428:	6c 97       	sbiw	r28, 0x1c	; 28
     42a:	cd bf       	out	0x3d, r28	; 61
     42c:	de bf       	out	0x3e, r29	; 62
     42e:	8d 8b       	std	Y+21, r24	; 0x15
     430:	9e 8b       	std	Y+22, r25	; 0x16
     432:	6f 8b       	std	Y+23, r22	; 0x17
     434:	78 8f       	std	Y+24, r23	; 0x18
     436:	49 8f       	std	Y+25, r20	; 0x19
     438:	5a 8f       	std	Y+26, r21	; 0x1a
     43a:	2b 8f       	std	Y+27, r18	; 0x1b
     43c:	3c 8f       	std	Y+28, r19	; 0x1c
	uint8_t res;
	uint8_t Buffer[9];
	uint16_t *C=(uint16_t *) &(Buffer[0]),*R=(uint16_t *) &(Buffer[2]),*G=(uint16_t *) &(Buffer[4]),*B=(uint16_t *) &(Buffer[6]);
     43e:	ce 01       	movw	r24, r28
     440:	0c 96       	adiw	r24, 0x0c	; 12
     442:	89 83       	std	Y+1, r24	; 0x01
     444:	9a 83       	std	Y+2, r25	; 0x02
     446:	ce 01       	movw	r24, r28
     448:	0c 96       	adiw	r24, 0x0c	; 12
     44a:	02 96       	adiw	r24, 0x02	; 2
     44c:	8b 83       	std	Y+3, r24	; 0x03
     44e:	9c 83       	std	Y+4, r25	; 0x04
     450:	ce 01       	movw	r24, r28
     452:	0c 96       	adiw	r24, 0x0c	; 12
     454:	04 96       	adiw	r24, 0x04	; 4
     456:	8d 83       	std	Y+5, r24	; 0x05
     458:	9e 83       	std	Y+6, r25	; 0x06
     45a:	ce 01       	movw	r24, r28
     45c:	0c 96       	adiw	r24, 0x0c	; 12
     45e:	06 96       	adiw	r24, 0x06	; 6
     460:	8f 83       	std	Y+7, r24	; 0x07
     462:	98 87       	std	Y+8, r25	; 0x08
	uint8_t *Status=&(Buffer[0]);
     464:	ce 01       	movw	r24, r28
     466:	0c 96       	adiw	r24, 0x0c	; 12
     468:	89 87       	std	Y+9, r24	; 0x09
     46a:	9a 87       	std	Y+10, r25	; 0x0a


	Buffer[0]=REG_ENABLE;
     46c:	80 e8       	ldi	r24, 0x80	; 128
     46e:	8c 87       	std	Y+12, r24	; 0x0c
	Buffer[1]=(1<<REG_ENABLE_PON) | (1<<REG_ENABLE_AEN);
     470:	83 e0       	ldi	r24, 0x03	; 3
     472:	8d 87       	std	Y+13, r24	; 0x0d
	res=TWIMWrite(ADPS9960_ADDR,Buffer,2);
     474:	ce 01       	movw	r24, r28
     476:	0c 96       	adiw	r24, 0x0c	; 12
     478:	42 e0       	ldi	r20, 0x02	; 2
     47a:	bc 01       	movw	r22, r24
     47c:	89 e3       	ldi	r24, 0x39	; 57
     47e:	0e 94 88 05 	call	0xb10	; 0xb10 <TWIMWrite>
     482:	8b 87       	std	Y+11, r24	; 0x0b


	do 
	{
		Buffer[0]=REG_STATUS;
     484:	83 e9       	ldi	r24, 0x93	; 147
     486:	8c 87       	std	Y+12, r24	; 0x0c
		res=TWIMWriteRead(ADPS9960_ADDR,Buffer,1,Buffer,1);
     488:	9e 01       	movw	r18, r28
     48a:	24 5f       	subi	r18, 0xF4	; 244
     48c:	3f 4f       	sbci	r19, 0xFF	; 255
     48e:	ce 01       	movw	r24, r28
     490:	0c 96       	adiw	r24, 0x0c	; 12
     492:	01 e0       	ldi	r16, 0x01	; 1
     494:	41 e0       	ldi	r20, 0x01	; 1
     496:	bc 01       	movw	r22, r24
     498:	89 e3       	ldi	r24, 0x39	; 57
     49a:	0e 94 a7 05 	call	0xb4e	; 0xb4e <TWIMWriteRead>
     49e:	8b 87       	std	Y+11, r24	; 0x0b
		//printf ("STATUS:%d\r\n",Buffer[0]);
	} while (!(Buffer[0] & (1<<REG_STATUX_AVALID)) );
     4a0:	8c 85       	ldd	r24, Y+12	; 0x0c
     4a2:	88 2f       	mov	r24, r24
     4a4:	90 e0       	ldi	r25, 0x00	; 0
     4a6:	81 70       	andi	r24, 0x01	; 1
     4a8:	99 27       	eor	r25, r25
     4aa:	89 2b       	or	r24, r25
     4ac:	59 f3       	breq	.-42     	; 0x484 <DriverAdps9960Get+0x66>


	Buffer[0]=REG_CDATA;
     4ae:	84 e9       	ldi	r24, 0x94	; 148
     4b0:	8c 87       	std	Y+12, r24	; 0x0c
	res=TWIMWriteRead(ADPS9960_ADDR,Buffer,1,Buffer,8);
     4b2:	9e 01       	movw	r18, r28
     4b4:	24 5f       	subi	r18, 0xF4	; 244
     4b6:	3f 4f       	sbci	r19, 0xFF	; 255
     4b8:	ce 01       	movw	r24, r28
     4ba:	0c 96       	adiw	r24, 0x0c	; 12
     4bc:	08 e0       	ldi	r16, 0x08	; 8
     4be:	41 e0       	ldi	r20, 0x01	; 1
     4c0:	bc 01       	movw	r22, r24
     4c2:	89 e3       	ldi	r24, 0x39	; 57
     4c4:	0e 94 a7 05 	call	0xb4e	; 0xb4e <TWIMWriteRead>
     4c8:	8b 87       	std	Y+11, r24	; 0x0b
	//printf ("TwimWriteRead:%d\r\n",res);

	if (Clear!=NULL) *Clear=*C;	
     4ca:	8d 89       	ldd	r24, Y+21	; 0x15
     4cc:	9e 89       	ldd	r25, Y+22	; 0x16
     4ce:	89 2b       	or	r24, r25
     4d0:	51 f0       	breq	.+20     	; 0x4e6 <DriverAdps9960Get+0xc8>
     4d2:	89 81       	ldd	r24, Y+1	; 0x01
     4d4:	9a 81       	ldd	r25, Y+2	; 0x02
     4d6:	fc 01       	movw	r30, r24
     4d8:	20 81       	ld	r18, Z
     4da:	31 81       	ldd	r19, Z+1	; 0x01
     4dc:	8d 89       	ldd	r24, Y+21	; 0x15
     4de:	9e 89       	ldd	r25, Y+22	; 0x16
     4e0:	fc 01       	movw	r30, r24
     4e2:	20 83       	st	Z, r18
     4e4:	31 83       	std	Z+1, r19	; 0x01
	if (Red!=NULL) *Red=*R;
     4e6:	8f 89       	ldd	r24, Y+23	; 0x17
     4e8:	98 8d       	ldd	r25, Y+24	; 0x18
     4ea:	89 2b       	or	r24, r25
     4ec:	51 f0       	breq	.+20     	; 0x502 <DriverAdps9960Get+0xe4>
     4ee:	8b 81       	ldd	r24, Y+3	; 0x03
     4f0:	9c 81       	ldd	r25, Y+4	; 0x04
     4f2:	fc 01       	movw	r30, r24
     4f4:	20 81       	ld	r18, Z
     4f6:	31 81       	ldd	r19, Z+1	; 0x01
     4f8:	8f 89       	ldd	r24, Y+23	; 0x17
     4fa:	98 8d       	ldd	r25, Y+24	; 0x18
     4fc:	fc 01       	movw	r30, r24
     4fe:	20 83       	st	Z, r18
     500:	31 83       	std	Z+1, r19	; 0x01
	if (Green!=NULL) *Green=*G;
     502:	89 8d       	ldd	r24, Y+25	; 0x19
     504:	9a 8d       	ldd	r25, Y+26	; 0x1a
     506:	89 2b       	or	r24, r25
     508:	51 f0       	breq	.+20     	; 0x51e <DriverAdps9960Get+0x100>
     50a:	8d 81       	ldd	r24, Y+5	; 0x05
     50c:	9e 81       	ldd	r25, Y+6	; 0x06
     50e:	fc 01       	movw	r30, r24
     510:	20 81       	ld	r18, Z
     512:	31 81       	ldd	r19, Z+1	; 0x01
     514:	89 8d       	ldd	r24, Y+25	; 0x19
     516:	9a 8d       	ldd	r25, Y+26	; 0x1a
     518:	fc 01       	movw	r30, r24
     51a:	20 83       	st	Z, r18
     51c:	31 83       	std	Z+1, r19	; 0x01
	if (Blue!=NULL) *Blue=*B;
     51e:	8b 8d       	ldd	r24, Y+27	; 0x1b
     520:	9c 8d       	ldd	r25, Y+28	; 0x1c
     522:	89 2b       	or	r24, r25
     524:	51 f0       	breq	.+20     	; 0x53a <DriverAdps9960Get+0x11c>
     526:	8f 81       	ldd	r24, Y+7	; 0x07
     528:	98 85       	ldd	r25, Y+8	; 0x08
     52a:	fc 01       	movw	r30, r24
     52c:	20 81       	ld	r18, Z
     52e:	31 81       	ldd	r19, Z+1	; 0x01
     530:	8b 8d       	ldd	r24, Y+27	; 0x1b
     532:	9c 8d       	ldd	r25, Y+28	; 0x1c
     534:	fc 01       	movw	r30, r24
     536:	20 83       	st	Z, r18
     538:	31 83       	std	Z+1, r19	; 0x01

     53a:	00 00       	nop
     53c:	6c 96       	adiw	r28, 0x1c	; 28
     53e:	cd bf       	out	0x3d, r28	; 61
     540:	de bf       	out	0x3e, r29	; 62
     542:	df 91       	pop	r29
     544:	cf 91       	pop	r28
     546:	0f 91       	pop	r16
     548:	08 95       	ret

0000054a <DriverLedInit>:
     54a:	cf 93       	push	r28
     54c:	df 93       	push	r29
     54e:	cd b7       	in	r28, 0x3d	; 61
     550:	de b7       	in	r29, 0x3e	; 62
     552:	80 e2       	ldi	r24, 0x20	; 32
     554:	96 e0       	ldi	r25, 0x06	; 6
     556:	27 e0       	ldi	r18, 0x07	; 7
     558:	fc 01       	movw	r30, r24
     55a:	21 83       	std	Z+1, r18	; 0x01
     55c:	80 e2       	ldi	r24, 0x20	; 32
     55e:	96 e0       	ldi	r25, 0x06	; 6
     560:	28 e5       	ldi	r18, 0x58	; 88
     562:	fc 01       	movw	r30, r24
     564:	20 8b       	std	Z+16, r18	; 0x10
     566:	80 e2       	ldi	r24, 0x20	; 32
     568:	96 e0       	ldi	r25, 0x06	; 6
     56a:	28 e5       	ldi	r18, 0x58	; 88
     56c:	fc 01       	movw	r30, r24
     56e:	21 8b       	std	Z+17, r18	; 0x11
     570:	80 e2       	ldi	r24, 0x20	; 32
     572:	96 e0       	ldi	r25, 0x06	; 6
     574:	28 e5       	ldi	r18, 0x58	; 88
     576:	fc 01       	movw	r30, r24
     578:	22 8b       	std	Z+18, r18	; 0x12
     57a:	80 e0       	ldi	r24, 0x00	; 0
     57c:	96 e0       	ldi	r25, 0x06	; 6
     57e:	20 e8       	ldi	r18, 0x80	; 128
     580:	fc 01       	movw	r30, r24
     582:	21 83       	std	Z+1, r18	; 0x01
     584:	80 e0       	ldi	r24, 0x00	; 0
     586:	96 e0       	ldi	r25, 0x06	; 6
     588:	28 e5       	ldi	r18, 0x58	; 88
     58a:	fc 01       	movw	r30, r24
     58c:	27 8b       	std	Z+23, r18	; 0x17
     58e:	00 00       	nop
     590:	df 91       	pop	r29
     592:	cf 91       	pop	r28
     594:	08 95       	ret

00000596 <DriverLedWrite>:
     596:	cf 93       	push	r28
     598:	df 93       	push	r29
     59a:	1f 92       	push	r1
     59c:	cd b7       	in	r28, 0x3d	; 61
     59e:	de b7       	in	r29, 0x3e	; 62
     5a0:	89 83       	std	Y+1, r24	; 0x01
     5a2:	80 e2       	ldi	r24, 0x20	; 32
     5a4:	96 e0       	ldi	r25, 0x06	; 6
     5a6:	29 81       	ldd	r18, Y+1	; 0x01
     5a8:	27 70       	andi	r18, 0x07	; 7
     5aa:	fc 01       	movw	r30, r24
     5ac:	24 83       	std	Z+4, r18	; 0x04
     5ae:	80 e0       	ldi	r24, 0x00	; 0
     5b0:	96 e0       	ldi	r25, 0x06	; 6
     5b2:	29 81       	ldd	r18, Y+1	; 0x01
     5b4:	28 70       	andi	r18, 0x08	; 8
     5b6:	22 95       	swap	r18
     5b8:	20 7f       	andi	r18, 0xF0	; 240
     5ba:	fc 01       	movw	r30, r24
     5bc:	24 83       	std	Z+4, r18	; 0x04
     5be:	00 00       	nop
     5c0:	0f 90       	pop	r0
     5c2:	df 91       	pop	r29
     5c4:	cf 91       	pop	r28
     5c6:	08 95       	ret

000005c8 <DriverMotorInit>:
EncoderStruct DriverMotorGetEncoder(void){
	EncoderStruct st;
	st.Cnt1 = motor1Pos;
	st.Cnt2 = motor2Pos;
	return st;
}
     5c8:	cf 93       	push	r28
     5ca:	df 93       	push	r29
     5cc:	cd b7       	in	r28, 0x3d	; 61
     5ce:	de b7       	in	r29, 0x3e	; 62
     5d0:	80 ea       	ldi	r24, 0xA0	; 160
     5d2:	96 e0       	ldi	r25, 0x06	; 6
     5d4:	2f e3       	ldi	r18, 0x3F	; 63
     5d6:	fc 01       	movw	r30, r24
     5d8:	21 83       	std	Z+1, r18	; 0x01
     5da:	80 ea       	ldi	r24, 0xA0	; 160
     5dc:	96 e0       	ldi	r25, 0x06	; 6
     5de:	28 e5       	ldi	r18, 0x58	; 88
     5e0:	fc 01       	movw	r30, r24
     5e2:	25 8b       	std	Z+21, r18	; 0x15
     5e4:	80 ea       	ldi	r24, 0xA0	; 160
     5e6:	96 e0       	ldi	r25, 0x06	; 6
     5e8:	28 e5       	ldi	r18, 0x58	; 88
     5ea:	fc 01       	movw	r30, r24
     5ec:	24 8b       	std	Z+20, r18	; 0x14
     5ee:	80 ea       	ldi	r24, 0xA0	; 160
     5f0:	96 e0       	ldi	r25, 0x06	; 6
     5f2:	20 e1       	ldi	r18, 0x10	; 16
     5f4:	fc 01       	movw	r30, r24
     5f6:	23 8b       	std	Z+19, r18	; 0x13
     5f8:	80 ea       	ldi	r24, 0xA0	; 160
     5fa:	96 e0       	ldi	r25, 0x06	; 6
     5fc:	20 e1       	ldi	r18, 0x10	; 16
     5fe:	fc 01       	movw	r30, r24
     600:	22 8b       	std	Z+18, r18	; 0x12
     602:	80 ea       	ldi	r24, 0xA0	; 160
     604:	96 e0       	ldi	r25, 0x06	; 6
     606:	20 e1       	ldi	r18, 0x10	; 16
     608:	fc 01       	movw	r30, r24
     60a:	21 8b       	std	Z+17, r18	; 0x11
     60c:	80 ea       	ldi	r24, 0xA0	; 160
     60e:	96 e0       	ldi	r25, 0x06	; 6
     610:	20 e1       	ldi	r18, 0x10	; 16
     612:	fc 01       	movw	r30, r24
     614:	20 8b       	std	Z+16, r18	; 0x10
     616:	80 e0       	ldi	r24, 0x00	; 0
     618:	9b e0       	ldi	r25, 0x0B	; 11
     61a:	24 e0       	ldi	r18, 0x04	; 4
     61c:	fc 01       	movw	r30, r24
     61e:	20 83       	st	Z, r18
     620:	80 e0       	ldi	r24, 0x00	; 0
     622:	9b e0       	ldi	r25, 0x0B	; 11
     624:	23 ef       	ldi	r18, 0xF3	; 243
     626:	fc 01       	movw	r30, r24
     628:	21 83       	std	Z+1, r18	; 0x01
     62a:	80 e0       	ldi	r24, 0x00	; 0
     62c:	9b e0       	ldi	r25, 0x0B	; 11
     62e:	2f ef       	ldi	r18, 0xFF	; 255
     630:	3f e0       	ldi	r19, 0x0F	; 15
     632:	fc 01       	movw	r30, r24
     634:	26 a3       	std	Z+38, r18	; 0x26
     636:	37 a3       	std	Z+39, r19	; 0x27
     638:	80 e4       	ldi	r24, 0x40	; 64
     63a:	96 e0       	ldi	r25, 0x06	; 6
     63c:	25 e0       	ldi	r18, 0x05	; 5
     63e:	fc 01       	movw	r30, r24
     640:	21 87       	std	Z+9, r18	; 0x09
     642:	80 e4       	ldi	r24, 0x40	; 64
     644:	96 e0       	ldi	r25, 0x06	; 6
     646:	20 e8       	ldi	r18, 0x80	; 128
     648:	fc 01       	movw	r30, r24
     64a:	22 87       	std	Z+10, r18	; 0x0a
     64c:	80 e4       	ldi	r24, 0x40	; 64
     64e:	96 e0       	ldi	r25, 0x06	; 6
     650:	20 e4       	ldi	r18, 0x40	; 64
     652:	fc 01       	movw	r30, r24
     654:	23 87       	std	Z+11, r18	; 0x0b
     656:	80 e4       	ldi	r24, 0x40	; 64
     658:	96 e0       	ldi	r25, 0x06	; 6
     65a:	fc 01       	movw	r30, r24
     65c:	17 8a       	std	Z+23, r1	; 0x17
     65e:	80 e4       	ldi	r24, 0x40	; 64
     660:	96 e0       	ldi	r25, 0x06	; 6
     662:	fc 01       	movw	r30, r24
     664:	16 8a       	std	Z+22, r1	; 0x16
     666:	80 e8       	ldi	r24, 0x80	; 128
     668:	96 e0       	ldi	r25, 0x06	; 6
     66a:	25 e0       	ldi	r18, 0x05	; 5
     66c:	fc 01       	movw	r30, r24
     66e:	21 87       	std	Z+9, r18	; 0x09
     670:	80 e8       	ldi	r24, 0x80	; 128
     672:	96 e0       	ldi	r25, 0x06	; 6
     674:	20 e8       	ldi	r18, 0x80	; 128
     676:	fc 01       	movw	r30, r24
     678:	22 87       	std	Z+10, r18	; 0x0a
     67a:	80 e8       	ldi	r24, 0x80	; 128
     67c:	96 e0       	ldi	r25, 0x06	; 6
     67e:	20 e4       	ldi	r18, 0x40	; 64
     680:	fc 01       	movw	r30, r24
     682:	23 87       	std	Z+11, r18	; 0x0b
     684:	80 e8       	ldi	r24, 0x80	; 128
     686:	96 e0       	ldi	r25, 0x06	; 6
     688:	fc 01       	movw	r30, r24
     68a:	17 8a       	std	Z+23, r1	; 0x17
     68c:	80 e8       	ldi	r24, 0x80	; 128
     68e:	96 e0       	ldi	r25, 0x06	; 6
     690:	fc 01       	movw	r30, r24
     692:	16 8a       	std	Z+22, r1	; 0x16
     694:	80 ea       	ldi	r24, 0xA0	; 160
     696:	90 e0       	ldi	r25, 0x00	; 0
     698:	27 e8       	ldi	r18, 0x87	; 135
     69a:	fc 01       	movw	r30, r24
     69c:	22 83       	std	Z+2, r18	; 0x02
     69e:	8f e3       	ldi	r24, 0x3F	; 63
     6a0:	90 e0       	ldi	r25, 0x00	; 0
     6a2:	20 e8       	ldi	r18, 0x80	; 128
     6a4:	fc 01       	movw	r30, r24
     6a6:	20 83       	st	Z, r18
     6a8:	00 00       	nop
     6aa:	df 91       	pop	r29
     6ac:	cf 91       	pop	r28
     6ae:	08 95       	ret

000006b0 <DriverMotorSet>:
     6b0:	cf 93       	push	r28
     6b2:	df 93       	push	r29
     6b4:	00 d0       	rcall	.+0      	; 0x6b6 <DriverMotorSet+0x6>
     6b6:	1f 92       	push	r1
     6b8:	cd b7       	in	r28, 0x3d	; 61
     6ba:	de b7       	in	r29, 0x3e	; 62
     6bc:	89 83       	std	Y+1, r24	; 0x01
     6be:	9a 83       	std	Y+2, r25	; 0x02
     6c0:	6b 83       	std	Y+3, r22	; 0x03
     6c2:	7c 83       	std	Y+4, r23	; 0x04
     6c4:	89 81       	ldd	r24, Y+1	; 0x01
     6c6:	9a 81       	ldd	r25, Y+2	; 0x02
     6c8:	99 23       	and	r25, r25
     6ca:	84 f4       	brge	.+32     	; 0x6ec <DriverMotorSet+0x3c>
     6cc:	80 e0       	ldi	r24, 0x00	; 0
     6ce:	9b e0       	ldi	r25, 0x0B	; 11
     6d0:	29 81       	ldd	r18, Y+1	; 0x01
     6d2:	3a 81       	ldd	r19, Y+2	; 0x02
     6d4:	31 95       	neg	r19
     6d6:	21 95       	neg	r18
     6d8:	31 09       	sbc	r19, r1
     6da:	fc 01       	movw	r30, r24
     6dc:	20 a7       	std	Z+40, r18	; 0x28
     6de:	31 a7       	std	Z+41, r19	; 0x29
     6e0:	80 e0       	ldi	r24, 0x00	; 0
     6e2:	9b e0       	ldi	r25, 0x0B	; 11
     6e4:	fc 01       	movw	r30, r24
     6e6:	12 a6       	std	Z+42, r1	; 0x2a
     6e8:	13 a6       	std	Z+43, r1	; 0x2b
     6ea:	0c c0       	rjmp	.+24     	; 0x704 <DriverMotorSet+0x54>
     6ec:	80 e0       	ldi	r24, 0x00	; 0
     6ee:	9b e0       	ldi	r25, 0x0B	; 11
     6f0:	fc 01       	movw	r30, r24
     6f2:	10 a6       	std	Z+40, r1	; 0x28
     6f4:	11 a6       	std	Z+41, r1	; 0x29
     6f6:	80 e0       	ldi	r24, 0x00	; 0
     6f8:	9b e0       	ldi	r25, 0x0B	; 11
     6fa:	29 81       	ldd	r18, Y+1	; 0x01
     6fc:	3a 81       	ldd	r19, Y+2	; 0x02
     6fe:	fc 01       	movw	r30, r24
     700:	22 a7       	std	Z+42, r18	; 0x2a
     702:	33 a7       	std	Z+43, r19	; 0x2b
     704:	8b 81       	ldd	r24, Y+3	; 0x03
     706:	9c 81       	ldd	r25, Y+4	; 0x04
     708:	18 16       	cp	r1, r24
     70a:	19 06       	cpc	r1, r25
     70c:	6c f4       	brge	.+26     	; 0x728 <DriverMotorSet+0x78>
     70e:	80 e0       	ldi	r24, 0x00	; 0
     710:	9b e0       	ldi	r25, 0x0B	; 11
     712:	2b 81       	ldd	r18, Y+3	; 0x03
     714:	3c 81       	ldd	r19, Y+4	; 0x04
     716:	fc 01       	movw	r30, r24
     718:	24 a7       	std	Z+44, r18	; 0x2c
     71a:	35 a7       	std	Z+45, r19	; 0x2d
     71c:	80 e0       	ldi	r24, 0x00	; 0
     71e:	9b e0       	ldi	r25, 0x0B	; 11
     720:	fc 01       	movw	r30, r24
     722:	16 a6       	std	Z+46, r1	; 0x2e
     724:	17 a6       	std	Z+47, r1	; 0x2f
     726:	0f c0       	rjmp	.+30     	; 0x746 <DriverMotorSet+0x96>
     728:	80 e0       	ldi	r24, 0x00	; 0
     72a:	9b e0       	ldi	r25, 0x0B	; 11
     72c:	fc 01       	movw	r30, r24
     72e:	14 a6       	std	Z+44, r1	; 0x2c
     730:	15 a6       	std	Z+45, r1	; 0x2d
     732:	80 e0       	ldi	r24, 0x00	; 0
     734:	9b e0       	ldi	r25, 0x0B	; 11
     736:	2b 81       	ldd	r18, Y+3	; 0x03
     738:	3c 81       	ldd	r19, Y+4	; 0x04
     73a:	31 95       	neg	r19
     73c:	21 95       	neg	r18
     73e:	31 09       	sbc	r19, r1
     740:	fc 01       	movw	r30, r24
     742:	26 a7       	std	Z+46, r18	; 0x2e
     744:	37 a7       	std	Z+47, r19	; 0x2f
     746:	00 00       	nop
     748:	24 96       	adiw	r28, 0x04	; 4
     74a:	cd bf       	out	0x3d, r28	; 61
     74c:	de bf       	out	0x3e, r29	; 62
     74e:	df 91       	pop	r29
     750:	cf 91       	pop	r28
     752:	08 95       	ret

00000754 <__vector_2>:


//###ISRs###
ISR(PORTC_INT0_vect){ //interrupt op pin C7
     754:	1f 92       	push	r1
     756:	0f 92       	push	r0
     758:	00 90 3f 00 	lds	r0, 0x003F	; 0x80003f <__TEXT_REGION_LENGTH__+0x70003f>
     75c:	0f 92       	push	r0
     75e:	11 24       	eor	r1, r1
     760:	00 90 3b 00 	lds	r0, 0x003B	; 0x80003b <__TEXT_REGION_LENGTH__+0x70003b>
     764:	0f 92       	push	r0
     766:	8f 93       	push	r24
     768:	9f 93       	push	r25
     76a:	ef 93       	push	r30
     76c:	ff 93       	push	r31
     76e:	cf 93       	push	r28
     770:	df 93       	push	r29
     772:	1f 92       	push	r1
     774:	cd b7       	in	r28, 0x3d	; 61
     776:	de b7       	in	r29, 0x3e	; 62
	char input = PORTC.IN>>6;
     778:	80 e4       	ldi	r24, 0x40	; 64
     77a:	96 e0       	ldi	r25, 0x06	; 6
     77c:	fc 01       	movw	r30, r24
     77e:	80 85       	ldd	r24, Z+8	; 0x08
     780:	82 95       	swap	r24
     782:	86 95       	lsr	r24
     784:	86 95       	lsr	r24
     786:	83 70       	andi	r24, 0x03	; 3
     788:	89 83       	std	Y+1, r24	; 0x01
	if (input&0b1)				//als pin 6 hoog is
     78a:	89 81       	ldd	r24, Y+1	; 0x01
     78c:	88 2f       	mov	r24, r24
     78e:	90 e0       	ldi	r25, 0x00	; 0
     790:	81 70       	andi	r24, 0x01	; 1
     792:	99 27       	eor	r25, r25
     794:	89 2b       	or	r24, r25
     796:	d9 f0       	breq	.+54     	; 0x7ce <__vector_2+0x7a>
	{
		if (input&0b10)				//als rising edge op pin 7
     798:	89 81       	ldd	r24, Y+1	; 0x01
     79a:	88 2f       	mov	r24, r24
     79c:	90 e0       	ldi	r25, 0x00	; 0
     79e:	82 70       	andi	r24, 0x02	; 2
     7a0:	99 27       	eor	r25, r25
     7a2:	89 2b       	or	r24, r25
     7a4:	51 f0       	breq	.+20     	; 0x7ba <__vector_2+0x66>
		{
			motor1Pos--;					//teller--
     7a6:	80 91 75 20 	lds	r24, 0x2075	; 0x802075 <motor1Pos>
     7aa:	90 91 76 20 	lds	r25, 0x2076	; 0x802076 <motor1Pos+0x1>
     7ae:	01 97       	sbiw	r24, 0x01	; 1
     7b0:	80 93 75 20 	sts	0x2075, r24	; 0x802075 <motor1Pos>
     7b4:	90 93 76 20 	sts	0x2076, r25	; 0x802076 <motor1Pos+0x1>
			motor1Pos++;					//teller++
			} else {					//als falling edge op pin7
			motor1Pos--;					//teller--
		}
	}
}
     7b8:	24 c0       	rjmp	.+72     	; 0x802 <__vector_2+0xae>
	{
		if (input&0b10)				//als rising edge op pin 7
		{
			motor1Pos--;					//teller--
			} else{						//als falling edge op pin7
			motor1Pos++;					//teller++
     7ba:	80 91 75 20 	lds	r24, 0x2075	; 0x802075 <motor1Pos>
     7be:	90 91 76 20 	lds	r25, 0x2076	; 0x802076 <motor1Pos+0x1>
     7c2:	01 96       	adiw	r24, 0x01	; 1
     7c4:	80 93 75 20 	sts	0x2075, r24	; 0x802075 <motor1Pos>
     7c8:	90 93 76 20 	sts	0x2076, r25	; 0x802076 <motor1Pos+0x1>
			motor1Pos++;					//teller++
			} else {					//als falling edge op pin7
			motor1Pos--;					//teller--
		}
	}
}
     7cc:	1a c0       	rjmp	.+52     	; 0x802 <__vector_2+0xae>
			motor1Pos--;					//teller--
			} else{						//als falling edge op pin7
			motor1Pos++;					//teller++
		}
		} else {					//als pin 6 laag is
		if (input&0b10)				//als rising edge op pin 7
     7ce:	89 81       	ldd	r24, Y+1	; 0x01
     7d0:	88 2f       	mov	r24, r24
     7d2:	90 e0       	ldi	r25, 0x00	; 0
     7d4:	82 70       	andi	r24, 0x02	; 2
     7d6:	99 27       	eor	r25, r25
     7d8:	89 2b       	or	r24, r25
     7da:	51 f0       	breq	.+20     	; 0x7f0 <__vector_2+0x9c>
		{
			motor1Pos++;					//teller++
     7dc:	80 91 75 20 	lds	r24, 0x2075	; 0x802075 <motor1Pos>
     7e0:	90 91 76 20 	lds	r25, 0x2076	; 0x802076 <motor1Pos+0x1>
     7e4:	01 96       	adiw	r24, 0x01	; 1
     7e6:	80 93 75 20 	sts	0x2075, r24	; 0x802075 <motor1Pos>
     7ea:	90 93 76 20 	sts	0x2076, r25	; 0x802076 <motor1Pos+0x1>
			} else {					//als falling edge op pin7
			motor1Pos--;					//teller--
		}
	}
}
     7ee:	09 c0       	rjmp	.+18     	; 0x802 <__vector_2+0xae>
		} else {					//als pin 6 laag is
		if (input&0b10)				//als rising edge op pin 7
		{
			motor1Pos++;					//teller++
			} else {					//als falling edge op pin7
			motor1Pos--;					//teller--
     7f0:	80 91 75 20 	lds	r24, 0x2075	; 0x802075 <motor1Pos>
     7f4:	90 91 76 20 	lds	r25, 0x2076	; 0x802076 <motor1Pos+0x1>
     7f8:	01 97       	sbiw	r24, 0x01	; 1
     7fa:	80 93 75 20 	sts	0x2075, r24	; 0x802075 <motor1Pos>
     7fe:	90 93 76 20 	sts	0x2076, r25	; 0x802076 <motor1Pos+0x1>
		}
	}
}
     802:	00 00       	nop
     804:	0f 90       	pop	r0
     806:	df 91       	pop	r29
     808:	cf 91       	pop	r28
     80a:	ff 91       	pop	r31
     80c:	ef 91       	pop	r30
     80e:	9f 91       	pop	r25
     810:	8f 91       	pop	r24
     812:	0f 90       	pop	r0
     814:	00 92 3b 00 	sts	0x003B, r0	; 0x80003b <__TEXT_REGION_LENGTH__+0x70003b>
     818:	0f 90       	pop	r0
     81a:	00 92 3f 00 	sts	0x003F, r0	; 0x80003f <__TEXT_REGION_LENGTH__+0x70003f>
     81e:	0f 90       	pop	r0
     820:	1f 90       	pop	r1
     822:	18 95       	reti

00000824 <__vector_3>:

ISR(PORTC_INT1_vect){	//interrupt op pin C6
     824:	1f 92       	push	r1
     826:	0f 92       	push	r0
     828:	00 90 3f 00 	lds	r0, 0x003F	; 0x80003f <__TEXT_REGION_LENGTH__+0x70003f>
     82c:	0f 92       	push	r0
     82e:	11 24       	eor	r1, r1
     830:	00 90 3b 00 	lds	r0, 0x003B	; 0x80003b <__TEXT_REGION_LENGTH__+0x70003b>
     834:	0f 92       	push	r0
     836:	8f 93       	push	r24
     838:	9f 93       	push	r25
     83a:	ef 93       	push	r30
     83c:	ff 93       	push	r31
     83e:	cf 93       	push	r28
     840:	df 93       	push	r29
     842:	1f 92       	push	r1
     844:	cd b7       	in	r28, 0x3d	; 61
     846:	de b7       	in	r29, 0x3e	; 62
	char input = PORTC.IN>>6;
     848:	80 e4       	ldi	r24, 0x40	; 64
     84a:	96 e0       	ldi	r25, 0x06	; 6
     84c:	fc 01       	movw	r30, r24
     84e:	80 85       	ldd	r24, Z+8	; 0x08
     850:	82 95       	swap	r24
     852:	86 95       	lsr	r24
     854:	86 95       	lsr	r24
     856:	83 70       	andi	r24, 0x03	; 3
     858:	89 83       	std	Y+1, r24	; 0x01
	if (input&0b10)			//als C7 hoog is
     85a:	89 81       	ldd	r24, Y+1	; 0x01
     85c:	88 2f       	mov	r24, r24
     85e:	90 e0       	ldi	r25, 0x00	; 0
     860:	82 70       	andi	r24, 0x02	; 2
     862:	99 27       	eor	r25, r25
     864:	89 2b       	or	r24, r25
     866:	d9 f0       	breq	.+54     	; 0x89e <__vector_3+0x7a>
	{
		if (input&0b1)			//als RE C6	
     868:	89 81       	ldd	r24, Y+1	; 0x01
     86a:	88 2f       	mov	r24, r24
     86c:	90 e0       	ldi	r25, 0x00	; 0
     86e:	81 70       	andi	r24, 0x01	; 1
     870:	99 27       	eor	r25, r25
     872:	89 2b       	or	r24, r25
     874:	51 f0       	breq	.+20     	; 0x88a <__vector_3+0x66>
		{
			motor1Pos++;				//teller++
     876:	80 91 75 20 	lds	r24, 0x2075	; 0x802075 <motor1Pos>
     87a:	90 91 76 20 	lds	r25, 0x2076	; 0x802076 <motor1Pos+0x1>
     87e:	01 96       	adiw	r24, 0x01	; 1
     880:	80 93 75 20 	sts	0x2075, r24	; 0x802075 <motor1Pos>
     884:	90 93 76 20 	sts	0x2076, r25	; 0x802076 <motor1Pos+0x1>
			motor1Pos--;				//teller++
		} else {				//als FE C6
			motor1Pos++;				//teller--
		}
	}
}
     888:	24 c0       	rjmp	.+72     	; 0x8d2 <__vector_3+0xae>
	{
		if (input&0b1)			//als RE C6	
		{
			motor1Pos++;				//teller++
		} else {				//als FE C6
			motor1Pos--;				//teller--
     88a:	80 91 75 20 	lds	r24, 0x2075	; 0x802075 <motor1Pos>
     88e:	90 91 76 20 	lds	r25, 0x2076	; 0x802076 <motor1Pos+0x1>
     892:	01 97       	sbiw	r24, 0x01	; 1
     894:	80 93 75 20 	sts	0x2075, r24	; 0x802075 <motor1Pos>
     898:	90 93 76 20 	sts	0x2076, r25	; 0x802076 <motor1Pos+0x1>
			motor1Pos--;				//teller++
		} else {				//als FE C6
			motor1Pos++;				//teller--
		}
	}
}
     89c:	1a c0       	rjmp	.+52     	; 0x8d2 <__vector_3+0xae>
			motor1Pos++;				//teller++
		} else {				//als FE C6
			motor1Pos--;				//teller--
		}
	} else {				//als C7 laag is
		if (input&0b10)			//als RE C6
     89e:	89 81       	ldd	r24, Y+1	; 0x01
     8a0:	88 2f       	mov	r24, r24
     8a2:	90 e0       	ldi	r25, 0x00	; 0
     8a4:	82 70       	andi	r24, 0x02	; 2
     8a6:	99 27       	eor	r25, r25
     8a8:	89 2b       	or	r24, r25
     8aa:	51 f0       	breq	.+20     	; 0x8c0 <__vector_3+0x9c>
		{					
			motor1Pos--;				//teller++
     8ac:	80 91 75 20 	lds	r24, 0x2075	; 0x802075 <motor1Pos>
     8b0:	90 91 76 20 	lds	r25, 0x2076	; 0x802076 <motor1Pos+0x1>
     8b4:	01 97       	sbiw	r24, 0x01	; 1
     8b6:	80 93 75 20 	sts	0x2075, r24	; 0x802075 <motor1Pos>
     8ba:	90 93 76 20 	sts	0x2076, r25	; 0x802076 <motor1Pos+0x1>
		} else {				//als FE C6
			motor1Pos++;				//teller--
		}
	}
}
     8be:	09 c0       	rjmp	.+18     	; 0x8d2 <__vector_3+0xae>
	} else {				//als C7 laag is
		if (input&0b10)			//als RE C6
		{					
			motor1Pos--;				//teller++
		} else {				//als FE C6
			motor1Pos++;				//teller--
     8c0:	80 91 75 20 	lds	r24, 0x2075	; 0x802075 <motor1Pos>
     8c4:	90 91 76 20 	lds	r25, 0x2076	; 0x802076 <motor1Pos+0x1>
     8c8:	01 96       	adiw	r24, 0x01	; 1
     8ca:	80 93 75 20 	sts	0x2075, r24	; 0x802075 <motor1Pos>
     8ce:	90 93 76 20 	sts	0x2076, r25	; 0x802076 <motor1Pos+0x1>
		}
	}
}
     8d2:	00 00       	nop
     8d4:	0f 90       	pop	r0
     8d6:	df 91       	pop	r29
     8d8:	cf 91       	pop	r28
     8da:	ff 91       	pop	r31
     8dc:	ef 91       	pop	r30
     8de:	9f 91       	pop	r25
     8e0:	8f 91       	pop	r24
     8e2:	0f 90       	pop	r0
     8e4:	00 92 3b 00 	sts	0x003B, r0	; 0x80003b <__TEXT_REGION_LENGTH__+0x70003b>
     8e8:	0f 90       	pop	r0
     8ea:	00 92 3f 00 	sts	0x003F, r0	; 0x80003f <__TEXT_REGION_LENGTH__+0x70003f>
     8ee:	0f 90       	pop	r0
     8f0:	1f 90       	pop	r1
     8f2:	18 95       	reti

000008f4 <__vector_43>:

ISR(PORTE_INT0_vect){ //interrupt op pin E7
     8f4:	1f 92       	push	r1
     8f6:	0f 92       	push	r0
     8f8:	00 90 3f 00 	lds	r0, 0x003F	; 0x80003f <__TEXT_REGION_LENGTH__+0x70003f>
     8fc:	0f 92       	push	r0
     8fe:	11 24       	eor	r1, r1
     900:	00 90 3b 00 	lds	r0, 0x003B	; 0x80003b <__TEXT_REGION_LENGTH__+0x70003b>
     904:	0f 92       	push	r0
     906:	8f 93       	push	r24
     908:	9f 93       	push	r25
     90a:	ef 93       	push	r30
     90c:	ff 93       	push	r31
     90e:	cf 93       	push	r28
     910:	df 93       	push	r29
     912:	1f 92       	push	r1
     914:	cd b7       	in	r28, 0x3d	; 61
     916:	de b7       	in	r29, 0x3e	; 62
	char input = PORTE.IN>>6;
     918:	80 e8       	ldi	r24, 0x80	; 128
     91a:	96 e0       	ldi	r25, 0x06	; 6
     91c:	fc 01       	movw	r30, r24
     91e:	80 85       	ldd	r24, Z+8	; 0x08
     920:	82 95       	swap	r24
     922:	86 95       	lsr	r24
     924:	86 95       	lsr	r24
     926:	83 70       	andi	r24, 0x03	; 3
     928:	89 83       	std	Y+1, r24	; 0x01
	if (input&0b1)				//als pin 6 hoog is
     92a:	89 81       	ldd	r24, Y+1	; 0x01
     92c:	88 2f       	mov	r24, r24
     92e:	90 e0       	ldi	r25, 0x00	; 0
     930:	81 70       	andi	r24, 0x01	; 1
     932:	99 27       	eor	r25, r25
     934:	89 2b       	or	r24, r25
     936:	d9 f0       	breq	.+54     	; 0x96e <__vector_43+0x7a>
	{
		if (input&0b10)				//als rising edge op pin 7
     938:	89 81       	ldd	r24, Y+1	; 0x01
     93a:	88 2f       	mov	r24, r24
     93c:	90 e0       	ldi	r25, 0x00	; 0
     93e:	82 70       	andi	r24, 0x02	; 2
     940:	99 27       	eor	r25, r25
     942:	89 2b       	or	r24, r25
     944:	51 f0       	breq	.+20     	; 0x95a <__vector_43+0x66>
		{
			motor2Pos--;					//teller--
     946:	80 91 77 20 	lds	r24, 0x2077	; 0x802077 <motor2Pos>
     94a:	90 91 78 20 	lds	r25, 0x2078	; 0x802078 <motor2Pos+0x1>
     94e:	01 97       	sbiw	r24, 0x01	; 1
     950:	80 93 77 20 	sts	0x2077, r24	; 0x802077 <motor2Pos>
     954:	90 93 78 20 	sts	0x2078, r25	; 0x802078 <motor2Pos+0x1>
			motor2Pos++;					//teller++
			} else {					//als falling edge op pin7
			motor2Pos--;					//teller--
		}
	}
}
     958:	24 c0       	rjmp	.+72     	; 0x9a2 <__vector_43+0xae>
	{
		if (input&0b10)				//als rising edge op pin 7
		{
			motor2Pos--;					//teller--
			} else{						//als falling edge op pin7
			motor2Pos++;					//teller++
     95a:	80 91 77 20 	lds	r24, 0x2077	; 0x802077 <motor2Pos>
     95e:	90 91 78 20 	lds	r25, 0x2078	; 0x802078 <motor2Pos+0x1>
     962:	01 96       	adiw	r24, 0x01	; 1
     964:	80 93 77 20 	sts	0x2077, r24	; 0x802077 <motor2Pos>
     968:	90 93 78 20 	sts	0x2078, r25	; 0x802078 <motor2Pos+0x1>
			motor2Pos++;					//teller++
			} else {					//als falling edge op pin7
			motor2Pos--;					//teller--
		}
	}
}
     96c:	1a c0       	rjmp	.+52     	; 0x9a2 <__vector_43+0xae>
			motor2Pos--;					//teller--
			} else{						//als falling edge op pin7
			motor2Pos++;					//teller++
		}
		} else {				//als pin 6 laag is
		if (input&0b10)				//als rising edge op pin 7
     96e:	89 81       	ldd	r24, Y+1	; 0x01
     970:	88 2f       	mov	r24, r24
     972:	90 e0       	ldi	r25, 0x00	; 0
     974:	82 70       	andi	r24, 0x02	; 2
     976:	99 27       	eor	r25, r25
     978:	89 2b       	or	r24, r25
     97a:	51 f0       	breq	.+20     	; 0x990 <__vector_43+0x9c>
		{
			motor2Pos++;					//teller++
     97c:	80 91 77 20 	lds	r24, 0x2077	; 0x802077 <motor2Pos>
     980:	90 91 78 20 	lds	r25, 0x2078	; 0x802078 <motor2Pos+0x1>
     984:	01 96       	adiw	r24, 0x01	; 1
     986:	80 93 77 20 	sts	0x2077, r24	; 0x802077 <motor2Pos>
     98a:	90 93 78 20 	sts	0x2078, r25	; 0x802078 <motor2Pos+0x1>
			} else {					//als falling edge op pin7
			motor2Pos--;					//teller--
		}
	}
}
     98e:	09 c0       	rjmp	.+18     	; 0x9a2 <__vector_43+0xae>
		} else {				//als pin 6 laag is
		if (input&0b10)				//als rising edge op pin 7
		{
			motor2Pos++;					//teller++
			} else {					//als falling edge op pin7
			motor2Pos--;					//teller--
     990:	80 91 77 20 	lds	r24, 0x2077	; 0x802077 <motor2Pos>
     994:	90 91 78 20 	lds	r25, 0x2078	; 0x802078 <motor2Pos+0x1>
     998:	01 97       	sbiw	r24, 0x01	; 1
     99a:	80 93 77 20 	sts	0x2077, r24	; 0x802077 <motor2Pos>
     99e:	90 93 78 20 	sts	0x2078, r25	; 0x802078 <motor2Pos+0x1>
		}
	}
}
     9a2:	00 00       	nop
     9a4:	0f 90       	pop	r0
     9a6:	df 91       	pop	r29
     9a8:	cf 91       	pop	r28
     9aa:	ff 91       	pop	r31
     9ac:	ef 91       	pop	r30
     9ae:	9f 91       	pop	r25
     9b0:	8f 91       	pop	r24
     9b2:	0f 90       	pop	r0
     9b4:	00 92 3b 00 	sts	0x003B, r0	; 0x80003b <__TEXT_REGION_LENGTH__+0x70003b>
     9b8:	0f 90       	pop	r0
     9ba:	00 92 3f 00 	sts	0x003F, r0	; 0x80003f <__TEXT_REGION_LENGTH__+0x70003f>
     9be:	0f 90       	pop	r0
     9c0:	1f 90       	pop	r1
     9c2:	18 95       	reti

000009c4 <__vector_44>:

ISR(PORTE_INT1_vect){	//Interrupt op E6
     9c4:	1f 92       	push	r1
     9c6:	0f 92       	push	r0
     9c8:	00 90 3f 00 	lds	r0, 0x003F	; 0x80003f <__TEXT_REGION_LENGTH__+0x70003f>
     9cc:	0f 92       	push	r0
     9ce:	11 24       	eor	r1, r1
     9d0:	00 90 3b 00 	lds	r0, 0x003B	; 0x80003b <__TEXT_REGION_LENGTH__+0x70003b>
     9d4:	0f 92       	push	r0
     9d6:	8f 93       	push	r24
     9d8:	9f 93       	push	r25
     9da:	ef 93       	push	r30
     9dc:	ff 93       	push	r31
     9de:	cf 93       	push	r28
     9e0:	df 93       	push	r29
     9e2:	1f 92       	push	r1
     9e4:	cd b7       	in	r28, 0x3d	; 61
     9e6:	de b7       	in	r29, 0x3e	; 62
	char input = PORTE.IN>>6;
     9e8:	80 e8       	ldi	r24, 0x80	; 128
     9ea:	96 e0       	ldi	r25, 0x06	; 6
     9ec:	fc 01       	movw	r30, r24
     9ee:	80 85       	ldd	r24, Z+8	; 0x08
     9f0:	82 95       	swap	r24
     9f2:	86 95       	lsr	r24
     9f4:	86 95       	lsr	r24
     9f6:	83 70       	andi	r24, 0x03	; 3
     9f8:	89 83       	std	Y+1, r24	; 0x01
	if (input&0b10)			//als E7 hoog is
     9fa:	89 81       	ldd	r24, Y+1	; 0x01
     9fc:	88 2f       	mov	r24, r24
     9fe:	90 e0       	ldi	r25, 0x00	; 0
     a00:	82 70       	andi	r24, 0x02	; 2
     a02:	99 27       	eor	r25, r25
     a04:	89 2b       	or	r24, r25
     a06:	d9 f0       	breq	.+54     	; 0xa3e <__vector_44+0x7a>
	{
		if (input&0b1)			//als RE E6
     a08:	89 81       	ldd	r24, Y+1	; 0x01
     a0a:	88 2f       	mov	r24, r24
     a0c:	90 e0       	ldi	r25, 0x00	; 0
     a0e:	81 70       	andi	r24, 0x01	; 1
     a10:	99 27       	eor	r25, r25
     a12:	89 2b       	or	r24, r25
     a14:	51 f0       	breq	.+20     	; 0xa2a <__vector_44+0x66>
		{
			motor2Pos++;			//teller++
     a16:	80 91 77 20 	lds	r24, 0x2077	; 0x802077 <motor2Pos>
     a1a:	90 91 78 20 	lds	r25, 0x2078	; 0x802078 <motor2Pos+0x1>
     a1e:	01 96       	adiw	r24, 0x01	; 1
     a20:	80 93 77 20 	sts	0x2077, r24	; 0x802077 <motor2Pos>
     a24:	90 93 78 20 	sts	0x2078, r25	; 0x802078 <motor2Pos+0x1>
			motor2Pos--;			//teller++
			} else {			//als FE E6
			motor2Pos++;			//teller--
		}
	}
}
     a28:	24 c0       	rjmp	.+72     	; 0xa72 <__vector_44+0xae>
	{
		if (input&0b1)			//als RE E6
		{
			motor2Pos++;			//teller++
			} else {			//als FE E6
			motor2Pos--;			//teller--
     a2a:	80 91 77 20 	lds	r24, 0x2077	; 0x802077 <motor2Pos>
     a2e:	90 91 78 20 	lds	r25, 0x2078	; 0x802078 <motor2Pos+0x1>
     a32:	01 97       	sbiw	r24, 0x01	; 1
     a34:	80 93 77 20 	sts	0x2077, r24	; 0x802077 <motor2Pos>
     a38:	90 93 78 20 	sts	0x2078, r25	; 0x802078 <motor2Pos+0x1>
			motor2Pos--;			//teller++
			} else {			//als FE E6
			motor2Pos++;			//teller--
		}
	}
}
     a3c:	1a c0       	rjmp	.+52     	; 0xa72 <__vector_44+0xae>
			motor2Pos++;			//teller++
			} else {			//als FE E6
			motor2Pos--;			//teller--
		}
		} else {			//als E7 laag is
		if (input&0b10)			//als RE E6
     a3e:	89 81       	ldd	r24, Y+1	; 0x01
     a40:	88 2f       	mov	r24, r24
     a42:	90 e0       	ldi	r25, 0x00	; 0
     a44:	82 70       	andi	r24, 0x02	; 2
     a46:	99 27       	eor	r25, r25
     a48:	89 2b       	or	r24, r25
     a4a:	51 f0       	breq	.+20     	; 0xa60 <__vector_44+0x9c>
		{
			motor2Pos--;			//teller++
     a4c:	80 91 77 20 	lds	r24, 0x2077	; 0x802077 <motor2Pos>
     a50:	90 91 78 20 	lds	r25, 0x2078	; 0x802078 <motor2Pos+0x1>
     a54:	01 97       	sbiw	r24, 0x01	; 1
     a56:	80 93 77 20 	sts	0x2077, r24	; 0x802077 <motor2Pos>
     a5a:	90 93 78 20 	sts	0x2078, r25	; 0x802078 <motor2Pos+0x1>
			} else {			//als FE E6
			motor2Pos++;			//teller--
		}
	}
}
     a5e:	09 c0       	rjmp	.+18     	; 0xa72 <__vector_44+0xae>
		} else {			//als E7 laag is
		if (input&0b10)			//als RE E6
		{
			motor2Pos--;			//teller++
			} else {			//als FE E6
			motor2Pos++;			//teller--
     a60:	80 91 77 20 	lds	r24, 0x2077	; 0x802077 <motor2Pos>
     a64:	90 91 78 20 	lds	r25, 0x2078	; 0x802078 <motor2Pos+0x1>
     a68:	01 96       	adiw	r24, 0x01	; 1
     a6a:	80 93 77 20 	sts	0x2077, r24	; 0x802077 <motor2Pos>
     a6e:	90 93 78 20 	sts	0x2078, r25	; 0x802078 <motor2Pos+0x1>
		}
	}
}
     a72:	00 00       	nop
     a74:	0f 90       	pop	r0
     a76:	df 91       	pop	r29
     a78:	cf 91       	pop	r28
     a7a:	ff 91       	pop	r31
     a7c:	ef 91       	pop	r30
     a7e:	9f 91       	pop	r25
     a80:	8f 91       	pop	r24
     a82:	0f 90       	pop	r0
     a84:	00 92 3b 00 	sts	0x003B, r0	; 0x80003b <__TEXT_REGION_LENGTH__+0x70003b>
     a88:	0f 90       	pop	r0
     a8a:	00 92 3f 00 	sts	0x003F, r0	; 0x80003f <__TEXT_REGION_LENGTH__+0x70003f>
     a8e:	0f 90       	pop	r0
     a90:	1f 90       	pop	r1
     a92:	18 95       	reti

00000a94 <DriverSysClkXtalInit>:
     a94:	8b ec       	ldi	r24, 0xCB	; 203
     a96:	80 93 52 00 	sts	0x0052, r24	; 0x800052 <__TEXT_REGION_LENGTH__+0x700052>
     a9a:	88 e0       	ldi	r24, 0x08	; 8
     a9c:	80 93 50 00 	sts	0x0050, r24	; 0x800050 <__TEXT_REGION_LENGTH__+0x700050>
     aa0:	80 91 51 00 	lds	r24, 0x0051	; 0x800051 <__TEXT_REGION_LENGTH__+0x700051>
     aa4:	83 ff       	sbrs	r24, 3
     aa6:	fc cf       	rjmp	.-8      	; 0xaa0 <DriverSysClkXtalInit+0xc>
     aa8:	82 ec       	ldi	r24, 0xC2	; 194
     aaa:	80 93 55 00 	sts	0x0055, r24	; 0x800055 <__TEXT_REGION_LENGTH__+0x700055>
     aae:	88 e1       	ldi	r24, 0x18	; 24
     ab0:	80 93 50 00 	sts	0x0050, r24	; 0x800050 <__TEXT_REGION_LENGTH__+0x700050>
     ab4:	80 91 51 00 	lds	r24, 0x0051	; 0x800051 <__TEXT_REGION_LENGTH__+0x700051>
     ab8:	84 ff       	sbrs	r24, 4
     aba:	fc cf       	rjmp	.-8      	; 0xab4 <DriverSysClkXtalInit+0x20>
     abc:	88 ed       	ldi	r24, 0xD8	; 216
     abe:	84 bf       	out	0x34, r24	; 52
     ac0:	84 e0       	ldi	r24, 0x04	; 4
     ac2:	80 93 40 00 	sts	0x0040, r24	; 0x800040 <__TEXT_REGION_LENGTH__+0x700040>
     ac6:	80 e0       	ldi	r24, 0x00	; 0
     ac8:	08 95       	ret

00000aca <DriverTWIMInit>:
     aca:	cf 93       	push	r28
     acc:	df 93       	push	r29
     ace:	cd b7       	in	r28, 0x3d	; 61
     ad0:	de b7       	in	r29, 0x3e	; 62
     ad2:	10 92 73 20 	sts	0x2073, r1	; 0x802073 <Twim_status>
     ad6:	80 e8       	ldi	r24, 0x80	; 128
     ad8:	96 e0       	ldi	r25, 0x06	; 6
     ada:	28 e1       	ldi	r18, 0x18	; 24
     adc:	fc 01       	movw	r30, r24
     ade:	20 8b       	std	Z+16, r18	; 0x10
     ae0:	80 e8       	ldi	r24, 0x80	; 128
     ae2:	96 e0       	ldi	r25, 0x06	; 6
     ae4:	28 e1       	ldi	r18, 0x18	; 24
     ae6:	fc 01       	movw	r30, r24
     ae8:	21 8b       	std	Z+17, r18	; 0x11
     aea:	80 ea       	ldi	r24, 0xA0	; 160
     aec:	94 e0       	ldi	r25, 0x04	; 4
     aee:	28 e7       	ldi	r18, 0x78	; 120
     af0:	fc 01       	movw	r30, r24
     af2:	21 83       	std	Z+1, r18	; 0x01
     af4:	80 ea       	ldi	r24, 0xA0	; 160
     af6:	94 e0       	ldi	r25, 0x04	; 4
     af8:	23 e2       	ldi	r18, 0x23	; 35
     afa:	fc 01       	movw	r30, r24
     afc:	25 83       	std	Z+5, r18	; 0x05
     afe:	80 ea       	ldi	r24, 0xA0	; 160
     b00:	94 e0       	ldi	r25, 0x04	; 4
     b02:	21 e0       	ldi	r18, 0x01	; 1
     b04:	fc 01       	movw	r30, r24
     b06:	24 83       	std	Z+4, r18	; 0x04
     b08:	00 00       	nop
     b0a:	df 91       	pop	r29
     b0c:	cf 91       	pop	r28
     b0e:	08 95       	ret

00000b10 <TWIMWrite>:
     b10:	0f 93       	push	r16
     b12:	cf 93       	push	r28
     b14:	df 93       	push	r29
     b16:	cd b7       	in	r28, 0x3d	; 61
     b18:	de b7       	in	r29, 0x3e	; 62
     b1a:	25 97       	sbiw	r28, 0x05	; 5
     b1c:	cd bf       	out	0x3d, r28	; 61
     b1e:	de bf       	out	0x3e, r29	; 62
     b20:	8a 83       	std	Y+2, r24	; 0x02
     b22:	6b 83       	std	Y+3, r22	; 0x03
     b24:	7c 83       	std	Y+4, r23	; 0x04
     b26:	4d 83       	std	Y+5, r20	; 0x05
     b28:	8b 81       	ldd	r24, Y+3	; 0x03
     b2a:	9c 81       	ldd	r25, Y+4	; 0x04
     b2c:	00 e0       	ldi	r16, 0x00	; 0
     b2e:	20 e0       	ldi	r18, 0x00	; 0
     b30:	30 e0       	ldi	r19, 0x00	; 0
     b32:	4d 81       	ldd	r20, Y+5	; 0x05
     b34:	bc 01       	movw	r22, r24
     b36:	8a 81       	ldd	r24, Y+2	; 0x02
     b38:	0e 94 a7 05 	call	0xb4e	; 0xb4e <TWIMWriteRead>
     b3c:	89 83       	std	Y+1, r24	; 0x01
     b3e:	89 81       	ldd	r24, Y+1	; 0x01
     b40:	25 96       	adiw	r28, 0x05	; 5
     b42:	cd bf       	out	0x3d, r28	; 61
     b44:	de bf       	out	0x3e, r29	; 62
     b46:	df 91       	pop	r29
     b48:	cf 91       	pop	r28
     b4a:	0f 91       	pop	r16
     b4c:	08 95       	ret

00000b4e <TWIMWriteRead>:
     b4e:	0f 93       	push	r16
     b50:	cf 93       	push	r28
     b52:	df 93       	push	r29
     b54:	cd b7       	in	r28, 0x3d	; 61
     b56:	de b7       	in	r29, 0x3e	; 62
     b58:	29 97       	sbiw	r28, 0x09	; 9
     b5a:	cd bf       	out	0x3d, r28	; 61
     b5c:	de bf       	out	0x3e, r29	; 62
     b5e:	8b 83       	std	Y+3, r24	; 0x03
     b60:	6c 83       	std	Y+4, r22	; 0x04
     b62:	7d 83       	std	Y+5, r23	; 0x05
     b64:	4e 83       	std	Y+6, r20	; 0x06
     b66:	2f 83       	std	Y+7, r18	; 0x07
     b68:	38 87       	std	Y+8, r19	; 0x08
     b6a:	09 87       	std	Y+9, r16	; 0x09
     b6c:	8c 81       	ldd	r24, Y+4	; 0x04
     b6e:	9d 81       	ldd	r25, Y+5	; 0x05
     b70:	80 93 6b 20 	sts	0x206B, r24	; 0x80206b <Twim_writeData>
     b74:	90 93 6c 20 	sts	0x206C, r25	; 0x80206c <Twim_writeData+0x1>
     b78:	8f 81       	ldd	r24, Y+7	; 0x07
     b7a:	98 85       	ldd	r25, Y+8	; 0x08
     b7c:	80 93 6d 20 	sts	0x206D, r24	; 0x80206d <Twim_readData>
     b80:	90 93 6e 20 	sts	0x206E, r25	; 0x80206e <Twim_readData+0x1>
     b84:	80 91 73 20 	lds	r24, 0x2073	; 0x802073 <Twim_status>
     b88:	88 23       	and	r24, r24
     b8a:	b9 f5       	brne	.+110    	; 0xbfa <TWIMWriteRead+0xac>
     b8c:	81 e0       	ldi	r24, 0x01	; 1
     b8e:	80 93 73 20 	sts	0x2073, r24	; 0x802073 <Twim_status>
     b92:	10 92 74 20 	sts	0x2074, r1	; 0x802074 <Twim_result>
     b96:	8b 81       	ldd	r24, Y+3	; 0x03
     b98:	88 0f       	add	r24, r24
     b9a:	80 93 6a 20 	sts	0x206A, r24	; 0x80206a <__data_end>
     b9e:	8e 81       	ldd	r24, Y+6	; 0x06
     ba0:	80 93 6f 20 	sts	0x206F, r24	; 0x80206f <Twim_bytesToWrite>
     ba4:	89 85       	ldd	r24, Y+9	; 0x09
     ba6:	80 93 70 20 	sts	0x2070, r24	; 0x802070 <Twim_bytesToRead>
     baa:	10 92 71 20 	sts	0x2071, r1	; 0x802071 <Twim_bytesWritten>
     bae:	10 92 72 20 	sts	0x2072, r1	; 0x802072 <Twim_bytesRead>
     bb2:	80 91 6f 20 	lds	r24, 0x206F	; 0x80206f <Twim_bytesToWrite>
     bb6:	88 23       	and	r24, r24
     bb8:	51 f0       	breq	.+20     	; 0xbce <TWIMWriteRead+0x80>
     bba:	80 91 6a 20 	lds	r24, 0x206A	; 0x80206a <__data_end>
     bbe:	8e 7f       	andi	r24, 0xFE	; 254
     bc0:	89 83       	std	Y+1, r24	; 0x01
     bc2:	80 ea       	ldi	r24, 0xA0	; 160
     bc4:	94 e0       	ldi	r25, 0x04	; 4
     bc6:	29 81       	ldd	r18, Y+1	; 0x01
     bc8:	fc 01       	movw	r30, r24
     bca:	26 83       	std	Z+6, r18	; 0x06
     bcc:	10 c0       	rjmp	.+32     	; 0xbee <TWIMWriteRead+0xa0>
     bce:	80 91 70 20 	lds	r24, 0x2070	; 0x802070 <Twim_bytesToRead>
     bd2:	88 23       	and	r24, r24
     bd4:	61 f0       	breq	.+24     	; 0xbee <TWIMWriteRead+0xa0>
     bd6:	80 91 6a 20 	lds	r24, 0x206A	; 0x80206a <__data_end>
     bda:	81 60       	ori	r24, 0x01	; 1
     bdc:	8a 83       	std	Y+2, r24	; 0x02
     bde:	80 ea       	ldi	r24, 0xA0	; 160
     be0:	94 e0       	ldi	r25, 0x04	; 4
     be2:	2a 81       	ldd	r18, Y+2	; 0x02
     be4:	fc 01       	movw	r30, r24
     be6:	26 83       	std	Z+6, r18	; 0x06
     be8:	02 c0       	rjmp	.+4      	; 0xbee <TWIMWriteRead+0xa0>
     bea:	81 e0       	ldi	r24, 0x01	; 1
     bec:	08 c0       	rjmp	.+16     	; 0xbfe <TWIMWriteRead+0xb0>
     bee:	00 00       	nop
     bf0:	80 91 73 20 	lds	r24, 0x2073	; 0x802073 <Twim_status>
     bf4:	88 23       	and	r24, r24
     bf6:	c9 f7       	brne	.-14     	; 0xbea <TWIMWriteRead+0x9c>
     bf8:	02 c0       	rjmp	.+4      	; 0xbfe <TWIMWriteRead+0xb0>
     bfa:	80 e0       	ldi	r24, 0x00	; 0
     bfc:	00 c0       	rjmp	.+0      	; 0xbfe <TWIMWriteRead+0xb0>
     bfe:	29 96       	adiw	r28, 0x09	; 9
     c00:	cd bf       	out	0x3d, r28	; 61
     c02:	de bf       	out	0x3e, r29	; 62
     c04:	df 91       	pop	r29
     c06:	cf 91       	pop	r28
     c08:	0f 91       	pop	r16
     c0a:	08 95       	ret

00000c0c <TWIMArbitrationLostBusErrorHandler>:
     c0c:	cf 93       	push	r28
     c0e:	df 93       	push	r29
     c10:	1f 92       	push	r1
     c12:	cd b7       	in	r28, 0x3d	; 61
     c14:	de b7       	in	r29, 0x3e	; 62
     c16:	80 ea       	ldi	r24, 0xA0	; 160
     c18:	94 e0       	ldi	r25, 0x04	; 4
     c1a:	fc 01       	movw	r30, r24
     c1c:	84 81       	ldd	r24, Z+4	; 0x04
     c1e:	89 83       	std	Y+1, r24	; 0x01
     c20:	89 81       	ldd	r24, Y+1	; 0x01
     c22:	88 2f       	mov	r24, r24
     c24:	90 e0       	ldi	r25, 0x00	; 0
     c26:	84 70       	andi	r24, 0x04	; 4
     c28:	99 27       	eor	r25, r25
     c2a:	89 2b       	or	r24, r25
     c2c:	21 f0       	breq	.+8      	; 0xc36 <TWIMArbitrationLostBusErrorHandler+0x2a>
     c2e:	84 e0       	ldi	r24, 0x04	; 4
     c30:	80 93 74 20 	sts	0x2074, r24	; 0x802074 <Twim_result>
     c34:	03 c0       	rjmp	.+6      	; 0xc3c <TWIMArbitrationLostBusErrorHandler+0x30>
     c36:	83 e0       	ldi	r24, 0x03	; 3
     c38:	80 93 74 20 	sts	0x2074, r24	; 0x802074 <Twim_result>
     c3c:	80 ea       	ldi	r24, 0xA0	; 160
     c3e:	94 e0       	ldi	r25, 0x04	; 4
     c40:	29 81       	ldd	r18, Y+1	; 0x01
     c42:	28 60       	ori	r18, 0x08	; 8
     c44:	fc 01       	movw	r30, r24
     c46:	24 83       	std	Z+4, r18	; 0x04
     c48:	10 92 73 20 	sts	0x2073, r1	; 0x802073 <Twim_status>
     c4c:	00 00       	nop
     c4e:	0f 90       	pop	r0
     c50:	df 91       	pop	r29
     c52:	cf 91       	pop	r28
     c54:	08 95       	ret

00000c56 <TWIMWriteHandler>:
     c56:	cf 93       	push	r28
     c58:	df 93       	push	r29
     c5a:	00 d0       	rcall	.+0      	; 0xc5c <TWIMWriteHandler+0x6>
     c5c:	1f 92       	push	r1
     c5e:	cd b7       	in	r28, 0x3d	; 61
     c60:	de b7       	in	r29, 0x3e	; 62
     c62:	80 91 6f 20 	lds	r24, 0x206F	; 0x80206f <Twim_bytesToWrite>
     c66:	89 83       	std	Y+1, r24	; 0x01
     c68:	80 91 70 20 	lds	r24, 0x2070	; 0x802070 <Twim_bytesToRead>
     c6c:	8a 83       	std	Y+2, r24	; 0x02
     c6e:	80 ea       	ldi	r24, 0xA0	; 160
     c70:	94 e0       	ldi	r25, 0x04	; 4
     c72:	fc 01       	movw	r30, r24
     c74:	84 81       	ldd	r24, Z+4	; 0x04
     c76:	88 2f       	mov	r24, r24
     c78:	90 e0       	ldi	r25, 0x00	; 0
     c7a:	80 71       	andi	r24, 0x10	; 16
     c7c:	99 27       	eor	r25, r25
     c7e:	89 2b       	or	r24, r25
     c80:	59 f0       	breq	.+22     	; 0xc98 <TWIMWriteHandler+0x42>
     c82:	80 ea       	ldi	r24, 0xA0	; 160
     c84:	94 e0       	ldi	r25, 0x04	; 4
     c86:	23 e0       	ldi	r18, 0x03	; 3
     c88:	fc 01       	movw	r30, r24
     c8a:	23 83       	std	Z+3, r18	; 0x03
     c8c:	85 e0       	ldi	r24, 0x05	; 5
     c8e:	80 93 74 20 	sts	0x2074, r24	; 0x802074 <Twim_result>
     c92:	10 92 73 20 	sts	0x2073, r1	; 0x802073 <Twim_status>
     c96:	34 c0       	rjmp	.+104    	; 0xd00 <TWIMWriteHandler+0xaa>
     c98:	90 91 71 20 	lds	r25, 0x2071	; 0x802071 <Twim_bytesWritten>
     c9c:	89 81       	ldd	r24, Y+1	; 0x01
     c9e:	98 17       	cp	r25, r24
     ca0:	c0 f4       	brcc	.+48     	; 0xcd2 <TWIMWriteHandler+0x7c>
     ca2:	20 91 6b 20 	lds	r18, 0x206B	; 0x80206b <Twim_writeData>
     ca6:	30 91 6c 20 	lds	r19, 0x206C	; 0x80206c <Twim_writeData+0x1>
     caa:	80 91 71 20 	lds	r24, 0x2071	; 0x802071 <Twim_bytesWritten>
     cae:	88 2f       	mov	r24, r24
     cb0:	90 e0       	ldi	r25, 0x00	; 0
     cb2:	82 0f       	add	r24, r18
     cb4:	93 1f       	adc	r25, r19
     cb6:	fc 01       	movw	r30, r24
     cb8:	80 81       	ld	r24, Z
     cba:	8b 83       	std	Y+3, r24	; 0x03
     cbc:	80 ea       	ldi	r24, 0xA0	; 160
     cbe:	94 e0       	ldi	r25, 0x04	; 4
     cc0:	2b 81       	ldd	r18, Y+3	; 0x03
     cc2:	fc 01       	movw	r30, r24
     cc4:	27 83       	std	Z+7, r18	; 0x07
     cc6:	80 91 71 20 	lds	r24, 0x2071	; 0x802071 <Twim_bytesWritten>
     cca:	8f 5f       	subi	r24, 0xFF	; 255
     ccc:	80 93 71 20 	sts	0x2071, r24	; 0x802071 <Twim_bytesWritten>
     cd0:	17 c0       	rjmp	.+46     	; 0xd00 <TWIMWriteHandler+0xaa>
     cd2:	90 91 72 20 	lds	r25, 0x2072	; 0x802072 <Twim_bytesRead>
     cd6:	8a 81       	ldd	r24, Y+2	; 0x02
     cd8:	98 17       	cp	r25, r24
     cda:	50 f4       	brcc	.+20     	; 0xcf0 <TWIMWriteHandler+0x9a>
     cdc:	80 91 6a 20 	lds	r24, 0x206A	; 0x80206a <__data_end>
     ce0:	81 60       	ori	r24, 0x01	; 1
     ce2:	8c 83       	std	Y+4, r24	; 0x04
     ce4:	80 ea       	ldi	r24, 0xA0	; 160
     ce6:	94 e0       	ldi	r25, 0x04	; 4
     ce8:	2c 81       	ldd	r18, Y+4	; 0x04
     cea:	fc 01       	movw	r30, r24
     cec:	26 83       	std	Z+6, r18	; 0x06
     cee:	08 c0       	rjmp	.+16     	; 0xd00 <TWIMWriteHandler+0xaa>
     cf0:	80 ea       	ldi	r24, 0xA0	; 160
     cf2:	94 e0       	ldi	r25, 0x04	; 4
     cf4:	23 e0       	ldi	r18, 0x03	; 3
     cf6:	fc 01       	movw	r30, r24
     cf8:	23 83       	std	Z+3, r18	; 0x03
     cfa:	81 e0       	ldi	r24, 0x01	; 1
     cfc:	0e 94 cd 06 	call	0xd9a	; 0xd9a <TWIMTransactionFinished>
     d00:	00 00       	nop
     d02:	24 96       	adiw	r28, 0x04	; 4
     d04:	cd bf       	out	0x3d, r28	; 61
     d06:	de bf       	out	0x3e, r29	; 62
     d08:	df 91       	pop	r29
     d0a:	cf 91       	pop	r28
     d0c:	08 95       	ret

00000d0e <TWIMReadHandler>:
     d0e:	cf 93       	push	r28
     d10:	df 93       	push	r29
     d12:	1f 92       	push	r1
     d14:	1f 92       	push	r1
     d16:	cd b7       	in	r28, 0x3d	; 61
     d18:	de b7       	in	r29, 0x3e	; 62
     d1a:	80 91 72 20 	lds	r24, 0x2072	; 0x802072 <Twim_bytesRead>
     d1e:	80 32       	cpi	r24, 0x20	; 32
     d20:	c0 f4       	brcc	.+48     	; 0xd52 <TWIMReadHandler+0x44>
     d22:	80 ea       	ldi	r24, 0xA0	; 160
     d24:	94 e0       	ldi	r25, 0x04	; 4
     d26:	fc 01       	movw	r30, r24
     d28:	87 81       	ldd	r24, Z+7	; 0x07
     d2a:	89 83       	std	Y+1, r24	; 0x01
     d2c:	20 91 6d 20 	lds	r18, 0x206D	; 0x80206d <Twim_readData>
     d30:	30 91 6e 20 	lds	r19, 0x206E	; 0x80206e <Twim_readData+0x1>
     d34:	80 91 72 20 	lds	r24, 0x2072	; 0x802072 <Twim_bytesRead>
     d38:	88 2f       	mov	r24, r24
     d3a:	90 e0       	ldi	r25, 0x00	; 0
     d3c:	82 0f       	add	r24, r18
     d3e:	93 1f       	adc	r25, r19
     d40:	29 81       	ldd	r18, Y+1	; 0x01
     d42:	fc 01       	movw	r30, r24
     d44:	20 83       	st	Z, r18
     d46:	80 91 72 20 	lds	r24, 0x2072	; 0x802072 <Twim_bytesRead>
     d4a:	8f 5f       	subi	r24, 0xFF	; 255
     d4c:	80 93 72 20 	sts	0x2072, r24	; 0x802072 <Twim_bytesRead>
     d50:	08 c0       	rjmp	.+16     	; 0xd62 <TWIMReadHandler+0x54>
     d52:	80 ea       	ldi	r24, 0xA0	; 160
     d54:	94 e0       	ldi	r25, 0x04	; 4
     d56:	23 e0       	ldi	r18, 0x03	; 3
     d58:	fc 01       	movw	r30, r24
     d5a:	23 83       	std	Z+3, r18	; 0x03
     d5c:	82 e0       	ldi	r24, 0x02	; 2
     d5e:	0e 94 cd 06 	call	0xd9a	; 0xd9a <TWIMTransactionFinished>
     d62:	80 91 70 20 	lds	r24, 0x2070	; 0x802070 <Twim_bytesToRead>
     d66:	8a 83       	std	Y+2, r24	; 0x02
     d68:	90 91 72 20 	lds	r25, 0x2072	; 0x802072 <Twim_bytesRead>
     d6c:	8a 81       	ldd	r24, Y+2	; 0x02
     d6e:	98 17       	cp	r25, r24
     d70:	30 f4       	brcc	.+12     	; 0xd7e <TWIMReadHandler+0x70>
     d72:	80 ea       	ldi	r24, 0xA0	; 160
     d74:	94 e0       	ldi	r25, 0x04	; 4
     d76:	22 e0       	ldi	r18, 0x02	; 2
     d78:	fc 01       	movw	r30, r24
     d7a:	23 83       	std	Z+3, r18	; 0x03
     d7c:	08 c0       	rjmp	.+16     	; 0xd8e <TWIMReadHandler+0x80>
     d7e:	80 ea       	ldi	r24, 0xA0	; 160
     d80:	94 e0       	ldi	r25, 0x04	; 4
     d82:	27 e0       	ldi	r18, 0x07	; 7
     d84:	fc 01       	movw	r30, r24
     d86:	23 83       	std	Z+3, r18	; 0x03
     d88:	81 e0       	ldi	r24, 0x01	; 1
     d8a:	0e 94 cd 06 	call	0xd9a	; 0xd9a <TWIMTransactionFinished>
     d8e:	00 00       	nop
     d90:	0f 90       	pop	r0
     d92:	0f 90       	pop	r0
     d94:	df 91       	pop	r29
     d96:	cf 91       	pop	r28
     d98:	08 95       	ret

00000d9a <TWIMTransactionFinished>:
     d9a:	cf 93       	push	r28
     d9c:	df 93       	push	r29
     d9e:	1f 92       	push	r1
     da0:	cd b7       	in	r28, 0x3d	; 61
     da2:	de b7       	in	r29, 0x3e	; 62
     da4:	89 83       	std	Y+1, r24	; 0x01
     da6:	89 81       	ldd	r24, Y+1	; 0x01
     da8:	80 93 74 20 	sts	0x2074, r24	; 0x802074 <Twim_result>
     dac:	10 92 73 20 	sts	0x2073, r1	; 0x802073 <Twim_status>
     db0:	00 00       	nop
     db2:	0f 90       	pop	r0
     db4:	df 91       	pop	r29
     db6:	cf 91       	pop	r28
     db8:	08 95       	ret

00000dba <__vector_46>:
     dba:	1f 92       	push	r1
     dbc:	0f 92       	push	r0
     dbe:	00 90 3f 00 	lds	r0, 0x003F	; 0x80003f <__TEXT_REGION_LENGTH__+0x70003f>
     dc2:	0f 92       	push	r0
     dc4:	11 24       	eor	r1, r1
     dc6:	00 90 3b 00 	lds	r0, 0x003B	; 0x80003b <__TEXT_REGION_LENGTH__+0x70003b>
     dca:	0f 92       	push	r0
     dcc:	2f 93       	push	r18
     dce:	3f 93       	push	r19
     dd0:	4f 93       	push	r20
     dd2:	5f 93       	push	r21
     dd4:	6f 93       	push	r22
     dd6:	7f 93       	push	r23
     dd8:	8f 93       	push	r24
     dda:	9f 93       	push	r25
     ddc:	af 93       	push	r26
     dde:	bf 93       	push	r27
     de0:	ef 93       	push	r30
     de2:	ff 93       	push	r31
     de4:	cf 93       	push	r28
     de6:	df 93       	push	r29
     de8:	1f 92       	push	r1
     dea:	cd b7       	in	r28, 0x3d	; 61
     dec:	de b7       	in	r29, 0x3e	; 62
     dee:	80 ea       	ldi	r24, 0xA0	; 160
     df0:	94 e0       	ldi	r25, 0x04	; 4
     df2:	fc 01       	movw	r30, r24
     df4:	84 81       	ldd	r24, Z+4	; 0x04
     df6:	89 83       	std	Y+1, r24	; 0x01
     df8:	89 81       	ldd	r24, Y+1	; 0x01
     dfa:	88 2f       	mov	r24, r24
     dfc:	90 e0       	ldi	r25, 0x00	; 0
     dfe:	88 70       	andi	r24, 0x08	; 8
     e00:	99 27       	eor	r25, r25
     e02:	89 2b       	or	r24, r25
     e04:	39 f4       	brne	.+14     	; 0xe14 <__vector_46+0x5a>
     e06:	89 81       	ldd	r24, Y+1	; 0x01
     e08:	88 2f       	mov	r24, r24
     e0a:	90 e0       	ldi	r25, 0x00	; 0
     e0c:	84 70       	andi	r24, 0x04	; 4
     e0e:	99 27       	eor	r25, r25
     e10:	89 2b       	or	r24, r25
     e12:	19 f0       	breq	.+6      	; 0xe1a <__vector_46+0x60>
     e14:	0e 94 06 06 	call	0xc0c	; 0xc0c <TWIMArbitrationLostBusErrorHandler>
     e18:	13 c0       	rjmp	.+38     	; 0xe40 <__vector_46+0x86>
     e1a:	89 81       	ldd	r24, Y+1	; 0x01
     e1c:	88 2f       	mov	r24, r24
     e1e:	90 e0       	ldi	r25, 0x00	; 0
     e20:	80 74       	andi	r24, 0x40	; 64
     e22:	99 27       	eor	r25, r25
     e24:	89 2b       	or	r24, r25
     e26:	19 f0       	breq	.+6      	; 0xe2e <__vector_46+0x74>
     e28:	0e 94 2b 06 	call	0xc56	; 0xc56 <TWIMWriteHandler>
     e2c:	09 c0       	rjmp	.+18     	; 0xe40 <__vector_46+0x86>
     e2e:	89 81       	ldd	r24, Y+1	; 0x01
     e30:	88 23       	and	r24, r24
     e32:	1c f4       	brge	.+6      	; 0xe3a <__vector_46+0x80>
     e34:	0e 94 87 06 	call	0xd0e	; 0xd0e <TWIMReadHandler>
     e38:	03 c0       	rjmp	.+6      	; 0xe40 <__vector_46+0x86>
     e3a:	86 e0       	ldi	r24, 0x06	; 6
     e3c:	0e 94 cd 06 	call	0xd9a	; 0xd9a <TWIMTransactionFinished>
     e40:	80 91 73 20 	lds	r24, 0x2073	; 0x802073 <Twim_status>
     e44:	00 00       	nop
     e46:	0f 90       	pop	r0
     e48:	df 91       	pop	r29
     e4a:	cf 91       	pop	r28
     e4c:	ff 91       	pop	r31
     e4e:	ef 91       	pop	r30
     e50:	bf 91       	pop	r27
     e52:	af 91       	pop	r26
     e54:	9f 91       	pop	r25
     e56:	8f 91       	pop	r24
     e58:	7f 91       	pop	r23
     e5a:	6f 91       	pop	r22
     e5c:	5f 91       	pop	r21
     e5e:	4f 91       	pop	r20
     e60:	3f 91       	pop	r19
     e62:	2f 91       	pop	r18
     e64:	0f 90       	pop	r0
     e66:	00 92 3b 00 	sts	0x003B, r0	; 0x80003b <__TEXT_REGION_LENGTH__+0x70003b>
     e6a:	0f 90       	pop	r0
     e6c:	00 92 3f 00 	sts	0x003F, r0	; 0x80003f <__TEXT_REGION_LENGTH__+0x70003f>
     e70:	0f 90       	pop	r0
     e72:	1f 90       	pop	r1
     e74:	18 95       	reti

00000e76 <DriverUSARTInit>:
     e76:	cf 93       	push	r28
     e78:	df 93       	push	r29
     e7a:	cd b7       	in	r28, 0x3d	; 61
     e7c:	de b7       	in	r29, 0x3e	; 62
     e7e:	80 e8       	ldi	r24, 0x80	; 128
     e80:	96 e0       	ldi	r25, 0x06	; 6
     e82:	28 e0       	ldi	r18, 0x08	; 8
     e84:	fc 01       	movw	r30, r24
     e86:	21 83       	std	Z+1, r18	; 0x01
     e88:	80 e8       	ldi	r24, 0x80	; 128
     e8a:	96 e0       	ldi	r25, 0x06	; 6
     e8c:	24 e0       	ldi	r18, 0x04	; 4
     e8e:	fc 01       	movw	r30, r24
     e90:	22 83       	std	Z+2, r18	; 0x02
     e92:	80 ea       	ldi	r24, 0xA0	; 160
     e94:	9a e0       	ldi	r25, 0x0A	; 10
     e96:	fc 01       	movw	r30, r24
     e98:	13 82       	std	Z+3, r1	; 0x03
     e9a:	80 ea       	ldi	r24, 0xA0	; 160
     e9c:	9a e0       	ldi	r25, 0x0A	; 10
     e9e:	28 e1       	ldi	r18, 0x18	; 24
     ea0:	fc 01       	movw	r30, r24
     ea2:	24 83       	std	Z+4, r18	; 0x04
     ea4:	80 ea       	ldi	r24, 0xA0	; 160
     ea6:	9a e0       	ldi	r25, 0x0A	; 10
     ea8:	23 e0       	ldi	r18, 0x03	; 3
     eaa:	fc 01       	movw	r30, r24
     eac:	25 83       	std	Z+5, r18	; 0x05
     eae:	80 ea       	ldi	r24, 0xA0	; 160
     eb0:	9a e0       	ldi	r25, 0x0A	; 10
     eb2:	25 ee       	ldi	r18, 0xE5	; 229
     eb4:	fc 01       	movw	r30, r24
     eb6:	26 83       	std	Z+6, r18	; 0x06
     eb8:	80 ea       	ldi	r24, 0xA0	; 160
     eba:	9a e0       	ldi	r25, 0x0A	; 10
     ebc:	2c eb       	ldi	r18, 0xBC	; 188
     ebe:	fc 01       	movw	r30, r24
     ec0:	27 83       	std	Z+7, r18	; 0x07
     ec2:	80 e0       	ldi	r24, 0x00	; 0
     ec4:	90 e2       	ldi	r25, 0x20	; 32
     ec6:	80 93 7b 20 	sts	0x207B, r24	; 0x80207b <__iob+0x2>
     eca:	90 93 7c 20 	sts	0x207C, r25	; 0x80207c <__iob+0x3>
     ece:	80 e0       	ldi	r24, 0x00	; 0
     ed0:	90 e2       	ldi	r25, 0x20	; 32
     ed2:	80 93 79 20 	sts	0x2079, r24	; 0x802079 <__iob>
     ed6:	90 93 7a 20 	sts	0x207A, r25	; 0x80207a <__iob+0x1>
     eda:	00 00       	nop
     edc:	df 91       	pop	r29
     ede:	cf 91       	pop	r28
     ee0:	08 95       	ret

00000ee2 <stdio_putchar>:
     ee2:	cf 93       	push	r28
     ee4:	df 93       	push	r29
     ee6:	00 d0       	rcall	.+0      	; 0xee8 <stdio_putchar+0x6>
     ee8:	cd b7       	in	r28, 0x3d	; 61
     eea:	de b7       	in	r29, 0x3e	; 62
     eec:	89 83       	std	Y+1, r24	; 0x01
     eee:	6a 83       	std	Y+2, r22	; 0x02
     ef0:	7b 83       	std	Y+3, r23	; 0x03
     ef2:	80 ea       	ldi	r24, 0xA0	; 160
     ef4:	9a e0       	ldi	r25, 0x0A	; 10
     ef6:	29 81       	ldd	r18, Y+1	; 0x01
     ef8:	fc 01       	movw	r30, r24
     efa:	20 83       	st	Z, r18
     efc:	00 00       	nop
     efe:	80 ea       	ldi	r24, 0xA0	; 160
     f00:	9a e0       	ldi	r25, 0x0A	; 10
     f02:	fc 01       	movw	r30, r24
     f04:	81 81       	ldd	r24, Z+1	; 0x01
     f06:	88 2f       	mov	r24, r24
     f08:	90 e0       	ldi	r25, 0x00	; 0
     f0a:	80 74       	andi	r24, 0x40	; 64
     f0c:	99 27       	eor	r25, r25
     f0e:	89 2b       	or	r24, r25
     f10:	b1 f3       	breq	.-20     	; 0xefe <stdio_putchar+0x1c>
     f12:	80 ea       	ldi	r24, 0xA0	; 160
     f14:	9a e0       	ldi	r25, 0x0A	; 10
     f16:	20 e4       	ldi	r18, 0x40	; 64
     f18:	fc 01       	movw	r30, r24
     f1a:	21 83       	std	Z+1, r18	; 0x01
     f1c:	80 e0       	ldi	r24, 0x00	; 0
     f1e:	90 e0       	ldi	r25, 0x00	; 0
     f20:	23 96       	adiw	r28, 0x03	; 3
     f22:	cd bf       	out	0x3d, r28	; 61
     f24:	de bf       	out	0x3e, r29	; 62
     f26:	df 91       	pop	r29
     f28:	cf 91       	pop	r28
     f2a:	08 95       	ret

00000f2c <stdio_getchar>:
     f2c:	cf 93       	push	r28
     f2e:	df 93       	push	r29
     f30:	1f 92       	push	r1
     f32:	1f 92       	push	r1
     f34:	cd b7       	in	r28, 0x3d	; 61
     f36:	de b7       	in	r29, 0x3e	; 62
     f38:	89 83       	std	Y+1, r24	; 0x01
     f3a:	9a 83       	std	Y+2, r25	; 0x02
     f3c:	00 00       	nop
     f3e:	80 ea       	ldi	r24, 0xA0	; 160
     f40:	9a e0       	ldi	r25, 0x0A	; 10
     f42:	fc 01       	movw	r30, r24
     f44:	81 81       	ldd	r24, Z+1	; 0x01
     f46:	88 23       	and	r24, r24
     f48:	d4 f7       	brge	.-12     	; 0xf3e <stdio_getchar+0x12>
     f4a:	80 ea       	ldi	r24, 0xA0	; 160
     f4c:	9a e0       	ldi	r25, 0x0A	; 10
     f4e:	fc 01       	movw	r30, r24
     f50:	80 81       	ld	r24, Z
     f52:	88 2f       	mov	r24, r24
     f54:	90 e0       	ldi	r25, 0x00	; 0
     f56:	0f 90       	pop	r0
     f58:	0f 90       	pop	r0
     f5a:	df 91       	pop	r29
     f5c:	cf 91       	pop	r28
     f5e:	08 95       	ret

00000f60 <main>:

char text[10];
char a = 0b111;

int main(void)
{
     f60:	cf 93       	push	r28
     f62:	df 93       	push	r29
     f64:	cd b7       	in	r28, 0x3d	; 61
     f66:	de b7       	in	r29, 0x3e	; 62
     f68:	66 97       	sbiw	r28, 0x16	; 22
     f6a:	cd bf       	out	0x3d, r28	; 61
     f6c:	de bf       	out	0x3e, r29	; 62
	//###1###
	
	//Initialize drivers
	DriverSysClkXtalInit();	//Clock init
     f6e:	0e 94 4a 05 	call	0xa94	; 0xa94 <DriverSysClkXtalInit>
	DriverUSARTInit();		//USART init and link to stdio
     f72:	0e 94 3b 07 	call	0xe76	; 0xe76 <DriverUSARTInit>
	DriverTWIMInit();		//Initialize TWI in master mode
     f76:	0e 94 65 05 	call	0xaca	; 0xaca <DriverTWIMInit>
	//DriverCursorstickInit();//Initialize cursor stick
	DriverLedInit();		//Initialize LED's
     f7a:	0e 94 a5 02 	call	0x54a	; 0x54a <DriverLedInit>
	//DriverPowerInit();		//Initialize aux power driver
	//DriverAdcInit();		//Initialize ADC driver
	DriverMotorInit();		//Initialize motor driver
     f7e:	0e 94 e4 02 	call	0x5c8	; 0x5c8 <DriverMotorInit>
	DriverAdps9960Init();
     f82:	0e 94 a6 01 	call	0x34c	; 0x34c <DriverAdps9960Init>

	DriverPowerVccAuxSet(1);//Enable Auxillary power line
     f86:	81 e0       	ldi	r24, 0x01	; 1
     f88:	0e 94 a6 09 	call	0x134c	; 0x134c <DriverPowerVccAuxSet>
	
	//_delay_ms(500);
	
		
	DriverMotorSet(4095,4095);
     f8c:	6f ef       	ldi	r22, 0xFF	; 255
     f8e:	7f e0       	ldi	r23, 0x0F	; 15
     f90:	8f ef       	ldi	r24, 0xFF	; 255
     f92:	9f e0       	ldi	r25, 0x0F	; 15
     f94:	0e 94 58 03 	call	0x6b0	; 0x6b0 <DriverMotorSet>
	uint16_t Clear, Red, Green, Blue;
	DriverLedWrite(a);
     f98:	80 91 0e 20 	lds	r24, 0x200E	; 0x80200e <a>
     f9c:	0e 94 cb 02 	call	0x596	; 0x596 <DriverLedWrite>
	a=1;
     fa0:	81 e0       	ldi	r24, 0x01	; 1
     fa2:	80 93 0e 20 	sts	0x200E, r24	; 0x80200e <a>
	while(1)
	{
		a = a<<1;
     fa6:	80 91 0e 20 	lds	r24, 0x200E	; 0x80200e <a>
     faa:	88 0f       	add	r24, r24
     fac:	80 93 0e 20 	sts	0x200E, r24	; 0x80200e <a>
		if (!(a&0x0F))
     fb0:	80 91 0e 20 	lds	r24, 0x200E	; 0x80200e <a>
     fb4:	88 2f       	mov	r24, r24
     fb6:	90 e0       	ldi	r25, 0x00	; 0
     fb8:	8f 70       	andi	r24, 0x0F	; 15
     fba:	99 27       	eor	r25, r25
     fbc:	89 2b       	or	r24, r25
     fbe:	49 f4       	brne	.+18     	; 0xfd2 <main+0x72>
		{
			DriverMotorSet(0,0);
     fc0:	60 e0       	ldi	r22, 0x00	; 0
     fc2:	70 e0       	ldi	r23, 0x00	; 0
     fc4:	80 e0       	ldi	r24, 0x00	; 0
     fc6:	90 e0       	ldi	r25, 0x00	; 0
     fc8:	0e 94 58 03 	call	0x6b0	; 0x6b0 <DriverMotorSet>
			a = 0b01;
     fcc:	81 e0       	ldi	r24, 0x01	; 1
     fce:	80 93 0e 20 	sts	0x200E, r24	; 0x80200e <a>
		}
		DriverAdps9960Get(&Clear, &Red, &Green, &Blue);
     fd2:	9e 01       	movw	r18, r28
     fd4:	2b 5e       	subi	r18, 0xEB	; 235
     fd6:	3f 4f       	sbci	r19, 0xFF	; 255
     fd8:	ae 01       	movw	r20, r28
     fda:	4d 5e       	subi	r20, 0xED	; 237
     fdc:	5f 4f       	sbci	r21, 0xFF	; 255
     fde:	be 01       	movw	r22, r28
     fe0:	6f 5e       	subi	r22, 0xEF	; 239
     fe2:	7f 4f       	sbci	r23, 0xFF	; 255
     fe4:	ce 01       	movw	r24, r28
     fe6:	0f 96       	adiw	r24, 0x0f	; 15
     fe8:	0e 94 0f 02 	call	0x41e	; 0x41e <DriverAdps9960Get>
		printf ("Clear:%d\t Red:%d\t Green:%d\t Blue:%d\t\n\r", Clear, Red, Green, Blue);
     fec:	6d 89       	ldd	r22, Y+21	; 0x15
     fee:	7e 89       	ldd	r23, Y+22	; 0x16
     ff0:	4b 89       	ldd	r20, Y+19	; 0x13
     ff2:	5c 89       	ldd	r21, Y+20	; 0x14
     ff4:	29 89       	ldd	r18, Y+17	; 0x11
     ff6:	3a 89       	ldd	r19, Y+18	; 0x12
     ff8:	8f 85       	ldd	r24, Y+15	; 0x0f
     ffa:	98 89       	ldd	r25, Y+16	; 0x10
     ffc:	e7 2f       	mov	r30, r23
     ffe:	ef 93       	push	r30
    1000:	6f 93       	push	r22
    1002:	65 2f       	mov	r22, r21
    1004:	6f 93       	push	r22
    1006:	4f 93       	push	r20
    1008:	43 2f       	mov	r20, r19
    100a:	4f 93       	push	r20
    100c:	2f 93       	push	r18
    100e:	29 2f       	mov	r18, r25
    1010:	2f 93       	push	r18
    1012:	8f 93       	push	r24
    1014:	83 e4       	ldi	r24, 0x43	; 67
    1016:	90 e2       	ldi	r25, 0x20	; 32
    1018:	89 2f       	mov	r24, r25
    101a:	8f 93       	push	r24
    101c:	83 e4       	ldi	r24, 0x43	; 67
    101e:	90 e2       	ldi	r25, 0x20	; 32
    1020:	8f 93       	push	r24
    1022:	0e 94 7a 0e 	call	0x1cf4	; 0x1cf4 <printf>
    1026:	8d b7       	in	r24, 0x3d	; 61
    1028:	9e b7       	in	r25, 0x3e	; 62
    102a:	0a 96       	adiw	r24, 0x0a	; 10
    102c:	cd bf       	out	0x3d, r28	; 61
    102e:	de bf       	out	0x3e, r29	; 62
    1030:	80 e0       	ldi	r24, 0x00	; 0
    1032:	90 e0       	ldi	r25, 0x00	; 0
    1034:	aa e7       	ldi	r26, 0x7A	; 122
    1036:	b4 e4       	ldi	r27, 0x44	; 68
    1038:	89 83       	std	Y+1, r24	; 0x01
    103a:	9a 83       	std	Y+2, r25	; 0x02
    103c:	ab 83       	std	Y+3, r26	; 0x03
    103e:	bc 83       	std	Y+4, r27	; 0x04

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    1040:	20 e0       	ldi	r18, 0x00	; 0
    1042:	30 e0       	ldi	r19, 0x00	; 0
    1044:	4a ef       	ldi	r20, 0xFA	; 250
    1046:	55 e4       	ldi	r21, 0x45	; 69
    1048:	69 81       	ldd	r22, Y+1	; 0x01
    104a:	7a 81       	ldd	r23, Y+2	; 0x02
    104c:	8b 81       	ldd	r24, Y+3	; 0x03
    104e:	9c 81       	ldd	r25, Y+4	; 0x04
    1050:	0e 94 11 09 	call	0x1222	; 0x1222 <__mulsf3>
    1054:	dc 01       	movw	r26, r24
    1056:	cb 01       	movw	r24, r22
    1058:	8d 83       	std	Y+5, r24	; 0x05
    105a:	9e 83       	std	Y+6, r25	; 0x06
    105c:	af 83       	std	Y+7, r26	; 0x07
    105e:	b8 87       	std	Y+8, r27	; 0x08
	if (__tmp < 1.0)
    1060:	20 e0       	ldi	r18, 0x00	; 0
    1062:	30 e0       	ldi	r19, 0x00	; 0
    1064:	40 e8       	ldi	r20, 0x80	; 128
    1066:	5f e3       	ldi	r21, 0x3F	; 63
    1068:	6d 81       	ldd	r22, Y+5	; 0x05
    106a:	7e 81       	ldd	r23, Y+6	; 0x06
    106c:	8f 81       	ldd	r24, Y+7	; 0x07
    106e:	98 85       	ldd	r25, Y+8	; 0x08
    1070:	0e 94 8b 08 	call	0x1116	; 0x1116 <__cmpsf2>
    1074:	88 23       	and	r24, r24
    1076:	2c f4       	brge	.+10     	; 0x1082 <main+0x122>
		__ticks = 1;
    1078:	81 e0       	ldi	r24, 0x01	; 1
    107a:	90 e0       	ldi	r25, 0x00	; 0
    107c:	89 87       	std	Y+9, r24	; 0x09
    107e:	9a 87       	std	Y+10, r25	; 0x0a
    1080:	3f c0       	rjmp	.+126    	; 0x1100 <main+0x1a0>
	else if (__tmp > 65535)
    1082:	20 e0       	ldi	r18, 0x00	; 0
    1084:	3f ef       	ldi	r19, 0xFF	; 255
    1086:	4f e7       	ldi	r20, 0x7F	; 127
    1088:	57 e4       	ldi	r21, 0x47	; 71
    108a:	6d 81       	ldd	r22, Y+5	; 0x05
    108c:	7e 81       	ldd	r23, Y+6	; 0x06
    108e:	8f 81       	ldd	r24, Y+7	; 0x07
    1090:	98 85       	ldd	r25, Y+8	; 0x08
    1092:	0e 94 0c 09 	call	0x1218	; 0x1218 <__gesf2>
    1096:	18 16       	cp	r1, r24
    1098:	4c f5       	brge	.+82     	; 0x10ec <main+0x18c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    109a:	20 e0       	ldi	r18, 0x00	; 0
    109c:	30 e0       	ldi	r19, 0x00	; 0
    109e:	40 e2       	ldi	r20, 0x20	; 32
    10a0:	51 e4       	ldi	r21, 0x41	; 65
    10a2:	69 81       	ldd	r22, Y+1	; 0x01
    10a4:	7a 81       	ldd	r23, Y+2	; 0x02
    10a6:	8b 81       	ldd	r24, Y+3	; 0x03
    10a8:	9c 81       	ldd	r25, Y+4	; 0x04
    10aa:	0e 94 11 09 	call	0x1222	; 0x1222 <__mulsf3>
    10ae:	dc 01       	movw	r26, r24
    10b0:	cb 01       	movw	r24, r22
    10b2:	bc 01       	movw	r22, r24
    10b4:	cd 01       	movw	r24, r26
    10b6:	0e 94 90 08 	call	0x1120	; 0x1120 <__fixunssfsi>
    10ba:	dc 01       	movw	r26, r24
    10bc:	cb 01       	movw	r24, r22
    10be:	89 87       	std	Y+9, r24	; 0x09
    10c0:	9a 87       	std	Y+10, r25	; 0x0a
    10c2:	0f c0       	rjmp	.+30     	; 0x10e2 <main+0x182>
    10c4:	80 e2       	ldi	r24, 0x20	; 32
    10c6:	93 e0       	ldi	r25, 0x03	; 3
    10c8:	8b 87       	std	Y+11, r24	; 0x0b
    10ca:	9c 87       	std	Y+12, r25	; 0x0c
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    10cc:	8b 85       	ldd	r24, Y+11	; 0x0b
    10ce:	9c 85       	ldd	r25, Y+12	; 0x0c
    10d0:	01 97       	sbiw	r24, 0x01	; 1
    10d2:	f1 f7       	brne	.-4      	; 0x10d0 <main+0x170>
    10d4:	8b 87       	std	Y+11, r24	; 0x0b
    10d6:	9c 87       	std	Y+12, r25	; 0x0c
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    10d8:	89 85       	ldd	r24, Y+9	; 0x09
    10da:	9a 85       	ldd	r25, Y+10	; 0x0a
    10dc:	01 97       	sbiw	r24, 0x01	; 1
    10de:	89 87       	std	Y+9, r24	; 0x09
    10e0:	9a 87       	std	Y+10, r25	; 0x0a
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    10e2:	89 85       	ldd	r24, Y+9	; 0x09
    10e4:	9a 85       	ldd	r25, Y+10	; 0x0a
    10e6:	89 2b       	or	r24, r25
    10e8:	69 f7       	brne	.-38     	; 0x10c4 <main+0x164>
    10ea:	14 c0       	rjmp	.+40     	; 0x1114 <main+0x1b4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    10ec:	6d 81       	ldd	r22, Y+5	; 0x05
    10ee:	7e 81       	ldd	r23, Y+6	; 0x06
    10f0:	8f 81       	ldd	r24, Y+7	; 0x07
    10f2:	98 85       	ldd	r25, Y+8	; 0x08
    10f4:	0e 94 90 08 	call	0x1120	; 0x1120 <__fixunssfsi>
    10f8:	dc 01       	movw	r26, r24
    10fa:	cb 01       	movw	r24, r22
    10fc:	89 87       	std	Y+9, r24	; 0x09
    10fe:	9a 87       	std	Y+10, r25	; 0x0a
    1100:	89 85       	ldd	r24, Y+9	; 0x09
    1102:	9a 85       	ldd	r25, Y+10	; 0x0a
    1104:	8d 87       	std	Y+13, r24	; 0x0d
    1106:	9e 87       	std	Y+14, r25	; 0x0e
    1108:	8d 85       	ldd	r24, Y+13	; 0x0d
    110a:	9e 85       	ldd	r25, Y+14	; 0x0e
    110c:	01 97       	sbiw	r24, 0x01	; 1
    110e:	f1 f7       	brne	.-4      	; 0x110c <main+0x1ac>
    1110:	8d 87       	std	Y+13, r24	; 0x0d
    1112:	9e 87       	std	Y+14, r25	; 0x0e
		_delay_ms(1000);
	}
    1114:	48 cf       	rjmp	.-368    	; 0xfa6 <main+0x46>

00001116 <__cmpsf2>:
    1116:	0e 94 bf 08 	call	0x117e	; 0x117e <__fp_cmp>
    111a:	08 f4       	brcc	.+2      	; 0x111e <__cmpsf2+0x8>
    111c:	81 e0       	ldi	r24, 0x01	; 1
    111e:	08 95       	ret

00001120 <__fixunssfsi>:
    1120:	0e 94 eb 08 	call	0x11d6	; 0x11d6 <__fp_splitA>
    1124:	88 f0       	brcs	.+34     	; 0x1148 <__fixunssfsi+0x28>
    1126:	9f 57       	subi	r25, 0x7F	; 127
    1128:	98 f0       	brcs	.+38     	; 0x1150 <__fixunssfsi+0x30>
    112a:	b9 2f       	mov	r27, r25
    112c:	99 27       	eor	r25, r25
    112e:	b7 51       	subi	r27, 0x17	; 23
    1130:	b0 f0       	brcs	.+44     	; 0x115e <__fixunssfsi+0x3e>
    1132:	e1 f0       	breq	.+56     	; 0x116c <__fixunssfsi+0x4c>
    1134:	66 0f       	add	r22, r22
    1136:	77 1f       	adc	r23, r23
    1138:	88 1f       	adc	r24, r24
    113a:	99 1f       	adc	r25, r25
    113c:	1a f0       	brmi	.+6      	; 0x1144 <__fixunssfsi+0x24>
    113e:	ba 95       	dec	r27
    1140:	c9 f7       	brne	.-14     	; 0x1134 <__fixunssfsi+0x14>
    1142:	14 c0       	rjmp	.+40     	; 0x116c <__fixunssfsi+0x4c>
    1144:	b1 30       	cpi	r27, 0x01	; 1
    1146:	91 f0       	breq	.+36     	; 0x116c <__fixunssfsi+0x4c>
    1148:	0e 94 05 09 	call	0x120a	; 0x120a <__fp_zero>
    114c:	b1 e0       	ldi	r27, 0x01	; 1
    114e:	08 95       	ret
    1150:	0c 94 05 09 	jmp	0x120a	; 0x120a <__fp_zero>
    1154:	67 2f       	mov	r22, r23
    1156:	78 2f       	mov	r23, r24
    1158:	88 27       	eor	r24, r24
    115a:	b8 5f       	subi	r27, 0xF8	; 248
    115c:	39 f0       	breq	.+14     	; 0x116c <__fixunssfsi+0x4c>
    115e:	b9 3f       	cpi	r27, 0xF9	; 249
    1160:	cc f3       	brlt	.-14     	; 0x1154 <__fixunssfsi+0x34>
    1162:	86 95       	lsr	r24
    1164:	77 95       	ror	r23
    1166:	67 95       	ror	r22
    1168:	b3 95       	inc	r27
    116a:	d9 f7       	brne	.-10     	; 0x1162 <__fixunssfsi+0x42>
    116c:	3e f4       	brtc	.+14     	; 0x117c <__fixunssfsi+0x5c>
    116e:	90 95       	com	r25
    1170:	80 95       	com	r24
    1172:	70 95       	com	r23
    1174:	61 95       	neg	r22
    1176:	7f 4f       	sbci	r23, 0xFF	; 255
    1178:	8f 4f       	sbci	r24, 0xFF	; 255
    117a:	9f 4f       	sbci	r25, 0xFF	; 255
    117c:	08 95       	ret

0000117e <__fp_cmp>:
    117e:	99 0f       	add	r25, r25
    1180:	00 08       	sbc	r0, r0
    1182:	55 0f       	add	r21, r21
    1184:	aa 0b       	sbc	r26, r26
    1186:	e0 e8       	ldi	r30, 0x80	; 128
    1188:	fe ef       	ldi	r31, 0xFE	; 254
    118a:	16 16       	cp	r1, r22
    118c:	17 06       	cpc	r1, r23
    118e:	e8 07       	cpc	r30, r24
    1190:	f9 07       	cpc	r31, r25
    1192:	c0 f0       	brcs	.+48     	; 0x11c4 <__fp_cmp+0x46>
    1194:	12 16       	cp	r1, r18
    1196:	13 06       	cpc	r1, r19
    1198:	e4 07       	cpc	r30, r20
    119a:	f5 07       	cpc	r31, r21
    119c:	98 f0       	brcs	.+38     	; 0x11c4 <__fp_cmp+0x46>
    119e:	62 1b       	sub	r22, r18
    11a0:	73 0b       	sbc	r23, r19
    11a2:	84 0b       	sbc	r24, r20
    11a4:	95 0b       	sbc	r25, r21
    11a6:	39 f4       	brne	.+14     	; 0x11b6 <__fp_cmp+0x38>
    11a8:	0a 26       	eor	r0, r26
    11aa:	61 f0       	breq	.+24     	; 0x11c4 <__fp_cmp+0x46>
    11ac:	23 2b       	or	r18, r19
    11ae:	24 2b       	or	r18, r20
    11b0:	25 2b       	or	r18, r21
    11b2:	21 f4       	brne	.+8      	; 0x11bc <__fp_cmp+0x3e>
    11b4:	08 95       	ret
    11b6:	0a 26       	eor	r0, r26
    11b8:	09 f4       	brne	.+2      	; 0x11bc <__fp_cmp+0x3e>
    11ba:	a1 40       	sbci	r26, 0x01	; 1
    11bc:	a6 95       	lsr	r26
    11be:	8f ef       	ldi	r24, 0xFF	; 255
    11c0:	81 1d       	adc	r24, r1
    11c2:	81 1d       	adc	r24, r1
    11c4:	08 95       	ret

000011c6 <__fp_split3>:
    11c6:	57 fd       	sbrc	r21, 7
    11c8:	90 58       	subi	r25, 0x80	; 128
    11ca:	44 0f       	add	r20, r20
    11cc:	55 1f       	adc	r21, r21
    11ce:	59 f0       	breq	.+22     	; 0x11e6 <__fp_splitA+0x10>
    11d0:	5f 3f       	cpi	r21, 0xFF	; 255
    11d2:	71 f0       	breq	.+28     	; 0x11f0 <__fp_splitA+0x1a>
    11d4:	47 95       	ror	r20

000011d6 <__fp_splitA>:
    11d6:	88 0f       	add	r24, r24
    11d8:	97 fb       	bst	r25, 7
    11da:	99 1f       	adc	r25, r25
    11dc:	61 f0       	breq	.+24     	; 0x11f6 <__fp_splitA+0x20>
    11de:	9f 3f       	cpi	r25, 0xFF	; 255
    11e0:	79 f0       	breq	.+30     	; 0x1200 <__fp_splitA+0x2a>
    11e2:	87 95       	ror	r24
    11e4:	08 95       	ret
    11e6:	12 16       	cp	r1, r18
    11e8:	13 06       	cpc	r1, r19
    11ea:	14 06       	cpc	r1, r20
    11ec:	55 1f       	adc	r21, r21
    11ee:	f2 cf       	rjmp	.-28     	; 0x11d4 <__fp_split3+0xe>
    11f0:	46 95       	lsr	r20
    11f2:	f1 df       	rcall	.-30     	; 0x11d6 <__fp_splitA>
    11f4:	08 c0       	rjmp	.+16     	; 0x1206 <__fp_splitA+0x30>
    11f6:	16 16       	cp	r1, r22
    11f8:	17 06       	cpc	r1, r23
    11fa:	18 06       	cpc	r1, r24
    11fc:	99 1f       	adc	r25, r25
    11fe:	f1 cf       	rjmp	.-30     	; 0x11e2 <__fp_splitA+0xc>
    1200:	86 95       	lsr	r24
    1202:	71 05       	cpc	r23, r1
    1204:	61 05       	cpc	r22, r1
    1206:	08 94       	sec
    1208:	08 95       	ret

0000120a <__fp_zero>:
    120a:	e8 94       	clt

0000120c <__fp_szero>:
    120c:	bb 27       	eor	r27, r27
    120e:	66 27       	eor	r22, r22
    1210:	77 27       	eor	r23, r23
    1212:	cb 01       	movw	r24, r22
    1214:	97 f9       	bld	r25, 7
    1216:	08 95       	ret

00001218 <__gesf2>:
    1218:	0e 94 bf 08 	call	0x117e	; 0x117e <__fp_cmp>
    121c:	08 f4       	brcc	.+2      	; 0x1220 <__gesf2+0x8>
    121e:	8f ef       	ldi	r24, 0xFF	; 255
    1220:	08 95       	ret

00001222 <__mulsf3>:
    1222:	0e 94 24 09 	call	0x1248	; 0x1248 <__mulsf3x>
    1226:	0c 94 95 09 	jmp	0x132a	; 0x132a <__fp_round>
    122a:	0e 94 87 09 	call	0x130e	; 0x130e <__fp_pscA>
    122e:	38 f0       	brcs	.+14     	; 0x123e <__mulsf3+0x1c>
    1230:	0e 94 8e 09 	call	0x131c	; 0x131c <__fp_pscB>
    1234:	20 f0       	brcs	.+8      	; 0x123e <__mulsf3+0x1c>
    1236:	95 23       	and	r25, r21
    1238:	11 f0       	breq	.+4      	; 0x123e <__mulsf3+0x1c>
    123a:	0c 94 7e 09 	jmp	0x12fc	; 0x12fc <__fp_inf>
    123e:	0c 94 84 09 	jmp	0x1308	; 0x1308 <__fp_nan>
    1242:	11 24       	eor	r1, r1
    1244:	0c 94 06 09 	jmp	0x120c	; 0x120c <__fp_szero>

00001248 <__mulsf3x>:
    1248:	0e 94 e3 08 	call	0x11c6	; 0x11c6 <__fp_split3>
    124c:	70 f3       	brcs	.-36     	; 0x122a <__mulsf3+0x8>

0000124e <__mulsf3_pse>:
    124e:	95 9f       	mul	r25, r21
    1250:	c1 f3       	breq	.-16     	; 0x1242 <__mulsf3+0x20>
    1252:	95 0f       	add	r25, r21
    1254:	50 e0       	ldi	r21, 0x00	; 0
    1256:	55 1f       	adc	r21, r21
    1258:	62 9f       	mul	r22, r18
    125a:	f0 01       	movw	r30, r0
    125c:	72 9f       	mul	r23, r18
    125e:	bb 27       	eor	r27, r27
    1260:	f0 0d       	add	r31, r0
    1262:	b1 1d       	adc	r27, r1
    1264:	63 9f       	mul	r22, r19
    1266:	aa 27       	eor	r26, r26
    1268:	f0 0d       	add	r31, r0
    126a:	b1 1d       	adc	r27, r1
    126c:	aa 1f       	adc	r26, r26
    126e:	64 9f       	mul	r22, r20
    1270:	66 27       	eor	r22, r22
    1272:	b0 0d       	add	r27, r0
    1274:	a1 1d       	adc	r26, r1
    1276:	66 1f       	adc	r22, r22
    1278:	82 9f       	mul	r24, r18
    127a:	22 27       	eor	r18, r18
    127c:	b0 0d       	add	r27, r0
    127e:	a1 1d       	adc	r26, r1
    1280:	62 1f       	adc	r22, r18
    1282:	73 9f       	mul	r23, r19
    1284:	b0 0d       	add	r27, r0
    1286:	a1 1d       	adc	r26, r1
    1288:	62 1f       	adc	r22, r18
    128a:	83 9f       	mul	r24, r19
    128c:	a0 0d       	add	r26, r0
    128e:	61 1d       	adc	r22, r1
    1290:	22 1f       	adc	r18, r18
    1292:	74 9f       	mul	r23, r20
    1294:	33 27       	eor	r19, r19
    1296:	a0 0d       	add	r26, r0
    1298:	61 1d       	adc	r22, r1
    129a:	23 1f       	adc	r18, r19
    129c:	84 9f       	mul	r24, r20
    129e:	60 0d       	add	r22, r0
    12a0:	21 1d       	adc	r18, r1
    12a2:	82 2f       	mov	r24, r18
    12a4:	76 2f       	mov	r23, r22
    12a6:	6a 2f       	mov	r22, r26
    12a8:	11 24       	eor	r1, r1
    12aa:	9f 57       	subi	r25, 0x7F	; 127
    12ac:	50 40       	sbci	r21, 0x00	; 0
    12ae:	9a f0       	brmi	.+38     	; 0x12d6 <__mulsf3_pse+0x88>
    12b0:	f1 f0       	breq	.+60     	; 0x12ee <__mulsf3_pse+0xa0>
    12b2:	88 23       	and	r24, r24
    12b4:	4a f0       	brmi	.+18     	; 0x12c8 <__mulsf3_pse+0x7a>
    12b6:	ee 0f       	add	r30, r30
    12b8:	ff 1f       	adc	r31, r31
    12ba:	bb 1f       	adc	r27, r27
    12bc:	66 1f       	adc	r22, r22
    12be:	77 1f       	adc	r23, r23
    12c0:	88 1f       	adc	r24, r24
    12c2:	91 50       	subi	r25, 0x01	; 1
    12c4:	50 40       	sbci	r21, 0x00	; 0
    12c6:	a9 f7       	brne	.-22     	; 0x12b2 <__mulsf3_pse+0x64>
    12c8:	9e 3f       	cpi	r25, 0xFE	; 254
    12ca:	51 05       	cpc	r21, r1
    12cc:	80 f0       	brcs	.+32     	; 0x12ee <__mulsf3_pse+0xa0>
    12ce:	0c 94 7e 09 	jmp	0x12fc	; 0x12fc <__fp_inf>
    12d2:	0c 94 06 09 	jmp	0x120c	; 0x120c <__fp_szero>
    12d6:	5f 3f       	cpi	r21, 0xFF	; 255
    12d8:	e4 f3       	brlt	.-8      	; 0x12d2 <__mulsf3_pse+0x84>
    12da:	98 3e       	cpi	r25, 0xE8	; 232
    12dc:	d4 f3       	brlt	.-12     	; 0x12d2 <__mulsf3_pse+0x84>
    12de:	86 95       	lsr	r24
    12e0:	77 95       	ror	r23
    12e2:	67 95       	ror	r22
    12e4:	b7 95       	ror	r27
    12e6:	f7 95       	ror	r31
    12e8:	e7 95       	ror	r30
    12ea:	9f 5f       	subi	r25, 0xFF	; 255
    12ec:	c1 f7       	brne	.-16     	; 0x12de <__mulsf3_pse+0x90>
    12ee:	fe 2b       	or	r31, r30
    12f0:	88 0f       	add	r24, r24
    12f2:	91 1d       	adc	r25, r1
    12f4:	96 95       	lsr	r25
    12f6:	87 95       	ror	r24
    12f8:	97 f9       	bld	r25, 7
    12fa:	08 95       	ret

000012fc <__fp_inf>:
    12fc:	97 f9       	bld	r25, 7
    12fe:	9f 67       	ori	r25, 0x7F	; 127
    1300:	80 e8       	ldi	r24, 0x80	; 128
    1302:	70 e0       	ldi	r23, 0x00	; 0
    1304:	60 e0       	ldi	r22, 0x00	; 0
    1306:	08 95       	ret

00001308 <__fp_nan>:
    1308:	9f ef       	ldi	r25, 0xFF	; 255
    130a:	80 ec       	ldi	r24, 0xC0	; 192
    130c:	08 95       	ret

0000130e <__fp_pscA>:
    130e:	00 24       	eor	r0, r0
    1310:	0a 94       	dec	r0
    1312:	16 16       	cp	r1, r22
    1314:	17 06       	cpc	r1, r23
    1316:	18 06       	cpc	r1, r24
    1318:	09 06       	cpc	r0, r25
    131a:	08 95       	ret

0000131c <__fp_pscB>:
    131c:	00 24       	eor	r0, r0
    131e:	0a 94       	dec	r0
    1320:	12 16       	cp	r1, r18
    1322:	13 06       	cpc	r1, r19
    1324:	14 06       	cpc	r1, r20
    1326:	05 06       	cpc	r0, r21
    1328:	08 95       	ret

0000132a <__fp_round>:
    132a:	09 2e       	mov	r0, r25
    132c:	03 94       	inc	r0
    132e:	00 0c       	add	r0, r0
    1330:	11 f4       	brne	.+4      	; 0x1336 <__fp_round+0xc>
    1332:	88 23       	and	r24, r24
    1334:	52 f0       	brmi	.+20     	; 0x134a <__fp_round+0x20>
    1336:	bb 0f       	add	r27, r27
    1338:	40 f4       	brcc	.+16     	; 0x134a <__fp_round+0x20>
    133a:	bf 2b       	or	r27, r31
    133c:	11 f4       	brne	.+4      	; 0x1342 <__fp_round+0x18>
    133e:	60 ff       	sbrs	r22, 0
    1340:	04 c0       	rjmp	.+8      	; 0x134a <__fp_round+0x20>
    1342:	6f 5f       	subi	r22, 0xFF	; 255
    1344:	7f 4f       	sbci	r23, 0xFF	; 255
    1346:	8f 4f       	sbci	r24, 0xFF	; 255
    1348:	9f 4f       	sbci	r25, 0xFF	; 255
    134a:	08 95       	ret

0000134c <DriverPowerVccAuxSet>:
    134c:	81 11       	cpse	r24, r1
    134e:	04 c0       	rjmp	.+8      	; 0x1358 <DriverPowerVccAuxSet+0xc>
    1350:	80 e2       	ldi	r24, 0x20	; 32
    1352:	80 93 46 06 	sts	0x0646, r24	; 0x800646 <__TEXT_REGION_LENGTH__+0x700646>
    1356:	08 95       	ret
    1358:	80 e2       	ldi	r24, 0x20	; 32
    135a:	80 93 45 06 	sts	0x0645, r24	; 0x800645 <__TEXT_REGION_LENGTH__+0x700645>
    135e:	08 95       	ret

00001360 <vfprintf>:
    1360:	2f 92       	push	r2
    1362:	3f 92       	push	r3
    1364:	4f 92       	push	r4
    1366:	5f 92       	push	r5
    1368:	6f 92       	push	r6
    136a:	7f 92       	push	r7
    136c:	8f 92       	push	r8
    136e:	9f 92       	push	r9
    1370:	af 92       	push	r10
    1372:	bf 92       	push	r11
    1374:	cf 92       	push	r12
    1376:	df 92       	push	r13
    1378:	ef 92       	push	r14
    137a:	ff 92       	push	r15
    137c:	0f 93       	push	r16
    137e:	1f 93       	push	r17
    1380:	cf 93       	push	r28
    1382:	df 93       	push	r29
    1384:	cd b7       	in	r28, 0x3d	; 61
    1386:	de b7       	in	r29, 0x3e	; 62
    1388:	60 97       	sbiw	r28, 0x10	; 16
    138a:	cd bf       	out	0x3d, r28	; 61
    138c:	de bf       	out	0x3e, r29	; 62
    138e:	7c 01       	movw	r14, r24
    1390:	1b 01       	movw	r2, r22
    1392:	6a 01       	movw	r12, r20
    1394:	fc 01       	movw	r30, r24
    1396:	16 82       	std	Z+6, r1	; 0x06
    1398:	17 82       	std	Z+7, r1	; 0x07
    139a:	83 81       	ldd	r24, Z+3	; 0x03
    139c:	81 ff       	sbrs	r24, 1
    139e:	44 c3       	rjmp	.+1672   	; 0x1a28 <vfprintf+0x6c8>
    13a0:	9e 01       	movw	r18, r28
    13a2:	2f 5f       	subi	r18, 0xFF	; 255
    13a4:	3f 4f       	sbci	r19, 0xFF	; 255
    13a6:	39 01       	movw	r6, r18
    13a8:	f7 01       	movw	r30, r14
    13aa:	93 81       	ldd	r25, Z+3	; 0x03
    13ac:	f1 01       	movw	r30, r2
    13ae:	93 fd       	sbrc	r25, 3
    13b0:	85 91       	lpm	r24, Z+
    13b2:	93 ff       	sbrs	r25, 3
    13b4:	81 91       	ld	r24, Z+
    13b6:	1f 01       	movw	r2, r30
    13b8:	88 23       	and	r24, r24
    13ba:	09 f4       	brne	.+2      	; 0x13be <vfprintf+0x5e>
    13bc:	31 c3       	rjmp	.+1634   	; 0x1a20 <vfprintf+0x6c0>
    13be:	85 32       	cpi	r24, 0x25	; 37
    13c0:	39 f4       	brne	.+14     	; 0x13d0 <vfprintf+0x70>
    13c2:	93 fd       	sbrc	r25, 3
    13c4:	85 91       	lpm	r24, Z+
    13c6:	93 ff       	sbrs	r25, 3
    13c8:	81 91       	ld	r24, Z+
    13ca:	1f 01       	movw	r2, r30
    13cc:	85 32       	cpi	r24, 0x25	; 37
    13ce:	39 f4       	brne	.+14     	; 0x13de <vfprintf+0x7e>
    13d0:	b7 01       	movw	r22, r14
    13d2:	90 e0       	ldi	r25, 0x00	; 0
    13d4:	0e 94 3e 0e 	call	0x1c7c	; 0x1c7c <fputc>
    13d8:	56 01       	movw	r10, r12
    13da:	65 01       	movw	r12, r10
    13dc:	e5 cf       	rjmp	.-54     	; 0x13a8 <vfprintf+0x48>
    13de:	10 e0       	ldi	r17, 0x00	; 0
    13e0:	51 2c       	mov	r5, r1
    13e2:	91 2c       	mov	r9, r1
    13e4:	ff e1       	ldi	r31, 0x1F	; 31
    13e6:	f9 15       	cp	r31, r9
    13e8:	d8 f0       	brcs	.+54     	; 0x1420 <vfprintf+0xc0>
    13ea:	8b 32       	cpi	r24, 0x2B	; 43
    13ec:	79 f0       	breq	.+30     	; 0x140c <vfprintf+0xac>
    13ee:	38 f4       	brcc	.+14     	; 0x13fe <vfprintf+0x9e>
    13f0:	80 32       	cpi	r24, 0x20	; 32
    13f2:	79 f0       	breq	.+30     	; 0x1412 <vfprintf+0xb2>
    13f4:	83 32       	cpi	r24, 0x23	; 35
    13f6:	a1 f4       	brne	.+40     	; 0x1420 <vfprintf+0xc0>
    13f8:	f9 2d       	mov	r31, r9
    13fa:	f0 61       	ori	r31, 0x10	; 16
    13fc:	2e c0       	rjmp	.+92     	; 0x145a <vfprintf+0xfa>
    13fe:	8d 32       	cpi	r24, 0x2D	; 45
    1400:	61 f0       	breq	.+24     	; 0x141a <vfprintf+0xba>
    1402:	80 33       	cpi	r24, 0x30	; 48
    1404:	69 f4       	brne	.+26     	; 0x1420 <vfprintf+0xc0>
    1406:	29 2d       	mov	r18, r9
    1408:	21 60       	ori	r18, 0x01	; 1
    140a:	2d c0       	rjmp	.+90     	; 0x1466 <vfprintf+0x106>
    140c:	39 2d       	mov	r19, r9
    140e:	32 60       	ori	r19, 0x02	; 2
    1410:	93 2e       	mov	r9, r19
    1412:	89 2d       	mov	r24, r9
    1414:	84 60       	ori	r24, 0x04	; 4
    1416:	98 2e       	mov	r9, r24
    1418:	2a c0       	rjmp	.+84     	; 0x146e <vfprintf+0x10e>
    141a:	e9 2d       	mov	r30, r9
    141c:	e8 60       	ori	r30, 0x08	; 8
    141e:	15 c0       	rjmp	.+42     	; 0x144a <vfprintf+0xea>
    1420:	97 fc       	sbrc	r9, 7
    1422:	2d c0       	rjmp	.+90     	; 0x147e <vfprintf+0x11e>
    1424:	20 ed       	ldi	r18, 0xD0	; 208
    1426:	28 0f       	add	r18, r24
    1428:	2a 30       	cpi	r18, 0x0A	; 10
    142a:	88 f4       	brcc	.+34     	; 0x144e <vfprintf+0xee>
    142c:	96 fe       	sbrs	r9, 6
    142e:	06 c0       	rjmp	.+12     	; 0x143c <vfprintf+0xdc>
    1430:	3a e0       	ldi	r19, 0x0A	; 10
    1432:	13 9f       	mul	r17, r19
    1434:	20 0d       	add	r18, r0
    1436:	11 24       	eor	r1, r1
    1438:	12 2f       	mov	r17, r18
    143a:	19 c0       	rjmp	.+50     	; 0x146e <vfprintf+0x10e>
    143c:	8a e0       	ldi	r24, 0x0A	; 10
    143e:	58 9e       	mul	r5, r24
    1440:	20 0d       	add	r18, r0
    1442:	11 24       	eor	r1, r1
    1444:	52 2e       	mov	r5, r18
    1446:	e9 2d       	mov	r30, r9
    1448:	e0 62       	ori	r30, 0x20	; 32
    144a:	9e 2e       	mov	r9, r30
    144c:	10 c0       	rjmp	.+32     	; 0x146e <vfprintf+0x10e>
    144e:	8e 32       	cpi	r24, 0x2E	; 46
    1450:	31 f4       	brne	.+12     	; 0x145e <vfprintf+0xfe>
    1452:	96 fc       	sbrc	r9, 6
    1454:	e5 c2       	rjmp	.+1482   	; 0x1a20 <vfprintf+0x6c0>
    1456:	f9 2d       	mov	r31, r9
    1458:	f0 64       	ori	r31, 0x40	; 64
    145a:	9f 2e       	mov	r9, r31
    145c:	08 c0       	rjmp	.+16     	; 0x146e <vfprintf+0x10e>
    145e:	8c 36       	cpi	r24, 0x6C	; 108
    1460:	21 f4       	brne	.+8      	; 0x146a <vfprintf+0x10a>
    1462:	29 2d       	mov	r18, r9
    1464:	20 68       	ori	r18, 0x80	; 128
    1466:	92 2e       	mov	r9, r18
    1468:	02 c0       	rjmp	.+4      	; 0x146e <vfprintf+0x10e>
    146a:	88 36       	cpi	r24, 0x68	; 104
    146c:	41 f4       	brne	.+16     	; 0x147e <vfprintf+0x11e>
    146e:	f1 01       	movw	r30, r2
    1470:	93 fd       	sbrc	r25, 3
    1472:	85 91       	lpm	r24, Z+
    1474:	93 ff       	sbrs	r25, 3
    1476:	81 91       	ld	r24, Z+
    1478:	1f 01       	movw	r2, r30
    147a:	81 11       	cpse	r24, r1
    147c:	b3 cf       	rjmp	.-154    	; 0x13e4 <vfprintf+0x84>
    147e:	9b eb       	ldi	r25, 0xBB	; 187
    1480:	98 0f       	add	r25, r24
    1482:	93 30       	cpi	r25, 0x03	; 3
    1484:	20 f4       	brcc	.+8      	; 0x148e <vfprintf+0x12e>
    1486:	99 2d       	mov	r25, r9
    1488:	90 61       	ori	r25, 0x10	; 16
    148a:	80 5e       	subi	r24, 0xE0	; 224
    148c:	07 c0       	rjmp	.+14     	; 0x149c <vfprintf+0x13c>
    148e:	9b e9       	ldi	r25, 0x9B	; 155
    1490:	98 0f       	add	r25, r24
    1492:	93 30       	cpi	r25, 0x03	; 3
    1494:	08 f0       	brcs	.+2      	; 0x1498 <vfprintf+0x138>
    1496:	66 c1       	rjmp	.+716    	; 0x1764 <vfprintf+0x404>
    1498:	99 2d       	mov	r25, r9
    149a:	9f 7e       	andi	r25, 0xEF	; 239
    149c:	96 ff       	sbrs	r25, 6
    149e:	16 e0       	ldi	r17, 0x06	; 6
    14a0:	9f 73       	andi	r25, 0x3F	; 63
    14a2:	99 2e       	mov	r9, r25
    14a4:	85 36       	cpi	r24, 0x65	; 101
    14a6:	19 f4       	brne	.+6      	; 0x14ae <vfprintf+0x14e>
    14a8:	90 64       	ori	r25, 0x40	; 64
    14aa:	99 2e       	mov	r9, r25
    14ac:	08 c0       	rjmp	.+16     	; 0x14be <vfprintf+0x15e>
    14ae:	86 36       	cpi	r24, 0x66	; 102
    14b0:	21 f4       	brne	.+8      	; 0x14ba <vfprintf+0x15a>
    14b2:	39 2f       	mov	r19, r25
    14b4:	30 68       	ori	r19, 0x80	; 128
    14b6:	93 2e       	mov	r9, r19
    14b8:	02 c0       	rjmp	.+4      	; 0x14be <vfprintf+0x15e>
    14ba:	11 11       	cpse	r17, r1
    14bc:	11 50       	subi	r17, 0x01	; 1
    14be:	97 fe       	sbrs	r9, 7
    14c0:	07 c0       	rjmp	.+14     	; 0x14d0 <vfprintf+0x170>
    14c2:	1c 33       	cpi	r17, 0x3C	; 60
    14c4:	50 f4       	brcc	.+20     	; 0x14da <vfprintf+0x17a>
    14c6:	44 24       	eor	r4, r4
    14c8:	43 94       	inc	r4
    14ca:	41 0e       	add	r4, r17
    14cc:	27 e0       	ldi	r18, 0x07	; 7
    14ce:	0b c0       	rjmp	.+22     	; 0x14e6 <vfprintf+0x186>
    14d0:	18 30       	cpi	r17, 0x08	; 8
    14d2:	38 f0       	brcs	.+14     	; 0x14e2 <vfprintf+0x182>
    14d4:	27 e0       	ldi	r18, 0x07	; 7
    14d6:	17 e0       	ldi	r17, 0x07	; 7
    14d8:	05 c0       	rjmp	.+10     	; 0x14e4 <vfprintf+0x184>
    14da:	27 e0       	ldi	r18, 0x07	; 7
    14dc:	9c e3       	ldi	r25, 0x3C	; 60
    14de:	49 2e       	mov	r4, r25
    14e0:	02 c0       	rjmp	.+4      	; 0x14e6 <vfprintf+0x186>
    14e2:	21 2f       	mov	r18, r17
    14e4:	41 2c       	mov	r4, r1
    14e6:	56 01       	movw	r10, r12
    14e8:	84 e0       	ldi	r24, 0x04	; 4
    14ea:	a8 0e       	add	r10, r24
    14ec:	b1 1c       	adc	r11, r1
    14ee:	f6 01       	movw	r30, r12
    14f0:	60 81       	ld	r22, Z
    14f2:	71 81       	ldd	r23, Z+1	; 0x01
    14f4:	82 81       	ldd	r24, Z+2	; 0x02
    14f6:	93 81       	ldd	r25, Z+3	; 0x03
    14f8:	04 2d       	mov	r16, r4
    14fa:	a3 01       	movw	r20, r6
    14fc:	0e 94 50 0d 	call	0x1aa0	; 0x1aa0 <__ftoa_engine>
    1500:	6c 01       	movw	r12, r24
    1502:	f9 81       	ldd	r31, Y+1	; 0x01
    1504:	fc 87       	std	Y+12, r31	; 0x0c
    1506:	f0 ff       	sbrs	r31, 0
    1508:	02 c0       	rjmp	.+4      	; 0x150e <vfprintf+0x1ae>
    150a:	f3 ff       	sbrs	r31, 3
    150c:	06 c0       	rjmp	.+12     	; 0x151a <vfprintf+0x1ba>
    150e:	91 fc       	sbrc	r9, 1
    1510:	06 c0       	rjmp	.+12     	; 0x151e <vfprintf+0x1be>
    1512:	92 fe       	sbrs	r9, 2
    1514:	06 c0       	rjmp	.+12     	; 0x1522 <vfprintf+0x1c2>
    1516:	00 e2       	ldi	r16, 0x20	; 32
    1518:	05 c0       	rjmp	.+10     	; 0x1524 <vfprintf+0x1c4>
    151a:	0d e2       	ldi	r16, 0x2D	; 45
    151c:	03 c0       	rjmp	.+6      	; 0x1524 <vfprintf+0x1c4>
    151e:	0b e2       	ldi	r16, 0x2B	; 43
    1520:	01 c0       	rjmp	.+2      	; 0x1524 <vfprintf+0x1c4>
    1522:	00 e0       	ldi	r16, 0x00	; 0
    1524:	8c 85       	ldd	r24, Y+12	; 0x0c
    1526:	8c 70       	andi	r24, 0x0C	; 12
    1528:	19 f0       	breq	.+6      	; 0x1530 <vfprintf+0x1d0>
    152a:	01 11       	cpse	r16, r1
    152c:	5a c2       	rjmp	.+1204   	; 0x19e2 <vfprintf+0x682>
    152e:	9b c2       	rjmp	.+1334   	; 0x1a66 <vfprintf+0x706>
    1530:	97 fe       	sbrs	r9, 7
    1532:	10 c0       	rjmp	.+32     	; 0x1554 <vfprintf+0x1f4>
    1534:	4c 0c       	add	r4, r12
    1536:	fc 85       	ldd	r31, Y+12	; 0x0c
    1538:	f4 ff       	sbrs	r31, 4
    153a:	04 c0       	rjmp	.+8      	; 0x1544 <vfprintf+0x1e4>
    153c:	8a 81       	ldd	r24, Y+2	; 0x02
    153e:	81 33       	cpi	r24, 0x31	; 49
    1540:	09 f4       	brne	.+2      	; 0x1544 <vfprintf+0x1e4>
    1542:	4a 94       	dec	r4
    1544:	14 14       	cp	r1, r4
    1546:	74 f5       	brge	.+92     	; 0x15a4 <vfprintf+0x244>
    1548:	28 e0       	ldi	r18, 0x08	; 8
    154a:	24 15       	cp	r18, r4
    154c:	78 f5       	brcc	.+94     	; 0x15ac <vfprintf+0x24c>
    154e:	88 e0       	ldi	r24, 0x08	; 8
    1550:	48 2e       	mov	r4, r24
    1552:	2c c0       	rjmp	.+88     	; 0x15ac <vfprintf+0x24c>
    1554:	96 fc       	sbrc	r9, 6
    1556:	2a c0       	rjmp	.+84     	; 0x15ac <vfprintf+0x24c>
    1558:	81 2f       	mov	r24, r17
    155a:	90 e0       	ldi	r25, 0x00	; 0
    155c:	8c 15       	cp	r24, r12
    155e:	9d 05       	cpc	r25, r13
    1560:	9c f0       	brlt	.+38     	; 0x1588 <vfprintf+0x228>
    1562:	3c ef       	ldi	r19, 0xFC	; 252
    1564:	c3 16       	cp	r12, r19
    1566:	3f ef       	ldi	r19, 0xFF	; 255
    1568:	d3 06       	cpc	r13, r19
    156a:	74 f0       	brlt	.+28     	; 0x1588 <vfprintf+0x228>
    156c:	89 2d       	mov	r24, r9
    156e:	80 68       	ori	r24, 0x80	; 128
    1570:	98 2e       	mov	r9, r24
    1572:	0a c0       	rjmp	.+20     	; 0x1588 <vfprintf+0x228>
    1574:	e2 e0       	ldi	r30, 0x02	; 2
    1576:	f0 e0       	ldi	r31, 0x00	; 0
    1578:	ec 0f       	add	r30, r28
    157a:	fd 1f       	adc	r31, r29
    157c:	e1 0f       	add	r30, r17
    157e:	f1 1d       	adc	r31, r1
    1580:	80 81       	ld	r24, Z
    1582:	80 33       	cpi	r24, 0x30	; 48
    1584:	19 f4       	brne	.+6      	; 0x158c <vfprintf+0x22c>
    1586:	11 50       	subi	r17, 0x01	; 1
    1588:	11 11       	cpse	r17, r1
    158a:	f4 cf       	rjmp	.-24     	; 0x1574 <vfprintf+0x214>
    158c:	97 fe       	sbrs	r9, 7
    158e:	0e c0       	rjmp	.+28     	; 0x15ac <vfprintf+0x24c>
    1590:	44 24       	eor	r4, r4
    1592:	43 94       	inc	r4
    1594:	41 0e       	add	r4, r17
    1596:	81 2f       	mov	r24, r17
    1598:	90 e0       	ldi	r25, 0x00	; 0
    159a:	c8 16       	cp	r12, r24
    159c:	d9 06       	cpc	r13, r25
    159e:	2c f4       	brge	.+10     	; 0x15aa <vfprintf+0x24a>
    15a0:	1c 19       	sub	r17, r12
    15a2:	04 c0       	rjmp	.+8      	; 0x15ac <vfprintf+0x24c>
    15a4:	44 24       	eor	r4, r4
    15a6:	43 94       	inc	r4
    15a8:	01 c0       	rjmp	.+2      	; 0x15ac <vfprintf+0x24c>
    15aa:	10 e0       	ldi	r17, 0x00	; 0
    15ac:	97 fe       	sbrs	r9, 7
    15ae:	06 c0       	rjmp	.+12     	; 0x15bc <vfprintf+0x25c>
    15b0:	1c 14       	cp	r1, r12
    15b2:	1d 04       	cpc	r1, r13
    15b4:	34 f4       	brge	.+12     	; 0x15c2 <vfprintf+0x262>
    15b6:	c6 01       	movw	r24, r12
    15b8:	01 96       	adiw	r24, 0x01	; 1
    15ba:	05 c0       	rjmp	.+10     	; 0x15c6 <vfprintf+0x266>
    15bc:	85 e0       	ldi	r24, 0x05	; 5
    15be:	90 e0       	ldi	r25, 0x00	; 0
    15c0:	02 c0       	rjmp	.+4      	; 0x15c6 <vfprintf+0x266>
    15c2:	81 e0       	ldi	r24, 0x01	; 1
    15c4:	90 e0       	ldi	r25, 0x00	; 0
    15c6:	01 11       	cpse	r16, r1
    15c8:	01 96       	adiw	r24, 0x01	; 1
    15ca:	11 23       	and	r17, r17
    15cc:	31 f0       	breq	.+12     	; 0x15da <vfprintf+0x27a>
    15ce:	21 2f       	mov	r18, r17
    15d0:	30 e0       	ldi	r19, 0x00	; 0
    15d2:	2f 5f       	subi	r18, 0xFF	; 255
    15d4:	3f 4f       	sbci	r19, 0xFF	; 255
    15d6:	82 0f       	add	r24, r18
    15d8:	93 1f       	adc	r25, r19
    15da:	25 2d       	mov	r18, r5
    15dc:	30 e0       	ldi	r19, 0x00	; 0
    15de:	82 17       	cp	r24, r18
    15e0:	93 07       	cpc	r25, r19
    15e2:	14 f4       	brge	.+4      	; 0x15e8 <vfprintf+0x288>
    15e4:	58 1a       	sub	r5, r24
    15e6:	01 c0       	rjmp	.+2      	; 0x15ea <vfprintf+0x28a>
    15e8:	51 2c       	mov	r5, r1
    15ea:	89 2d       	mov	r24, r9
    15ec:	89 70       	andi	r24, 0x09	; 9
    15ee:	49 f4       	brne	.+18     	; 0x1602 <vfprintf+0x2a2>
    15f0:	55 20       	and	r5, r5
    15f2:	39 f0       	breq	.+14     	; 0x1602 <vfprintf+0x2a2>
    15f4:	b7 01       	movw	r22, r14
    15f6:	80 e2       	ldi	r24, 0x20	; 32
    15f8:	90 e0       	ldi	r25, 0x00	; 0
    15fa:	0e 94 3e 0e 	call	0x1c7c	; 0x1c7c <fputc>
    15fe:	5a 94       	dec	r5
    1600:	f7 cf       	rjmp	.-18     	; 0x15f0 <vfprintf+0x290>
    1602:	00 23       	and	r16, r16
    1604:	29 f0       	breq	.+10     	; 0x1610 <vfprintf+0x2b0>
    1606:	b7 01       	movw	r22, r14
    1608:	80 2f       	mov	r24, r16
    160a:	90 e0       	ldi	r25, 0x00	; 0
    160c:	0e 94 3e 0e 	call	0x1c7c	; 0x1c7c <fputc>
    1610:	93 fc       	sbrc	r9, 3
    1612:	09 c0       	rjmp	.+18     	; 0x1626 <vfprintf+0x2c6>
    1614:	55 20       	and	r5, r5
    1616:	39 f0       	breq	.+14     	; 0x1626 <vfprintf+0x2c6>
    1618:	b7 01       	movw	r22, r14
    161a:	80 e3       	ldi	r24, 0x30	; 48
    161c:	90 e0       	ldi	r25, 0x00	; 0
    161e:	0e 94 3e 0e 	call	0x1c7c	; 0x1c7c <fputc>
    1622:	5a 94       	dec	r5
    1624:	f7 cf       	rjmp	.-18     	; 0x1614 <vfprintf+0x2b4>
    1626:	97 fe       	sbrs	r9, 7
    1628:	4c c0       	rjmp	.+152    	; 0x16c2 <vfprintf+0x362>
    162a:	46 01       	movw	r8, r12
    162c:	d7 fe       	sbrs	r13, 7
    162e:	02 c0       	rjmp	.+4      	; 0x1634 <vfprintf+0x2d4>
    1630:	81 2c       	mov	r8, r1
    1632:	91 2c       	mov	r9, r1
    1634:	c6 01       	movw	r24, r12
    1636:	88 19       	sub	r24, r8
    1638:	99 09       	sbc	r25, r9
    163a:	f3 01       	movw	r30, r6
    163c:	e8 0f       	add	r30, r24
    163e:	f9 1f       	adc	r31, r25
    1640:	ed 87       	std	Y+13, r30	; 0x0d
    1642:	fe 87       	std	Y+14, r31	; 0x0e
    1644:	96 01       	movw	r18, r12
    1646:	24 19       	sub	r18, r4
    1648:	31 09       	sbc	r19, r1
    164a:	2f 87       	std	Y+15, r18	; 0x0f
    164c:	38 8b       	std	Y+16, r19	; 0x10
    164e:	01 2f       	mov	r16, r17
    1650:	10 e0       	ldi	r17, 0x00	; 0
    1652:	11 95       	neg	r17
    1654:	01 95       	neg	r16
    1656:	11 09       	sbc	r17, r1
    1658:	3f ef       	ldi	r19, 0xFF	; 255
    165a:	83 16       	cp	r8, r19
    165c:	93 06       	cpc	r9, r19
    165e:	29 f4       	brne	.+10     	; 0x166a <vfprintf+0x30a>
    1660:	b7 01       	movw	r22, r14
    1662:	8e e2       	ldi	r24, 0x2E	; 46
    1664:	90 e0       	ldi	r25, 0x00	; 0
    1666:	0e 94 3e 0e 	call	0x1c7c	; 0x1c7c <fputc>
    166a:	c8 14       	cp	r12, r8
    166c:	d9 04       	cpc	r13, r9
    166e:	4c f0       	brlt	.+18     	; 0x1682 <vfprintf+0x322>
    1670:	8f 85       	ldd	r24, Y+15	; 0x0f
    1672:	98 89       	ldd	r25, Y+16	; 0x10
    1674:	88 15       	cp	r24, r8
    1676:	99 05       	cpc	r25, r9
    1678:	24 f4       	brge	.+8      	; 0x1682 <vfprintf+0x322>
    167a:	ed 85       	ldd	r30, Y+13	; 0x0d
    167c:	fe 85       	ldd	r31, Y+14	; 0x0e
    167e:	81 81       	ldd	r24, Z+1	; 0x01
    1680:	01 c0       	rjmp	.+2      	; 0x1684 <vfprintf+0x324>
    1682:	80 e3       	ldi	r24, 0x30	; 48
    1684:	f1 e0       	ldi	r31, 0x01	; 1
    1686:	8f 1a       	sub	r8, r31
    1688:	91 08       	sbc	r9, r1
    168a:	2d 85       	ldd	r18, Y+13	; 0x0d
    168c:	3e 85       	ldd	r19, Y+14	; 0x0e
    168e:	2f 5f       	subi	r18, 0xFF	; 255
    1690:	3f 4f       	sbci	r19, 0xFF	; 255
    1692:	2d 87       	std	Y+13, r18	; 0x0d
    1694:	3e 87       	std	Y+14, r19	; 0x0e
    1696:	80 16       	cp	r8, r16
    1698:	91 06       	cpc	r9, r17
    169a:	2c f0       	brlt	.+10     	; 0x16a6 <vfprintf+0x346>
    169c:	b7 01       	movw	r22, r14
    169e:	90 e0       	ldi	r25, 0x00	; 0
    16a0:	0e 94 3e 0e 	call	0x1c7c	; 0x1c7c <fputc>
    16a4:	d9 cf       	rjmp	.-78     	; 0x1658 <vfprintf+0x2f8>
    16a6:	c8 14       	cp	r12, r8
    16a8:	d9 04       	cpc	r13, r9
    16aa:	41 f4       	brne	.+16     	; 0x16bc <vfprintf+0x35c>
    16ac:	9a 81       	ldd	r25, Y+2	; 0x02
    16ae:	96 33       	cpi	r25, 0x36	; 54
    16b0:	20 f4       	brcc	.+8      	; 0x16ba <vfprintf+0x35a>
    16b2:	95 33       	cpi	r25, 0x35	; 53
    16b4:	19 f4       	brne	.+6      	; 0x16bc <vfprintf+0x35c>
    16b6:	3c 85       	ldd	r19, Y+12	; 0x0c
    16b8:	34 ff       	sbrs	r19, 4
    16ba:	81 e3       	ldi	r24, 0x31	; 49
    16bc:	b7 01       	movw	r22, r14
    16be:	90 e0       	ldi	r25, 0x00	; 0
    16c0:	4e c0       	rjmp	.+156    	; 0x175e <vfprintf+0x3fe>
    16c2:	8a 81       	ldd	r24, Y+2	; 0x02
    16c4:	81 33       	cpi	r24, 0x31	; 49
    16c6:	19 f0       	breq	.+6      	; 0x16ce <vfprintf+0x36e>
    16c8:	9c 85       	ldd	r25, Y+12	; 0x0c
    16ca:	9f 7e       	andi	r25, 0xEF	; 239
    16cc:	9c 87       	std	Y+12, r25	; 0x0c
    16ce:	b7 01       	movw	r22, r14
    16d0:	90 e0       	ldi	r25, 0x00	; 0
    16d2:	0e 94 3e 0e 	call	0x1c7c	; 0x1c7c <fputc>
    16d6:	11 11       	cpse	r17, r1
    16d8:	05 c0       	rjmp	.+10     	; 0x16e4 <vfprintf+0x384>
    16da:	94 fc       	sbrc	r9, 4
    16dc:	18 c0       	rjmp	.+48     	; 0x170e <vfprintf+0x3ae>
    16de:	85 e6       	ldi	r24, 0x65	; 101
    16e0:	90 e0       	ldi	r25, 0x00	; 0
    16e2:	17 c0       	rjmp	.+46     	; 0x1712 <vfprintf+0x3b2>
    16e4:	b7 01       	movw	r22, r14
    16e6:	8e e2       	ldi	r24, 0x2E	; 46
    16e8:	90 e0       	ldi	r25, 0x00	; 0
    16ea:	0e 94 3e 0e 	call	0x1c7c	; 0x1c7c <fputc>
    16ee:	1e 5f       	subi	r17, 0xFE	; 254
    16f0:	82 e0       	ldi	r24, 0x02	; 2
    16f2:	01 e0       	ldi	r16, 0x01	; 1
    16f4:	08 0f       	add	r16, r24
    16f6:	f3 01       	movw	r30, r6
    16f8:	e8 0f       	add	r30, r24
    16fa:	f1 1d       	adc	r31, r1
    16fc:	80 81       	ld	r24, Z
    16fe:	b7 01       	movw	r22, r14
    1700:	90 e0       	ldi	r25, 0x00	; 0
    1702:	0e 94 3e 0e 	call	0x1c7c	; 0x1c7c <fputc>
    1706:	80 2f       	mov	r24, r16
    1708:	01 13       	cpse	r16, r17
    170a:	f3 cf       	rjmp	.-26     	; 0x16f2 <vfprintf+0x392>
    170c:	e6 cf       	rjmp	.-52     	; 0x16da <vfprintf+0x37a>
    170e:	85 e4       	ldi	r24, 0x45	; 69
    1710:	90 e0       	ldi	r25, 0x00	; 0
    1712:	b7 01       	movw	r22, r14
    1714:	0e 94 3e 0e 	call	0x1c7c	; 0x1c7c <fputc>
    1718:	d7 fc       	sbrc	r13, 7
    171a:	06 c0       	rjmp	.+12     	; 0x1728 <vfprintf+0x3c8>
    171c:	c1 14       	cp	r12, r1
    171e:	d1 04       	cpc	r13, r1
    1720:	41 f4       	brne	.+16     	; 0x1732 <vfprintf+0x3d2>
    1722:	ec 85       	ldd	r30, Y+12	; 0x0c
    1724:	e4 ff       	sbrs	r30, 4
    1726:	05 c0       	rjmp	.+10     	; 0x1732 <vfprintf+0x3d2>
    1728:	d1 94       	neg	r13
    172a:	c1 94       	neg	r12
    172c:	d1 08       	sbc	r13, r1
    172e:	8d e2       	ldi	r24, 0x2D	; 45
    1730:	01 c0       	rjmp	.+2      	; 0x1734 <vfprintf+0x3d4>
    1732:	8b e2       	ldi	r24, 0x2B	; 43
    1734:	b7 01       	movw	r22, r14
    1736:	90 e0       	ldi	r25, 0x00	; 0
    1738:	0e 94 3e 0e 	call	0x1c7c	; 0x1c7c <fputc>
    173c:	80 e3       	ldi	r24, 0x30	; 48
    173e:	2a e0       	ldi	r18, 0x0A	; 10
    1740:	c2 16       	cp	r12, r18
    1742:	d1 04       	cpc	r13, r1
    1744:	2c f0       	brlt	.+10     	; 0x1750 <vfprintf+0x3f0>
    1746:	8f 5f       	subi	r24, 0xFF	; 255
    1748:	fa e0       	ldi	r31, 0x0A	; 10
    174a:	cf 1a       	sub	r12, r31
    174c:	d1 08       	sbc	r13, r1
    174e:	f7 cf       	rjmp	.-18     	; 0x173e <vfprintf+0x3de>
    1750:	b7 01       	movw	r22, r14
    1752:	90 e0       	ldi	r25, 0x00	; 0
    1754:	0e 94 3e 0e 	call	0x1c7c	; 0x1c7c <fputc>
    1758:	b7 01       	movw	r22, r14
    175a:	c6 01       	movw	r24, r12
    175c:	c0 96       	adiw	r24, 0x30	; 48
    175e:	0e 94 3e 0e 	call	0x1c7c	; 0x1c7c <fputc>
    1762:	54 c1       	rjmp	.+680    	; 0x1a0c <vfprintf+0x6ac>
    1764:	83 36       	cpi	r24, 0x63	; 99
    1766:	31 f0       	breq	.+12     	; 0x1774 <vfprintf+0x414>
    1768:	83 37       	cpi	r24, 0x73	; 115
    176a:	79 f0       	breq	.+30     	; 0x178a <vfprintf+0x42a>
    176c:	83 35       	cpi	r24, 0x53	; 83
    176e:	09 f0       	breq	.+2      	; 0x1772 <vfprintf+0x412>
    1770:	56 c0       	rjmp	.+172    	; 0x181e <vfprintf+0x4be>
    1772:	20 c0       	rjmp	.+64     	; 0x17b4 <vfprintf+0x454>
    1774:	56 01       	movw	r10, r12
    1776:	32 e0       	ldi	r19, 0x02	; 2
    1778:	a3 0e       	add	r10, r19
    177a:	b1 1c       	adc	r11, r1
    177c:	f6 01       	movw	r30, r12
    177e:	80 81       	ld	r24, Z
    1780:	89 83       	std	Y+1, r24	; 0x01
    1782:	01 e0       	ldi	r16, 0x01	; 1
    1784:	10 e0       	ldi	r17, 0x00	; 0
    1786:	63 01       	movw	r12, r6
    1788:	12 c0       	rjmp	.+36     	; 0x17ae <vfprintf+0x44e>
    178a:	56 01       	movw	r10, r12
    178c:	f2 e0       	ldi	r31, 0x02	; 2
    178e:	af 0e       	add	r10, r31
    1790:	b1 1c       	adc	r11, r1
    1792:	f6 01       	movw	r30, r12
    1794:	c0 80       	ld	r12, Z
    1796:	d1 80       	ldd	r13, Z+1	; 0x01
    1798:	96 fe       	sbrs	r9, 6
    179a:	03 c0       	rjmp	.+6      	; 0x17a2 <vfprintf+0x442>
    179c:	61 2f       	mov	r22, r17
    179e:	70 e0       	ldi	r23, 0x00	; 0
    17a0:	02 c0       	rjmp	.+4      	; 0x17a6 <vfprintf+0x446>
    17a2:	6f ef       	ldi	r22, 0xFF	; 255
    17a4:	7f ef       	ldi	r23, 0xFF	; 255
    17a6:	c6 01       	movw	r24, r12
    17a8:	0e 94 33 0e 	call	0x1c66	; 0x1c66 <strnlen>
    17ac:	8c 01       	movw	r16, r24
    17ae:	f9 2d       	mov	r31, r9
    17b0:	ff 77       	andi	r31, 0x7F	; 127
    17b2:	14 c0       	rjmp	.+40     	; 0x17dc <vfprintf+0x47c>
    17b4:	56 01       	movw	r10, r12
    17b6:	22 e0       	ldi	r18, 0x02	; 2
    17b8:	a2 0e       	add	r10, r18
    17ba:	b1 1c       	adc	r11, r1
    17bc:	f6 01       	movw	r30, r12
    17be:	c0 80       	ld	r12, Z
    17c0:	d1 80       	ldd	r13, Z+1	; 0x01
    17c2:	96 fe       	sbrs	r9, 6
    17c4:	03 c0       	rjmp	.+6      	; 0x17cc <vfprintf+0x46c>
    17c6:	61 2f       	mov	r22, r17
    17c8:	70 e0       	ldi	r23, 0x00	; 0
    17ca:	02 c0       	rjmp	.+4      	; 0x17d0 <vfprintf+0x470>
    17cc:	6f ef       	ldi	r22, 0xFF	; 255
    17ce:	7f ef       	ldi	r23, 0xFF	; 255
    17d0:	c6 01       	movw	r24, r12
    17d2:	0e 94 28 0e 	call	0x1c50	; 0x1c50 <strnlen_P>
    17d6:	8c 01       	movw	r16, r24
    17d8:	f9 2d       	mov	r31, r9
    17da:	f0 68       	ori	r31, 0x80	; 128
    17dc:	9f 2e       	mov	r9, r31
    17de:	f3 fd       	sbrc	r31, 3
    17e0:	1a c0       	rjmp	.+52     	; 0x1816 <vfprintf+0x4b6>
    17e2:	85 2d       	mov	r24, r5
    17e4:	90 e0       	ldi	r25, 0x00	; 0
    17e6:	08 17       	cp	r16, r24
    17e8:	19 07       	cpc	r17, r25
    17ea:	a8 f4       	brcc	.+42     	; 0x1816 <vfprintf+0x4b6>
    17ec:	b7 01       	movw	r22, r14
    17ee:	80 e2       	ldi	r24, 0x20	; 32
    17f0:	90 e0       	ldi	r25, 0x00	; 0
    17f2:	0e 94 3e 0e 	call	0x1c7c	; 0x1c7c <fputc>
    17f6:	5a 94       	dec	r5
    17f8:	f4 cf       	rjmp	.-24     	; 0x17e2 <vfprintf+0x482>
    17fa:	f6 01       	movw	r30, r12
    17fc:	97 fc       	sbrc	r9, 7
    17fe:	85 91       	lpm	r24, Z+
    1800:	97 fe       	sbrs	r9, 7
    1802:	81 91       	ld	r24, Z+
    1804:	6f 01       	movw	r12, r30
    1806:	b7 01       	movw	r22, r14
    1808:	90 e0       	ldi	r25, 0x00	; 0
    180a:	0e 94 3e 0e 	call	0x1c7c	; 0x1c7c <fputc>
    180e:	51 10       	cpse	r5, r1
    1810:	5a 94       	dec	r5
    1812:	01 50       	subi	r16, 0x01	; 1
    1814:	11 09       	sbc	r17, r1
    1816:	01 15       	cp	r16, r1
    1818:	11 05       	cpc	r17, r1
    181a:	79 f7       	brne	.-34     	; 0x17fa <vfprintf+0x49a>
    181c:	f7 c0       	rjmp	.+494    	; 0x1a0c <vfprintf+0x6ac>
    181e:	84 36       	cpi	r24, 0x64	; 100
    1820:	11 f0       	breq	.+4      	; 0x1826 <vfprintf+0x4c6>
    1822:	89 36       	cpi	r24, 0x69	; 105
    1824:	61 f5       	brne	.+88     	; 0x187e <vfprintf+0x51e>
    1826:	56 01       	movw	r10, r12
    1828:	97 fe       	sbrs	r9, 7
    182a:	09 c0       	rjmp	.+18     	; 0x183e <vfprintf+0x4de>
    182c:	24 e0       	ldi	r18, 0x04	; 4
    182e:	a2 0e       	add	r10, r18
    1830:	b1 1c       	adc	r11, r1
    1832:	f6 01       	movw	r30, r12
    1834:	60 81       	ld	r22, Z
    1836:	71 81       	ldd	r23, Z+1	; 0x01
    1838:	82 81       	ldd	r24, Z+2	; 0x02
    183a:	93 81       	ldd	r25, Z+3	; 0x03
    183c:	0a c0       	rjmp	.+20     	; 0x1852 <vfprintf+0x4f2>
    183e:	f2 e0       	ldi	r31, 0x02	; 2
    1840:	af 0e       	add	r10, r31
    1842:	b1 1c       	adc	r11, r1
    1844:	f6 01       	movw	r30, r12
    1846:	60 81       	ld	r22, Z
    1848:	71 81       	ldd	r23, Z+1	; 0x01
    184a:	07 2e       	mov	r0, r23
    184c:	00 0c       	add	r0, r0
    184e:	88 0b       	sbc	r24, r24
    1850:	99 0b       	sbc	r25, r25
    1852:	f9 2d       	mov	r31, r9
    1854:	ff 76       	andi	r31, 0x6F	; 111
    1856:	9f 2e       	mov	r9, r31
    1858:	97 ff       	sbrs	r25, 7
    185a:	09 c0       	rjmp	.+18     	; 0x186e <vfprintf+0x50e>
    185c:	90 95       	com	r25
    185e:	80 95       	com	r24
    1860:	70 95       	com	r23
    1862:	61 95       	neg	r22
    1864:	7f 4f       	sbci	r23, 0xFF	; 255
    1866:	8f 4f       	sbci	r24, 0xFF	; 255
    1868:	9f 4f       	sbci	r25, 0xFF	; 255
    186a:	f0 68       	ori	r31, 0x80	; 128
    186c:	9f 2e       	mov	r9, r31
    186e:	2a e0       	ldi	r18, 0x0A	; 10
    1870:	30 e0       	ldi	r19, 0x00	; 0
    1872:	a3 01       	movw	r20, r6
    1874:	0e 94 8e 0e 	call	0x1d1c	; 0x1d1c <__ultoa_invert>
    1878:	c8 2e       	mov	r12, r24
    187a:	c6 18       	sub	r12, r6
    187c:	3f c0       	rjmp	.+126    	; 0x18fc <vfprintf+0x59c>
    187e:	09 2d       	mov	r16, r9
    1880:	85 37       	cpi	r24, 0x75	; 117
    1882:	21 f4       	brne	.+8      	; 0x188c <vfprintf+0x52c>
    1884:	0f 7e       	andi	r16, 0xEF	; 239
    1886:	2a e0       	ldi	r18, 0x0A	; 10
    1888:	30 e0       	ldi	r19, 0x00	; 0
    188a:	1d c0       	rjmp	.+58     	; 0x18c6 <vfprintf+0x566>
    188c:	09 7f       	andi	r16, 0xF9	; 249
    188e:	8f 36       	cpi	r24, 0x6F	; 111
    1890:	91 f0       	breq	.+36     	; 0x18b6 <vfprintf+0x556>
    1892:	18 f4       	brcc	.+6      	; 0x189a <vfprintf+0x53a>
    1894:	88 35       	cpi	r24, 0x58	; 88
    1896:	59 f0       	breq	.+22     	; 0x18ae <vfprintf+0x54e>
    1898:	c3 c0       	rjmp	.+390    	; 0x1a20 <vfprintf+0x6c0>
    189a:	80 37       	cpi	r24, 0x70	; 112
    189c:	19 f0       	breq	.+6      	; 0x18a4 <vfprintf+0x544>
    189e:	88 37       	cpi	r24, 0x78	; 120
    18a0:	11 f0       	breq	.+4      	; 0x18a6 <vfprintf+0x546>
    18a2:	be c0       	rjmp	.+380    	; 0x1a20 <vfprintf+0x6c0>
    18a4:	00 61       	ori	r16, 0x10	; 16
    18a6:	04 ff       	sbrs	r16, 4
    18a8:	09 c0       	rjmp	.+18     	; 0x18bc <vfprintf+0x55c>
    18aa:	04 60       	ori	r16, 0x04	; 4
    18ac:	07 c0       	rjmp	.+14     	; 0x18bc <vfprintf+0x55c>
    18ae:	94 fe       	sbrs	r9, 4
    18b0:	08 c0       	rjmp	.+16     	; 0x18c2 <vfprintf+0x562>
    18b2:	06 60       	ori	r16, 0x06	; 6
    18b4:	06 c0       	rjmp	.+12     	; 0x18c2 <vfprintf+0x562>
    18b6:	28 e0       	ldi	r18, 0x08	; 8
    18b8:	30 e0       	ldi	r19, 0x00	; 0
    18ba:	05 c0       	rjmp	.+10     	; 0x18c6 <vfprintf+0x566>
    18bc:	20 e1       	ldi	r18, 0x10	; 16
    18be:	30 e0       	ldi	r19, 0x00	; 0
    18c0:	02 c0       	rjmp	.+4      	; 0x18c6 <vfprintf+0x566>
    18c2:	20 e1       	ldi	r18, 0x10	; 16
    18c4:	32 e0       	ldi	r19, 0x02	; 2
    18c6:	56 01       	movw	r10, r12
    18c8:	07 ff       	sbrs	r16, 7
    18ca:	09 c0       	rjmp	.+18     	; 0x18de <vfprintf+0x57e>
    18cc:	84 e0       	ldi	r24, 0x04	; 4
    18ce:	a8 0e       	add	r10, r24
    18d0:	b1 1c       	adc	r11, r1
    18d2:	f6 01       	movw	r30, r12
    18d4:	60 81       	ld	r22, Z
    18d6:	71 81       	ldd	r23, Z+1	; 0x01
    18d8:	82 81       	ldd	r24, Z+2	; 0x02
    18da:	93 81       	ldd	r25, Z+3	; 0x03
    18dc:	08 c0       	rjmp	.+16     	; 0x18ee <vfprintf+0x58e>
    18de:	f2 e0       	ldi	r31, 0x02	; 2
    18e0:	af 0e       	add	r10, r31
    18e2:	b1 1c       	adc	r11, r1
    18e4:	f6 01       	movw	r30, r12
    18e6:	60 81       	ld	r22, Z
    18e8:	71 81       	ldd	r23, Z+1	; 0x01
    18ea:	80 e0       	ldi	r24, 0x00	; 0
    18ec:	90 e0       	ldi	r25, 0x00	; 0
    18ee:	a3 01       	movw	r20, r6
    18f0:	0e 94 8e 0e 	call	0x1d1c	; 0x1d1c <__ultoa_invert>
    18f4:	c8 2e       	mov	r12, r24
    18f6:	c6 18       	sub	r12, r6
    18f8:	0f 77       	andi	r16, 0x7F	; 127
    18fa:	90 2e       	mov	r9, r16
    18fc:	96 fe       	sbrs	r9, 6
    18fe:	0b c0       	rjmp	.+22     	; 0x1916 <vfprintf+0x5b6>
    1900:	09 2d       	mov	r16, r9
    1902:	0e 7f       	andi	r16, 0xFE	; 254
    1904:	c1 16       	cp	r12, r17
    1906:	50 f4       	brcc	.+20     	; 0x191c <vfprintf+0x5bc>
    1908:	94 fe       	sbrs	r9, 4
    190a:	0a c0       	rjmp	.+20     	; 0x1920 <vfprintf+0x5c0>
    190c:	92 fc       	sbrc	r9, 2
    190e:	08 c0       	rjmp	.+16     	; 0x1920 <vfprintf+0x5c0>
    1910:	09 2d       	mov	r16, r9
    1912:	0e 7e       	andi	r16, 0xEE	; 238
    1914:	05 c0       	rjmp	.+10     	; 0x1920 <vfprintf+0x5c0>
    1916:	dc 2c       	mov	r13, r12
    1918:	09 2d       	mov	r16, r9
    191a:	03 c0       	rjmp	.+6      	; 0x1922 <vfprintf+0x5c2>
    191c:	dc 2c       	mov	r13, r12
    191e:	01 c0       	rjmp	.+2      	; 0x1922 <vfprintf+0x5c2>
    1920:	d1 2e       	mov	r13, r17
    1922:	04 ff       	sbrs	r16, 4
    1924:	0d c0       	rjmp	.+26     	; 0x1940 <vfprintf+0x5e0>
    1926:	fe 01       	movw	r30, r28
    1928:	ec 0d       	add	r30, r12
    192a:	f1 1d       	adc	r31, r1
    192c:	80 81       	ld	r24, Z
    192e:	80 33       	cpi	r24, 0x30	; 48
    1930:	11 f4       	brne	.+4      	; 0x1936 <vfprintf+0x5d6>
    1932:	09 7e       	andi	r16, 0xE9	; 233
    1934:	09 c0       	rjmp	.+18     	; 0x1948 <vfprintf+0x5e8>
    1936:	02 ff       	sbrs	r16, 2
    1938:	06 c0       	rjmp	.+12     	; 0x1946 <vfprintf+0x5e6>
    193a:	d3 94       	inc	r13
    193c:	d3 94       	inc	r13
    193e:	04 c0       	rjmp	.+8      	; 0x1948 <vfprintf+0x5e8>
    1940:	80 2f       	mov	r24, r16
    1942:	86 78       	andi	r24, 0x86	; 134
    1944:	09 f0       	breq	.+2      	; 0x1948 <vfprintf+0x5e8>
    1946:	d3 94       	inc	r13
    1948:	03 fd       	sbrc	r16, 3
    194a:	11 c0       	rjmp	.+34     	; 0x196e <vfprintf+0x60e>
    194c:	00 ff       	sbrs	r16, 0
    194e:	06 c0       	rjmp	.+12     	; 0x195c <vfprintf+0x5fc>
    1950:	1c 2d       	mov	r17, r12
    1952:	d5 14       	cp	r13, r5
    1954:	80 f4       	brcc	.+32     	; 0x1976 <vfprintf+0x616>
    1956:	15 0d       	add	r17, r5
    1958:	1d 19       	sub	r17, r13
    195a:	0d c0       	rjmp	.+26     	; 0x1976 <vfprintf+0x616>
    195c:	d5 14       	cp	r13, r5
    195e:	58 f4       	brcc	.+22     	; 0x1976 <vfprintf+0x616>
    1960:	b7 01       	movw	r22, r14
    1962:	80 e2       	ldi	r24, 0x20	; 32
    1964:	90 e0       	ldi	r25, 0x00	; 0
    1966:	0e 94 3e 0e 	call	0x1c7c	; 0x1c7c <fputc>
    196a:	d3 94       	inc	r13
    196c:	f7 cf       	rjmp	.-18     	; 0x195c <vfprintf+0x5fc>
    196e:	d5 14       	cp	r13, r5
    1970:	10 f4       	brcc	.+4      	; 0x1976 <vfprintf+0x616>
    1972:	5d 18       	sub	r5, r13
    1974:	01 c0       	rjmp	.+2      	; 0x1978 <vfprintf+0x618>
    1976:	51 2c       	mov	r5, r1
    1978:	04 ff       	sbrs	r16, 4
    197a:	10 c0       	rjmp	.+32     	; 0x199c <vfprintf+0x63c>
    197c:	b7 01       	movw	r22, r14
    197e:	80 e3       	ldi	r24, 0x30	; 48
    1980:	90 e0       	ldi	r25, 0x00	; 0
    1982:	0e 94 3e 0e 	call	0x1c7c	; 0x1c7c <fputc>
    1986:	02 ff       	sbrs	r16, 2
    1988:	17 c0       	rjmp	.+46     	; 0x19b8 <vfprintf+0x658>
    198a:	01 fd       	sbrc	r16, 1
    198c:	03 c0       	rjmp	.+6      	; 0x1994 <vfprintf+0x634>
    198e:	88 e7       	ldi	r24, 0x78	; 120
    1990:	90 e0       	ldi	r25, 0x00	; 0
    1992:	02 c0       	rjmp	.+4      	; 0x1998 <vfprintf+0x638>
    1994:	88 e5       	ldi	r24, 0x58	; 88
    1996:	90 e0       	ldi	r25, 0x00	; 0
    1998:	b7 01       	movw	r22, r14
    199a:	0c c0       	rjmp	.+24     	; 0x19b4 <vfprintf+0x654>
    199c:	80 2f       	mov	r24, r16
    199e:	86 78       	andi	r24, 0x86	; 134
    19a0:	59 f0       	breq	.+22     	; 0x19b8 <vfprintf+0x658>
    19a2:	01 ff       	sbrs	r16, 1
    19a4:	02 c0       	rjmp	.+4      	; 0x19aa <vfprintf+0x64a>
    19a6:	8b e2       	ldi	r24, 0x2B	; 43
    19a8:	01 c0       	rjmp	.+2      	; 0x19ac <vfprintf+0x64c>
    19aa:	80 e2       	ldi	r24, 0x20	; 32
    19ac:	07 fd       	sbrc	r16, 7
    19ae:	8d e2       	ldi	r24, 0x2D	; 45
    19b0:	b7 01       	movw	r22, r14
    19b2:	90 e0       	ldi	r25, 0x00	; 0
    19b4:	0e 94 3e 0e 	call	0x1c7c	; 0x1c7c <fputc>
    19b8:	c1 16       	cp	r12, r17
    19ba:	38 f4       	brcc	.+14     	; 0x19ca <vfprintf+0x66a>
    19bc:	b7 01       	movw	r22, r14
    19be:	80 e3       	ldi	r24, 0x30	; 48
    19c0:	90 e0       	ldi	r25, 0x00	; 0
    19c2:	0e 94 3e 0e 	call	0x1c7c	; 0x1c7c <fputc>
    19c6:	11 50       	subi	r17, 0x01	; 1
    19c8:	f7 cf       	rjmp	.-18     	; 0x19b8 <vfprintf+0x658>
    19ca:	ca 94       	dec	r12
    19cc:	f3 01       	movw	r30, r6
    19ce:	ec 0d       	add	r30, r12
    19d0:	f1 1d       	adc	r31, r1
    19d2:	80 81       	ld	r24, Z
    19d4:	b7 01       	movw	r22, r14
    19d6:	90 e0       	ldi	r25, 0x00	; 0
    19d8:	0e 94 3e 0e 	call	0x1c7c	; 0x1c7c <fputc>
    19dc:	c1 10       	cpse	r12, r1
    19de:	f5 cf       	rjmp	.-22     	; 0x19ca <vfprintf+0x66a>
    19e0:	15 c0       	rjmp	.+42     	; 0x1a0c <vfprintf+0x6ac>
    19e2:	f4 e0       	ldi	r31, 0x04	; 4
    19e4:	f5 15       	cp	r31, r5
    19e6:	60 f5       	brcc	.+88     	; 0x1a40 <vfprintf+0x6e0>
    19e8:	84 e0       	ldi	r24, 0x04	; 4
    19ea:	58 1a       	sub	r5, r24
    19ec:	93 fe       	sbrs	r9, 3
    19ee:	1f c0       	rjmp	.+62     	; 0x1a2e <vfprintf+0x6ce>
    19f0:	01 11       	cpse	r16, r1
    19f2:	27 c0       	rjmp	.+78     	; 0x1a42 <vfprintf+0x6e2>
    19f4:	2c 85       	ldd	r18, Y+12	; 0x0c
    19f6:	23 ff       	sbrs	r18, 3
    19f8:	2a c0       	rjmp	.+84     	; 0x1a4e <vfprintf+0x6ee>
    19fa:	04 e0       	ldi	r16, 0x04	; 4
    19fc:	12 e0       	ldi	r17, 0x02	; 2
    19fe:	39 2d       	mov	r19, r9
    1a00:	30 71       	andi	r19, 0x10	; 16
    1a02:	93 2e       	mov	r9, r19
    1a04:	f8 01       	movw	r30, r16
    1a06:	84 91       	lpm	r24, Z
    1a08:	81 11       	cpse	r24, r1
    1a0a:	24 c0       	rjmp	.+72     	; 0x1a54 <vfprintf+0x6f4>
    1a0c:	55 20       	and	r5, r5
    1a0e:	09 f4       	brne	.+2      	; 0x1a12 <vfprintf+0x6b2>
    1a10:	e4 cc       	rjmp	.-1592   	; 0x13da <vfprintf+0x7a>
    1a12:	b7 01       	movw	r22, r14
    1a14:	80 e2       	ldi	r24, 0x20	; 32
    1a16:	90 e0       	ldi	r25, 0x00	; 0
    1a18:	0e 94 3e 0e 	call	0x1c7c	; 0x1c7c <fputc>
    1a1c:	5a 94       	dec	r5
    1a1e:	f6 cf       	rjmp	.-20     	; 0x1a0c <vfprintf+0x6ac>
    1a20:	f7 01       	movw	r30, r14
    1a22:	86 81       	ldd	r24, Z+6	; 0x06
    1a24:	97 81       	ldd	r25, Z+7	; 0x07
    1a26:	26 c0       	rjmp	.+76     	; 0x1a74 <vfprintf+0x714>
    1a28:	8f ef       	ldi	r24, 0xFF	; 255
    1a2a:	9f ef       	ldi	r25, 0xFF	; 255
    1a2c:	23 c0       	rjmp	.+70     	; 0x1a74 <vfprintf+0x714>
    1a2e:	b7 01       	movw	r22, r14
    1a30:	80 e2       	ldi	r24, 0x20	; 32
    1a32:	90 e0       	ldi	r25, 0x00	; 0
    1a34:	0e 94 3e 0e 	call	0x1c7c	; 0x1c7c <fputc>
    1a38:	5a 94       	dec	r5
    1a3a:	51 10       	cpse	r5, r1
    1a3c:	f8 cf       	rjmp	.-16     	; 0x1a2e <vfprintf+0x6ce>
    1a3e:	d8 cf       	rjmp	.-80     	; 0x19f0 <vfprintf+0x690>
    1a40:	51 2c       	mov	r5, r1
    1a42:	b7 01       	movw	r22, r14
    1a44:	80 2f       	mov	r24, r16
    1a46:	90 e0       	ldi	r25, 0x00	; 0
    1a48:	0e 94 3e 0e 	call	0x1c7c	; 0x1c7c <fputc>
    1a4c:	d3 cf       	rjmp	.-90     	; 0x19f4 <vfprintf+0x694>
    1a4e:	08 e0       	ldi	r16, 0x08	; 8
    1a50:	12 e0       	ldi	r17, 0x02	; 2
    1a52:	d5 cf       	rjmp	.-86     	; 0x19fe <vfprintf+0x69e>
    1a54:	91 10       	cpse	r9, r1
    1a56:	80 52       	subi	r24, 0x20	; 32
    1a58:	b7 01       	movw	r22, r14
    1a5a:	90 e0       	ldi	r25, 0x00	; 0
    1a5c:	0e 94 3e 0e 	call	0x1c7c	; 0x1c7c <fputc>
    1a60:	0f 5f       	subi	r16, 0xFF	; 255
    1a62:	1f 4f       	sbci	r17, 0xFF	; 255
    1a64:	cf cf       	rjmp	.-98     	; 0x1a04 <vfprintf+0x6a4>
    1a66:	23 e0       	ldi	r18, 0x03	; 3
    1a68:	25 15       	cp	r18, r5
    1a6a:	10 f4       	brcc	.+4      	; 0x1a70 <vfprintf+0x710>
    1a6c:	83 e0       	ldi	r24, 0x03	; 3
    1a6e:	bd cf       	rjmp	.-134    	; 0x19ea <vfprintf+0x68a>
    1a70:	51 2c       	mov	r5, r1
    1a72:	c0 cf       	rjmp	.-128    	; 0x19f4 <vfprintf+0x694>
    1a74:	60 96       	adiw	r28, 0x10	; 16
    1a76:	cd bf       	out	0x3d, r28	; 61
    1a78:	de bf       	out	0x3e, r29	; 62
    1a7a:	df 91       	pop	r29
    1a7c:	cf 91       	pop	r28
    1a7e:	1f 91       	pop	r17
    1a80:	0f 91       	pop	r16
    1a82:	ff 90       	pop	r15
    1a84:	ef 90       	pop	r14
    1a86:	df 90       	pop	r13
    1a88:	cf 90       	pop	r12
    1a8a:	bf 90       	pop	r11
    1a8c:	af 90       	pop	r10
    1a8e:	9f 90       	pop	r9
    1a90:	8f 90       	pop	r8
    1a92:	7f 90       	pop	r7
    1a94:	6f 90       	pop	r6
    1a96:	5f 90       	pop	r5
    1a98:	4f 90       	pop	r4
    1a9a:	3f 90       	pop	r3
    1a9c:	2f 90       	pop	r2
    1a9e:	08 95       	ret

00001aa0 <__ftoa_engine>:
    1aa0:	28 30       	cpi	r18, 0x08	; 8
    1aa2:	08 f0       	brcs	.+2      	; 0x1aa6 <__ftoa_engine+0x6>
    1aa4:	27 e0       	ldi	r18, 0x07	; 7
    1aa6:	33 27       	eor	r19, r19
    1aa8:	da 01       	movw	r26, r20
    1aaa:	99 0f       	add	r25, r25
    1aac:	31 1d       	adc	r19, r1
    1aae:	87 fd       	sbrc	r24, 7
    1ab0:	91 60       	ori	r25, 0x01	; 1
    1ab2:	00 96       	adiw	r24, 0x00	; 0
    1ab4:	61 05       	cpc	r22, r1
    1ab6:	71 05       	cpc	r23, r1
    1ab8:	39 f4       	brne	.+14     	; 0x1ac8 <__ftoa_engine+0x28>
    1aba:	32 60       	ori	r19, 0x02	; 2
    1abc:	2e 5f       	subi	r18, 0xFE	; 254
    1abe:	3d 93       	st	X+, r19
    1ac0:	30 e3       	ldi	r19, 0x30	; 48
    1ac2:	2a 95       	dec	r18
    1ac4:	e1 f7       	brne	.-8      	; 0x1abe <__ftoa_engine+0x1e>
    1ac6:	08 95       	ret
    1ac8:	9f 3f       	cpi	r25, 0xFF	; 255
    1aca:	30 f0       	brcs	.+12     	; 0x1ad8 <__ftoa_engine+0x38>
    1acc:	80 38       	cpi	r24, 0x80	; 128
    1ace:	71 05       	cpc	r23, r1
    1ad0:	61 05       	cpc	r22, r1
    1ad2:	09 f0       	breq	.+2      	; 0x1ad6 <__ftoa_engine+0x36>
    1ad4:	3c 5f       	subi	r19, 0xFC	; 252
    1ad6:	3c 5f       	subi	r19, 0xFC	; 252
    1ad8:	3d 93       	st	X+, r19
    1ada:	91 30       	cpi	r25, 0x01	; 1
    1adc:	08 f0       	brcs	.+2      	; 0x1ae0 <__ftoa_engine+0x40>
    1ade:	80 68       	ori	r24, 0x80	; 128
    1ae0:	91 1d       	adc	r25, r1
    1ae2:	df 93       	push	r29
    1ae4:	cf 93       	push	r28
    1ae6:	1f 93       	push	r17
    1ae8:	0f 93       	push	r16
    1aea:	ff 92       	push	r15
    1aec:	ef 92       	push	r14
    1aee:	19 2f       	mov	r17, r25
    1af0:	98 7f       	andi	r25, 0xF8	; 248
    1af2:	96 95       	lsr	r25
    1af4:	e9 2f       	mov	r30, r25
    1af6:	96 95       	lsr	r25
    1af8:	96 95       	lsr	r25
    1afa:	e9 0f       	add	r30, r25
    1afc:	ff 27       	eor	r31, r31
    1afe:	ea 59       	subi	r30, 0x9A	; 154
    1b00:	fd 4f       	sbci	r31, 0xFD	; 253
    1b02:	99 27       	eor	r25, r25
    1b04:	33 27       	eor	r19, r19
    1b06:	ee 24       	eor	r14, r14
    1b08:	ff 24       	eor	r15, r15
    1b0a:	a7 01       	movw	r20, r14
    1b0c:	e7 01       	movw	r28, r14
    1b0e:	05 90       	lpm	r0, Z+
    1b10:	08 94       	sec
    1b12:	07 94       	ror	r0
    1b14:	28 f4       	brcc	.+10     	; 0x1b20 <__ftoa_engine+0x80>
    1b16:	36 0f       	add	r19, r22
    1b18:	e7 1e       	adc	r14, r23
    1b1a:	f8 1e       	adc	r15, r24
    1b1c:	49 1f       	adc	r20, r25
    1b1e:	51 1d       	adc	r21, r1
    1b20:	66 0f       	add	r22, r22
    1b22:	77 1f       	adc	r23, r23
    1b24:	88 1f       	adc	r24, r24
    1b26:	99 1f       	adc	r25, r25
    1b28:	06 94       	lsr	r0
    1b2a:	a1 f7       	brne	.-24     	; 0x1b14 <__ftoa_engine+0x74>
    1b2c:	05 90       	lpm	r0, Z+
    1b2e:	07 94       	ror	r0
    1b30:	28 f4       	brcc	.+10     	; 0x1b3c <__ftoa_engine+0x9c>
    1b32:	e7 0e       	add	r14, r23
    1b34:	f8 1e       	adc	r15, r24
    1b36:	49 1f       	adc	r20, r25
    1b38:	56 1f       	adc	r21, r22
    1b3a:	c1 1d       	adc	r28, r1
    1b3c:	77 0f       	add	r23, r23
    1b3e:	88 1f       	adc	r24, r24
    1b40:	99 1f       	adc	r25, r25
    1b42:	66 1f       	adc	r22, r22
    1b44:	06 94       	lsr	r0
    1b46:	a1 f7       	brne	.-24     	; 0x1b30 <__ftoa_engine+0x90>
    1b48:	05 90       	lpm	r0, Z+
    1b4a:	07 94       	ror	r0
    1b4c:	28 f4       	brcc	.+10     	; 0x1b58 <__ftoa_engine+0xb8>
    1b4e:	f8 0e       	add	r15, r24
    1b50:	49 1f       	adc	r20, r25
    1b52:	56 1f       	adc	r21, r22
    1b54:	c7 1f       	adc	r28, r23
    1b56:	d1 1d       	adc	r29, r1
    1b58:	88 0f       	add	r24, r24
    1b5a:	99 1f       	adc	r25, r25
    1b5c:	66 1f       	adc	r22, r22
    1b5e:	77 1f       	adc	r23, r23
    1b60:	06 94       	lsr	r0
    1b62:	a1 f7       	brne	.-24     	; 0x1b4c <__ftoa_engine+0xac>
    1b64:	05 90       	lpm	r0, Z+
    1b66:	07 94       	ror	r0
    1b68:	20 f4       	brcc	.+8      	; 0x1b72 <__ftoa_engine+0xd2>
    1b6a:	49 0f       	add	r20, r25
    1b6c:	56 1f       	adc	r21, r22
    1b6e:	c7 1f       	adc	r28, r23
    1b70:	d8 1f       	adc	r29, r24
    1b72:	99 0f       	add	r25, r25
    1b74:	66 1f       	adc	r22, r22
    1b76:	77 1f       	adc	r23, r23
    1b78:	88 1f       	adc	r24, r24
    1b7a:	06 94       	lsr	r0
    1b7c:	a9 f7       	brne	.-22     	; 0x1b68 <__ftoa_engine+0xc8>
    1b7e:	84 91       	lpm	r24, Z
    1b80:	10 95       	com	r17
    1b82:	17 70       	andi	r17, 0x07	; 7
    1b84:	41 f0       	breq	.+16     	; 0x1b96 <__ftoa_engine+0xf6>
    1b86:	d6 95       	lsr	r29
    1b88:	c7 95       	ror	r28
    1b8a:	57 95       	ror	r21
    1b8c:	47 95       	ror	r20
    1b8e:	f7 94       	ror	r15
    1b90:	e7 94       	ror	r14
    1b92:	1a 95       	dec	r17
    1b94:	c1 f7       	brne	.-16     	; 0x1b86 <__ftoa_engine+0xe6>
    1b96:	ec e0       	ldi	r30, 0x0C	; 12
    1b98:	f2 e0       	ldi	r31, 0x02	; 2
    1b9a:	68 94       	set
    1b9c:	15 90       	lpm	r1, Z+
    1b9e:	15 91       	lpm	r17, Z+
    1ba0:	35 91       	lpm	r19, Z+
    1ba2:	65 91       	lpm	r22, Z+
    1ba4:	95 91       	lpm	r25, Z+
    1ba6:	05 90       	lpm	r0, Z+
    1ba8:	7f e2       	ldi	r23, 0x2F	; 47
    1baa:	73 95       	inc	r23
    1bac:	e1 18       	sub	r14, r1
    1bae:	f1 0a       	sbc	r15, r17
    1bb0:	43 0b       	sbc	r20, r19
    1bb2:	56 0b       	sbc	r21, r22
    1bb4:	c9 0b       	sbc	r28, r25
    1bb6:	d0 09       	sbc	r29, r0
    1bb8:	c0 f7       	brcc	.-16     	; 0x1baa <__ftoa_engine+0x10a>
    1bba:	e1 0c       	add	r14, r1
    1bbc:	f1 1e       	adc	r15, r17
    1bbe:	43 1f       	adc	r20, r19
    1bc0:	56 1f       	adc	r21, r22
    1bc2:	c9 1f       	adc	r28, r25
    1bc4:	d0 1d       	adc	r29, r0
    1bc6:	7e f4       	brtc	.+30     	; 0x1be6 <__ftoa_engine+0x146>
    1bc8:	70 33       	cpi	r23, 0x30	; 48
    1bca:	11 f4       	brne	.+4      	; 0x1bd0 <__ftoa_engine+0x130>
    1bcc:	8a 95       	dec	r24
    1bce:	e6 cf       	rjmp	.-52     	; 0x1b9c <__ftoa_engine+0xfc>
    1bd0:	e8 94       	clt
    1bd2:	01 50       	subi	r16, 0x01	; 1
    1bd4:	30 f0       	brcs	.+12     	; 0x1be2 <__ftoa_engine+0x142>
    1bd6:	08 0f       	add	r16, r24
    1bd8:	0a f4       	brpl	.+2      	; 0x1bdc <__ftoa_engine+0x13c>
    1bda:	00 27       	eor	r16, r16
    1bdc:	02 17       	cp	r16, r18
    1bde:	08 f4       	brcc	.+2      	; 0x1be2 <__ftoa_engine+0x142>
    1be0:	20 2f       	mov	r18, r16
    1be2:	23 95       	inc	r18
    1be4:	02 2f       	mov	r16, r18
    1be6:	7a 33       	cpi	r23, 0x3A	; 58
    1be8:	28 f0       	brcs	.+10     	; 0x1bf4 <__ftoa_engine+0x154>
    1bea:	79 e3       	ldi	r23, 0x39	; 57
    1bec:	7d 93       	st	X+, r23
    1bee:	2a 95       	dec	r18
    1bf0:	e9 f7       	brne	.-6      	; 0x1bec <__ftoa_engine+0x14c>
    1bf2:	10 c0       	rjmp	.+32     	; 0x1c14 <__ftoa_engine+0x174>
    1bf4:	7d 93       	st	X+, r23
    1bf6:	2a 95       	dec	r18
    1bf8:	89 f6       	brne	.-94     	; 0x1b9c <__ftoa_engine+0xfc>
    1bfa:	06 94       	lsr	r0
    1bfc:	97 95       	ror	r25
    1bfe:	67 95       	ror	r22
    1c00:	37 95       	ror	r19
    1c02:	17 95       	ror	r17
    1c04:	17 94       	ror	r1
    1c06:	e1 18       	sub	r14, r1
    1c08:	f1 0a       	sbc	r15, r17
    1c0a:	43 0b       	sbc	r20, r19
    1c0c:	56 0b       	sbc	r21, r22
    1c0e:	c9 0b       	sbc	r28, r25
    1c10:	d0 09       	sbc	r29, r0
    1c12:	98 f0       	brcs	.+38     	; 0x1c3a <__ftoa_engine+0x19a>
    1c14:	23 95       	inc	r18
    1c16:	7e 91       	ld	r23, -X
    1c18:	73 95       	inc	r23
    1c1a:	7a 33       	cpi	r23, 0x3A	; 58
    1c1c:	08 f0       	brcs	.+2      	; 0x1c20 <__ftoa_engine+0x180>
    1c1e:	70 e3       	ldi	r23, 0x30	; 48
    1c20:	7c 93       	st	X, r23
    1c22:	20 13       	cpse	r18, r16
    1c24:	b8 f7       	brcc	.-18     	; 0x1c14 <__ftoa_engine+0x174>
    1c26:	7e 91       	ld	r23, -X
    1c28:	70 61       	ori	r23, 0x10	; 16
    1c2a:	7d 93       	st	X+, r23
    1c2c:	30 f0       	brcs	.+12     	; 0x1c3a <__ftoa_engine+0x19a>
    1c2e:	83 95       	inc	r24
    1c30:	71 e3       	ldi	r23, 0x31	; 49
    1c32:	7d 93       	st	X+, r23
    1c34:	70 e3       	ldi	r23, 0x30	; 48
    1c36:	2a 95       	dec	r18
    1c38:	e1 f7       	brne	.-8      	; 0x1c32 <__ftoa_engine+0x192>
    1c3a:	11 24       	eor	r1, r1
    1c3c:	ef 90       	pop	r14
    1c3e:	ff 90       	pop	r15
    1c40:	0f 91       	pop	r16
    1c42:	1f 91       	pop	r17
    1c44:	cf 91       	pop	r28
    1c46:	df 91       	pop	r29
    1c48:	99 27       	eor	r25, r25
    1c4a:	87 fd       	sbrc	r24, 7
    1c4c:	90 95       	com	r25
    1c4e:	08 95       	ret

00001c50 <strnlen_P>:
    1c50:	fc 01       	movw	r30, r24
    1c52:	05 90       	lpm	r0, Z+
    1c54:	61 50       	subi	r22, 0x01	; 1
    1c56:	70 40       	sbci	r23, 0x00	; 0
    1c58:	01 10       	cpse	r0, r1
    1c5a:	d8 f7       	brcc	.-10     	; 0x1c52 <strnlen_P+0x2>
    1c5c:	80 95       	com	r24
    1c5e:	90 95       	com	r25
    1c60:	8e 0f       	add	r24, r30
    1c62:	9f 1f       	adc	r25, r31
    1c64:	08 95       	ret

00001c66 <strnlen>:
    1c66:	fc 01       	movw	r30, r24
    1c68:	61 50       	subi	r22, 0x01	; 1
    1c6a:	70 40       	sbci	r23, 0x00	; 0
    1c6c:	01 90       	ld	r0, Z+
    1c6e:	01 10       	cpse	r0, r1
    1c70:	d8 f7       	brcc	.-10     	; 0x1c68 <strnlen+0x2>
    1c72:	80 95       	com	r24
    1c74:	90 95       	com	r25
    1c76:	8e 0f       	add	r24, r30
    1c78:	9f 1f       	adc	r25, r31
    1c7a:	08 95       	ret

00001c7c <fputc>:
    1c7c:	0f 93       	push	r16
    1c7e:	1f 93       	push	r17
    1c80:	cf 93       	push	r28
    1c82:	df 93       	push	r29
    1c84:	fb 01       	movw	r30, r22
    1c86:	23 81       	ldd	r18, Z+3	; 0x03
    1c88:	21 fd       	sbrc	r18, 1
    1c8a:	03 c0       	rjmp	.+6      	; 0x1c92 <fputc+0x16>
    1c8c:	8f ef       	ldi	r24, 0xFF	; 255
    1c8e:	9f ef       	ldi	r25, 0xFF	; 255
    1c90:	2c c0       	rjmp	.+88     	; 0x1cea <fputc+0x6e>
    1c92:	22 ff       	sbrs	r18, 2
    1c94:	16 c0       	rjmp	.+44     	; 0x1cc2 <fputc+0x46>
    1c96:	46 81       	ldd	r20, Z+6	; 0x06
    1c98:	57 81       	ldd	r21, Z+7	; 0x07
    1c9a:	24 81       	ldd	r18, Z+4	; 0x04
    1c9c:	35 81       	ldd	r19, Z+5	; 0x05
    1c9e:	42 17       	cp	r20, r18
    1ca0:	53 07       	cpc	r21, r19
    1ca2:	44 f4       	brge	.+16     	; 0x1cb4 <fputc+0x38>
    1ca4:	a0 81       	ld	r26, Z
    1ca6:	b1 81       	ldd	r27, Z+1	; 0x01
    1ca8:	9d 01       	movw	r18, r26
    1caa:	2f 5f       	subi	r18, 0xFF	; 255
    1cac:	3f 4f       	sbci	r19, 0xFF	; 255
    1cae:	20 83       	st	Z, r18
    1cb0:	31 83       	std	Z+1, r19	; 0x01
    1cb2:	8c 93       	st	X, r24
    1cb4:	26 81       	ldd	r18, Z+6	; 0x06
    1cb6:	37 81       	ldd	r19, Z+7	; 0x07
    1cb8:	2f 5f       	subi	r18, 0xFF	; 255
    1cba:	3f 4f       	sbci	r19, 0xFF	; 255
    1cbc:	26 83       	std	Z+6, r18	; 0x06
    1cbe:	37 83       	std	Z+7, r19	; 0x07
    1cc0:	14 c0       	rjmp	.+40     	; 0x1cea <fputc+0x6e>
    1cc2:	8b 01       	movw	r16, r22
    1cc4:	ec 01       	movw	r28, r24
    1cc6:	fb 01       	movw	r30, r22
    1cc8:	00 84       	ldd	r0, Z+8	; 0x08
    1cca:	f1 85       	ldd	r31, Z+9	; 0x09
    1ccc:	e0 2d       	mov	r30, r0
    1cce:	19 95       	eicall
    1cd0:	89 2b       	or	r24, r25
    1cd2:	e1 f6       	brne	.-72     	; 0x1c8c <fputc+0x10>
    1cd4:	d8 01       	movw	r26, r16
    1cd6:	16 96       	adiw	r26, 0x06	; 6
    1cd8:	8d 91       	ld	r24, X+
    1cda:	9c 91       	ld	r25, X
    1cdc:	17 97       	sbiw	r26, 0x07	; 7
    1cde:	01 96       	adiw	r24, 0x01	; 1
    1ce0:	16 96       	adiw	r26, 0x06	; 6
    1ce2:	8d 93       	st	X+, r24
    1ce4:	9c 93       	st	X, r25
    1ce6:	17 97       	sbiw	r26, 0x07	; 7
    1ce8:	ce 01       	movw	r24, r28
    1cea:	df 91       	pop	r29
    1cec:	cf 91       	pop	r28
    1cee:	1f 91       	pop	r17
    1cf0:	0f 91       	pop	r16
    1cf2:	08 95       	ret

00001cf4 <printf>:
    1cf4:	cf 93       	push	r28
    1cf6:	df 93       	push	r29
    1cf8:	cd b7       	in	r28, 0x3d	; 61
    1cfa:	de b7       	in	r29, 0x3e	; 62
    1cfc:	ae 01       	movw	r20, r28
    1cfe:	4a 5f       	subi	r20, 0xFA	; 250
    1d00:	5f 4f       	sbci	r21, 0xFF	; 255
    1d02:	fa 01       	movw	r30, r20
    1d04:	61 91       	ld	r22, Z+
    1d06:	71 91       	ld	r23, Z+
    1d08:	af 01       	movw	r20, r30
    1d0a:	80 91 7b 20 	lds	r24, 0x207B	; 0x80207b <__iob+0x2>
    1d0e:	90 91 7c 20 	lds	r25, 0x207C	; 0x80207c <__iob+0x3>
    1d12:	0e 94 b0 09 	call	0x1360	; 0x1360 <vfprintf>
    1d16:	df 91       	pop	r29
    1d18:	cf 91       	pop	r28
    1d1a:	08 95       	ret

00001d1c <__ultoa_invert>:
    1d1c:	fa 01       	movw	r30, r20
    1d1e:	aa 27       	eor	r26, r26
    1d20:	28 30       	cpi	r18, 0x08	; 8
    1d22:	51 f1       	breq	.+84     	; 0x1d78 <__ultoa_invert+0x5c>
    1d24:	20 31       	cpi	r18, 0x10	; 16
    1d26:	81 f1       	breq	.+96     	; 0x1d88 <__ultoa_invert+0x6c>
    1d28:	e8 94       	clt
    1d2a:	6f 93       	push	r22
    1d2c:	6e 7f       	andi	r22, 0xFE	; 254
    1d2e:	6e 5f       	subi	r22, 0xFE	; 254
    1d30:	7f 4f       	sbci	r23, 0xFF	; 255
    1d32:	8f 4f       	sbci	r24, 0xFF	; 255
    1d34:	9f 4f       	sbci	r25, 0xFF	; 255
    1d36:	af 4f       	sbci	r26, 0xFF	; 255
    1d38:	b1 e0       	ldi	r27, 0x01	; 1
    1d3a:	3e d0       	rcall	.+124    	; 0x1db8 <__ultoa_invert+0x9c>
    1d3c:	b4 e0       	ldi	r27, 0x04	; 4
    1d3e:	3c d0       	rcall	.+120    	; 0x1db8 <__ultoa_invert+0x9c>
    1d40:	67 0f       	add	r22, r23
    1d42:	78 1f       	adc	r23, r24
    1d44:	89 1f       	adc	r24, r25
    1d46:	9a 1f       	adc	r25, r26
    1d48:	a1 1d       	adc	r26, r1
    1d4a:	68 0f       	add	r22, r24
    1d4c:	79 1f       	adc	r23, r25
    1d4e:	8a 1f       	adc	r24, r26
    1d50:	91 1d       	adc	r25, r1
    1d52:	a1 1d       	adc	r26, r1
    1d54:	6a 0f       	add	r22, r26
    1d56:	71 1d       	adc	r23, r1
    1d58:	81 1d       	adc	r24, r1
    1d5a:	91 1d       	adc	r25, r1
    1d5c:	a1 1d       	adc	r26, r1
    1d5e:	20 d0       	rcall	.+64     	; 0x1da0 <__ultoa_invert+0x84>
    1d60:	09 f4       	brne	.+2      	; 0x1d64 <__ultoa_invert+0x48>
    1d62:	68 94       	set
    1d64:	3f 91       	pop	r19
    1d66:	2a e0       	ldi	r18, 0x0A	; 10
    1d68:	26 9f       	mul	r18, r22
    1d6a:	11 24       	eor	r1, r1
    1d6c:	30 19       	sub	r19, r0
    1d6e:	30 5d       	subi	r19, 0xD0	; 208
    1d70:	31 93       	st	Z+, r19
    1d72:	de f6       	brtc	.-74     	; 0x1d2a <__ultoa_invert+0xe>
    1d74:	cf 01       	movw	r24, r30
    1d76:	08 95       	ret
    1d78:	46 2f       	mov	r20, r22
    1d7a:	47 70       	andi	r20, 0x07	; 7
    1d7c:	40 5d       	subi	r20, 0xD0	; 208
    1d7e:	41 93       	st	Z+, r20
    1d80:	b3 e0       	ldi	r27, 0x03	; 3
    1d82:	0f d0       	rcall	.+30     	; 0x1da2 <__ultoa_invert+0x86>
    1d84:	c9 f7       	brne	.-14     	; 0x1d78 <__ultoa_invert+0x5c>
    1d86:	f6 cf       	rjmp	.-20     	; 0x1d74 <__ultoa_invert+0x58>
    1d88:	46 2f       	mov	r20, r22
    1d8a:	4f 70       	andi	r20, 0x0F	; 15
    1d8c:	40 5d       	subi	r20, 0xD0	; 208
    1d8e:	4a 33       	cpi	r20, 0x3A	; 58
    1d90:	18 f0       	brcs	.+6      	; 0x1d98 <__ultoa_invert+0x7c>
    1d92:	49 5d       	subi	r20, 0xD9	; 217
    1d94:	31 fd       	sbrc	r19, 1
    1d96:	40 52       	subi	r20, 0x20	; 32
    1d98:	41 93       	st	Z+, r20
    1d9a:	02 d0       	rcall	.+4      	; 0x1da0 <__ultoa_invert+0x84>
    1d9c:	a9 f7       	brne	.-22     	; 0x1d88 <__ultoa_invert+0x6c>
    1d9e:	ea cf       	rjmp	.-44     	; 0x1d74 <__ultoa_invert+0x58>
    1da0:	b4 e0       	ldi	r27, 0x04	; 4
    1da2:	a6 95       	lsr	r26
    1da4:	97 95       	ror	r25
    1da6:	87 95       	ror	r24
    1da8:	77 95       	ror	r23
    1daa:	67 95       	ror	r22
    1dac:	ba 95       	dec	r27
    1dae:	c9 f7       	brne	.-14     	; 0x1da2 <__ultoa_invert+0x86>
    1db0:	00 97       	sbiw	r24, 0x00	; 0
    1db2:	61 05       	cpc	r22, r1
    1db4:	71 05       	cpc	r23, r1
    1db6:	08 95       	ret
    1db8:	9b 01       	movw	r18, r22
    1dba:	ac 01       	movw	r20, r24
    1dbc:	0a 2e       	mov	r0, r26
    1dbe:	06 94       	lsr	r0
    1dc0:	57 95       	ror	r21
    1dc2:	47 95       	ror	r20
    1dc4:	37 95       	ror	r19
    1dc6:	27 95       	ror	r18
    1dc8:	ba 95       	dec	r27
    1dca:	c9 f7       	brne	.-14     	; 0x1dbe <__ultoa_invert+0xa2>
    1dcc:	62 0f       	add	r22, r18
    1dce:	73 1f       	adc	r23, r19
    1dd0:	84 1f       	adc	r24, r20
    1dd2:	95 1f       	adc	r25, r21
    1dd4:	a0 1d       	adc	r26, r0
    1dd6:	08 95       	ret

00001dd8 <_exit>:
    1dd8:	f8 94       	cli

00001dda <__stop_program>:
    1dda:	ff cf       	rjmp	.-2      	; 0x1dda <__stop_program>
